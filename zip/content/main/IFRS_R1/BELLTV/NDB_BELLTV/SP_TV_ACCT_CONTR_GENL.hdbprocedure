PROCEDURE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::SP_TV_ACCT_CONTR_GENL" 
(IN IP_CYCLE_ID NVARCHAR(3),OUT OP_STATUS NVARCHAR(100) ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	AS
BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_TV_ACCT_CONTR_GENL
-- Created By      : BC_EZ04919      
-- Create Date     : 08-10-2017
-- Description     : Data Inserted using Calculation View - CA_TV_ACCT_CONTR_GENL
--                   To NDB Table - TV_ACCT_CONTR_GENL Using this stored procedure.
-- Project         : Bell Canada
-- Release         : R1 / IFRS 
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

-- New variables for version sequence check
DECLARE LV_LOOP_ERROR_FLAG        INTEGER := 0;
DECLARE LV_PREV_ACCT_NUM		  NVARCHAR(16) := NULL;
DECLARE LV_PREV_CONT_TERM         INTEGER := NULL;
DECLARE LV_PREV_CONTR_END_DT	  DATE;
DECLARE LV_PREV_COMIT_TY          NVARCHAR(20) := NULL;

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------
DECLARE CURSOR CUR_GENL FOR 
			  SELECT
				 "ACCT_NUM",
				 "EVNT_TY",
				 "CONTR_END_DT",
				 "EVNT_EFF_DT",
				 "EVNT_ID",
				 "CONTR_ID",
				 "CONTR_TERM",
				 "COMIT_TY",
				 "PRIN_NUM",
				 "CYCL_ID",
				 "SEQ_ID",
				 "SRC_TS",
				 "PROCESS_ID",
				 "CC_EVNT_EFF_DT", 
				 "CC_AGNT_NUM"
		      FROM "_SYS_BIC"."IFRS_R1.BELLTV.NDB_BELLTV/CA_TV_ACCT_CONTR_GENL"
		      (PLACEHOLDER."$$IP_CYCL_ID$$" => IFNULL(:IP_CYCLE_ID,'999'));
		      
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_TV_ACCT_CONTR_GENL ("ACCT_NUM" NVARCHAR(16), "EVNT_EFF_DT" DATE);
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION ("ACCT_NUM" NVARCHAR(16), "EVNT_EFF_DT" DATE);

--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 		      

FOR C_GENL AS CUR_GENL DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
    END;

 -- Insert record into error table
  INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ACCT_CONTR_GENL_EH"(
              	"ACCT_NUM",
				"EVNT_TY",
				"EVNT_EFF_DT",
				"EVNT_ID",
				"ORIG_EVNT_EFF_DT",
				"CONTR_ID",
				"CONTR_END_DT",
				"CONTR_TERM",
				"COMIT_TY",
				"PRIN_NUM",
				"AGNT_NUM",
				"CYCL_ID",
				"SEQ_ID",
				"INSRT_TS",
				"SRC_TS",
				"ERROR_CODE",
				"TECHNICAL_MESSAGE",
				"ERROR_CREATE_TS") 
				 VALUES (
				  "C_GENL"."ACCT_NUM",
				  "C_GENL"."EVNT_TY",
				  "C_GENL"."CC_EVNT_EFF_DT",
				  "C_GENL"."EVNT_ID",
				  "C_GENL"."EVNT_EFF_DT",
				  "C_GENL"."CONTR_ID",
				  "C_GENL"."CONTR_END_DT",
				  "C_GENL"."CONTR_TERM",
				  "C_GENL"."COMIT_TY",
				  "C_GENL"."PRIN_NUM",
				  "C_GENL"."CC_AGNT_NUM",
				  "C_GENL"."CYCL_ID",
                  "C_GENL"."SEQ_ID",
				   LV_CUR_UTC,
				  "C_GENL"."SRC_TS",
				  ::SQL_ERROR_CODE,
				  ::SQL_ERROR_MESSAGE,
				  LV_CUR_UTC);
				  
   
	  	 LV_ERROR_FLAG := 'Y';
    END;

 -----------------------------------------------------------------------------------------------
-- Processing for Successful Records
   
        BEGIN AUTONOMOUS TRANSACTION
        	             
		INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ACCT_CONTR_GENL"(
              	"ACCT_NUM",
				"EVNT_TY",
				"EVNT_EFF_DT",
				"EVNT_ID",
				"ORIG_EVNT_EFF_DT",
				"CONTR_ID",
				"CONTR_END_DT",
				"CONTR_TERM",
				"COMIT_TY",
				"PRIN_NUM",
				"AGNT_NUM",
				"CYCL_ID",
				"SEQ_ID",
				"INSRT_TS",
				"SRC_TS")
				VALUES(
				  "C_GENL"."ACCT_NUM",
				  "C_GENL"."EVNT_TY",
				  "C_GENL"."CC_EVNT_EFF_DT",
				  "C_GENL"."EVNT_ID",
				  "C_GENL"."EVNT_EFF_DT",
				  "C_GENL"."CONTR_ID",
				  "C_GENL"."CONTR_END_DT",
				  "C_GENL"."CONTR_TERM",
				  "C_GENL"."COMIT_TY",
				  "C_GENL"."PRIN_NUM", 
				  "C_GENL"."CC_AGNT_NUM",
				  "C_GENL"."CYCL_ID",
	              "C_GENL"."SEQ_ID",
				   LV_CUR_UTC,
				  "C_GENL"."SRC_TS");
             			              
              END ;	                 
                  
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TV_ACCT_CONTR_GENL
					   ("ACCT_NUM",
					    "EVNT_EFF_DT") 
			    VALUES ("C_GENL"."ACCT_NUM",
				 	   	"C_GENL"."EVNT_EFF_DT");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("ACCT_NUM",
					    "EVNT_EFF_DT") 
			    VALUES ("C_GENL"."ACCT_NUM",
				 	   	"C_GENL"."EVNT_EFF_DT");      
					   	 
 
END FOR;                  


--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ACCT_CONTR_GENL_EH" A
  	FROM "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ACCT_CONTR_GENL_EH" A 
 	INNER JOIN #UPDATE_EH_DELETION B
    ON A."ACCT_NUM" = B."ACCT_NUM"
	    AND A."EVNT_EFF_DT" = B."EVNT_EFF_DT"
   	SET (DELETE_DATE, DELETED) = (LV_CUR_UTC, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;

END; 
