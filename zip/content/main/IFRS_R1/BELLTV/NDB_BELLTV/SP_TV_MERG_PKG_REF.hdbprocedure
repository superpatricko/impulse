PROCEDURE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::SP_TV_MERG_PKG_REF" 
(IN IP_CYCL_ID NVARCHAR(3),
OUT OP_STATUS  NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN

--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_TV_MERG_PKG_REF
-- Created By      : BC_EZ04916 (Rukhsar)       
-- Create Date     : 03-15-2017
-- Description     : Data Inserted using Calculation View - CA_TV_MERG_PKG_REF
--                   To NDB Table - TV_MERG_PKG_REF Using this stored procedure.
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------

DECLARE CURSOR C_CUR_MERG FOR
  SELECT "REC_TY_ID",
	     "PRIN_NUM",
	     "AGENT_NUM",
	     "PKG_CD",
	     "PKG_CD_DESC",
	     "BE_MERG_SERV_CD",
	     "BE_MERG_SERV_CD_DESC",
	     "MDM_MERG_PKG_CD",
	     "PRGM_PLATFORM",
         "SRC_TS",
	     "PROCESS_ID",
	     "FLAG_EXISTING_RECORD",
	     "CYCL_ID",
	     "REFERENCE_EFFECTIVE_DT",
	     "REFERENCE_EXPIRY_DT",
	     "REFERENCE_EFFECTIVE_DATE_PREV_DAY"
    FROM "_SYS_BIC"."IFRS_R1.BELLTV.NDB_BELLTV/CA_TV_MERG_PKG_REF"
         (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID)
         ORDER BY "CYCL_ID", "SEQ_ID";
 
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_TV_MERG_PKG_CD (PRIN_NUM NVARCHAR(4), AGENT_NUM NVARCHAR(4), PKG_CD NVARCHAR(5),BE_MERG_SERV_CD NVARCHAR(5),CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (PRIN_NUM NVARCHAR(4), AGENT_NUM NVARCHAR(4), PKG_CD NVARCHAR(5),BE_MERG_SERV_CD NVARCHAR(5),REFERENCE_EFFECTIVE_DT DATE);

--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 

FOR CUR_MERG AS C_CUR_MERG DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--  Insert record into error table
   	  INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_MERG_PKG_REF_EH"(	
                  "REC_TY_ID",
                  "PRIN_NUM",
                  "AGENT_NUM",
                  "PKG_CD",
                  "PKG_CD_DESC",
                  "BE_MERG_SERV_CD",
                  "BE_MERG_SERV_CD_DESC",
                  "MDM_MERG_PKG_CD",
                  "PRGM_PLATFORM",
                  "ERROR_CODE",
                  "TECHNICAL_MESSAGE",
                  "ERROR_CREATE_TS")                  
		  VALUES (CUR_MERG."REC_TY_ID",
		          CUR_MERG."PRIN_NUM",
                  CUR_MERG."AGENT_NUM",
                  CUR_MERG."PKG_CD",
                  CUR_MERG."PKG_CD_DESC",
	              CUR_MERG."BE_MERG_SERV_CD",
				  CUR_MERG."BE_MERG_SERV_CD_DESC",
				  CUR_MERG."MDM_MERG_PKG_CD",
				  CUR_MERG."PRGM_PLATFORM",
				  ::SQL_ERROR_CODE,
		          ::SQL_ERROR_MESSAGE,
		          LV_CUR_UTC);
		  
		LV_ERROR_FLAG := 'Y';
		  
	END;
	
--  If Record exists in the Target NDB Table
    IF CUR_MERG.FLAG_EXISTING_RECORD = 'U' THEN

--  Update the target NDB table
     
--  Update Expiry Date of Current NDB Record to New Record.Effective Date - 1
       UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_MERG_PKG_REF" NDB
          SET "REFERENCE_EXPIRY_DT"     = CUR_MERG."REFERENCE_EFFECTIVE_DATE_PREV_DAY",
              "MODIFIED_TS"             = LV_CUR_UTC
	    WHERE NDB.PRIN_NUM              = CUR_MERG.PRIN_NUM 
	      AND NDB.AGENT_NUM             = CUR_MERG.AGENT_NUM 
	      AND NDB.PKG_CD                = CUR_MERG.PKG_CD 
	      AND NDB.BE_MERG_SERV_CD       = CUR_MERG.BE_MERG_SERV_CD 
	      AND NDB."REFERENCE_EXPIRY_DT" = '99991231';  

--  Insert the Incoming new record
   	  INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_MERG_PKG_REF"
   	            ( "REC_TY_ID",
                  "PRIN_NUM",
                  "AGENT_NUM",
                  "PKG_CD",
                  "PKG_CD_DESC",
	              "BE_MERG_SERV_CD",
				  "BE_MERG_SERV_CD_DESC",
				  "MDM_MERG_PKG_CD",
				  "PRGM_PLATFORM",
				  "REFERENCE_EXPIRY_DT",
				  "REFERENCE_EFFECTIVE_DT")				 
		  VALUES (CUR_MERG."REC_TY_ID",
		          CUR_MERG."PRIN_NUM",
                  CUR_MERG."AGENT_NUM",
                  CUR_MERG."PKG_CD",
                  CUR_MERG."PKG_CD_DESC",
	              CUR_MERG."BE_MERG_SERV_CD",
				  CUR_MERG."BE_MERG_SERV_CD_DESC",
				  CUR_MERG."MDM_MERG_PKG_CD",
				  CUR_MERG."PRGM_PLATFORM",
				  CUR_MERG."REFERENCE_EXPIRY_DT",
				  CUR_MERG."REFERENCE_EFFECTIVE_DT");				  
		          
--  Insert PK of successfully processed Records into Local Temp Tables 
--  For Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TV_MERG_PKG_CD
		   			   (PRIN_NUM, 
		   			    AGENT_NUM, 
		   			    PKG_CD,
		   			    BE_MERG_SERV_CD)		   			     
		   		VALUES (CUR_MERG."PRIN_NUM", 
		   				CUR_MERG."AGENT_NUM", 
		   				CUR_MERG."PKG_CD",
		   				CUR_MERG."BE_MERG_SERV_CD");
		   				
		   INSERT INTO #UPDATE_EH_DELETION
		   			   (PRIN_NUM, 
		   			    AGENT_NUM, 
		   			    PKG_CD,
		   			    BE_MERG_SERV_CD,
		   			    REFERENCE_EFFECTIVE_DT) 
		   		VALUES (CUR_MERG."PRIN_NUM", 
		   				CUR_MERG."AGENT_NUM", 
		   				CUR_MERG."PKG_CD",
		   				CUR_MERG."BE_MERG_SERV_CD",
		   				CUR_MERG."SRC_TS");           
                    	
    ELSE
    
--  Insert Records into the target NDB table
     
   	  INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_MERG_PKG_REF"(
   	              REC_TY_ID,
	              PRIN_NUM,
	              AGENT_NUM,
	              PKG_CD,
	              PKG_CD_DESC,
	              BE_MERG_SERV_CD,
	              BE_MERG_SERV_CD_DESC,
	              MDM_MERG_PKG_CD,
	              PRGM_PLATFORM,
	              INSRT_TS,
	              REFERENCE_EXPIRY_DT,
	              REFERENCE_EFFECTIVE_DT)	               
	      VALUES (CUR_MERG.REC_TY_ID,
	              CUR_MERG.PRIN_NUM,
	              CUR_MERG.AGENT_NUM,
	              CUR_MERG.PKG_CD,
	              CUR_MERG.PKG_CD_DESC,
	              CUR_MERG.BE_MERG_SERV_CD,
	              CUR_MERG.BE_MERG_SERV_CD_DESC,
	              CUR_MERG.MDM_MERG_PKG_CD,
	              CUR_MERG.PRGM_PLATFORM,
	              LV_CUR_UTC,
                  CUR_MERG.REFERENCE_EXPIRY_DT,
                  CUR_MERG.REFERENCE_EFFECTIVE_DT);   	  
		          
--  Insert PK of successfully processed Records into Local Temp Tables 
--  For Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TV_MERG_PKG_CD
		   			   (PRIN_NUM, 
		   			    AGENT_NUM, 
		   			    PKG_CD,
		   			    BE_MERG_SERV_CD,
		   			    CYCL_ID) 
		   		VALUES (CUR_MERG."PRIN_NUM", 
		   				CUR_MERG."AGENT_NUM", 
		   				CUR_MERG."PKG_CD",
		   				CUR_MERG."BE_MERG_SERV_CD",
		   				CUR_MERG."CYCL_ID");
		   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
		   			   (PRIN_NUM, 
		   			    AGENT_NUM, 
		   			    PKG_CD,
		   			    BE_MERG_SERV_CD,
		   			    REFERENCE_EFFECTIVE_DT) 
		   		VALUES (CUR_MERG."PRIN_NUM", 
		   				CUR_MERG."AGENT_NUM", 
		   				CUR_MERG."PKG_CD",
		   				CUR_MERG."BE_MERG_SERV_CD",
		   				CUR_MERG."REFERENCE_EFFECTIVE_DT");  
		   
    END IF;

END FOR;		          

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table "IFRS_R1.LAND::TV_MERG_PKG_REF"
      UPDATE "LAND"."IFRS_R1.LAND::TV_MERG_PKG_REF" A
        FROM "LAND"."IFRS_R1.LAND::TV_MERG_PKG_REF" A 
   INNER JOIN #UPDATE_TV_MERG_PKG_CD B 
           ON A."PRIN_NUM"         = B."PRIN_NUM"
          AND A."AGENT_NUM"        = B."AGENT_NUM"
          AND A."PKG_CD"           = B."PKG_CD"
          AND A."BE_MERG_SERV_CD"  = B."BE_MERG_SERV_CD"
          AND A."CYCL_ID"          = B."CYCL_ID"
          SET NDB_TS = LV_CUR_UTC
        WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

      UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_MERG_PKG_REF_EH" A
        FROM "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_MERG_PKG_REF_EH" A 
  INNER JOIN #UPDATE_EH_DELETION B
          ON A."PRIN_NUM"                = B."PRIN_NUM"
         AND A."AGENT_NUM"               = B."AGENT_NUM"
         AND A."PKG_CD"                  = B."PKG_CD"
         AND A."BE_MERG_SERV_CD"         = B."BE_MERG_SERV_CD"
         AND A."REFERENCE_EFFECTIVE_DT"  = B."REFERENCE_EFFECTIVE_DT"
         SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

-- STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
-- Executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;