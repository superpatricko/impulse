PROCEDURE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::SP_TV_ORDER"
(IN IP_CYCL_ID NVARCHAR(3),
OUT OP_STATUS  NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	AS 
BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_TV_ORDER
-- Created By      : BC_EY96106       
-- Create Date     : 03-17-2017
-- Description     : Data Inserted using Calculation View - CA_TV_ORDER
--                   To NDB Table - TV_ORDER Using this stored procedure.
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------
DECLARE CURSOR CUR_ORDER FOR 
			  SELECT
				 "CO_CD",
				 "COMIT_TY",
				 "CONTR_END_DT",
				 "CONTR_INCPTN_DT",
				 "EVNT_TY",
				 "FEE",
				 "GL_ACCT_NO",
				 "GL_CC",
				 "ITEM_END_DT",
				 "ITEM_INCPTN_DT",
				 "ERROR_STATUS",
				 "ERROR_CODE",
				 "KUNNR_SID",
				 "LSE_NON_LSE",
				 "MAND_STNDLN_PRC",
				 "MAND_TRANS_PRC",
				 "MTH_T_MTH_SERV_IND",
				 "NETWK_TY",
				 "OPT_STNDLN_PRC",
				 "OPT_TRANS_PRC",
				 "PEN_FEE",
				 "PRORATED_IND",
				 "REVENUE_CD",
				 "RSN_CD",
				 "SAP_INT_ORD_NUM",
				 "TAX_JURISD_CD",
				 "TRANS_PRC",
				 "WVE_IND",
				 "EVNT_CD",
				 "ACCT_NUM",
				 "CONTR_ID",
				 "ITEM_ID",
				 "FLAG_EXISTING_RECORD",
				 "EVNT_EFF_DT",
				 "EVNT_ID",
				 "BILL_CD",
				 "PRIN_NUM",
				 "AGNT_NUM",
				 "TRANS_ID",
				 "BASE_SERV_IND",
				 "SRC_TS",
				 "CYCL_ID",
				 "DSCT_IND",
				 "CONVERSION_IND",
				 "POB_END_DT",
				 "DUO_TRIO_IND",
				 "HEADER_ID",
				 "ITEM_TRANS_ID",
				 "ITEM_TY_CD",
				 "LNK_ITEM_ID",
				 "REFERENCE_ID",
				 "REMN_MTH",
				 "PKG_CD",
				 "ORIG_CONTR_STRT_DT",
				 "CONTR_TY",
				 "DUR",
				 "CONTR_TERM",
				 "ITEM_STRT_DT",
				 "SRCDOC_ID",
				 "MIN_SPEND_AMT",
				 "FINAL_TP",
				 "SSP"
			FROM "_SYS_BIC"."IFRS_R1.BELLTV.NDB_BELLTV/CA_TV_ORDER"('PLACEHOLDER' = ('$$IP_CYCL_ID$$',
				 '999'))
            ORDER BY "CYCL_ID","EVNT_EFF_DT"
            WITH HINT (NO_REMOTE_JOIN_RELOCATION);
          
                   
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_TV_ORDER ("ACCT_NUM" NVARCHAR(16), "CONTR_ID" NVARCHAR(50),"EVNT_ID" NVARCHAR(50),"ITEM_ID" NVARCHAR(20),"TRANS_ID" NVARCHAR(50));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION ("ACCT_NUM" NVARCHAR(16), "CONTR_ID" NVARCHAR(50),"EVNT_ID" NVARCHAR(50),"ITEM_ID" NVARCHAR(20),"TRANS_ID" NVARCHAR(50));
        	  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 

FOR C_ORDER AS CUR_ORDER DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
END;
		
   -- Insert record into error table
   	  INSERT INTO   "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ORDER_EH"(
					 "ACCT_NUM",
					 "AGNT_NUM",
					 "CO_CD",
					 "COMIT_TY",
					 "CONTR_END_DT",
					 "CONTR_ID",
					 "CONTR_INCPTN_DT",
					 "CONTR_TERM",
					 "CONTR_TY",
					 "DSCT_IND",
					 "DUO_TRIO_IND",
					 "DUR",
					 "EVNT_EFF_DT",
					 "EVNT_ID",
					 "EVNT_TY",
					 "EVNT_CD",
					 "FEE",
					 "FINAL_TP",
					 "GL_ACCT_NO",
					 "GL_CC",
					 "ITEM_END_DT",
					 "ITEM_ID",
					 "ITEM_STRT_DT",
					 "ITEM_TRANS_ID",
					 "ITEM_TY_CD",
					 "LNK_ITEM_ID",
					 "LSE_NON_LSE",
					 "MAND_STNDLN_PRC",
					 "MAND_TRANS_PRC",
					 "MIN_SPEND_AMT",
					 "MTH_T_MTH_SERV_IND",
					 "NETWK_TY",
					 "OPT_STNDLN_PRC",
					 "OPT_TRANS_PRC",
					 "PKG_CD",
					 "POB_END_DT",
					 "PRIN_NUM",
					 "REMN_MTH",
					 "RSN_CD",
					 "SAP_INT_ORD_NUM",
					 "SRCDOC_ID",
					 "SSP",
					 "TAX_JURISD_CD",
					 "TP",
					 "TRANS_ID",
					 "WVE_IND",
					 "HEADER_ID",
					 "REFERENCE_ID",
					 "PRORATED_IND",
					 "REVENUE_CD",
					 "BILL_CD",
					 "PEN_FEE",
					 "CONVERSION_IND",
					 "KUNNR_SID",
					 "BASE_SERV_IND",
					 "ORIG_CONTR_STRT_DT",
					 "SRC_TS",
					 "CYCL_ID",
					"ERROR_CODE",
					"TECHNICAL_MESSAGE",
					"ERROR_CREATE_TS",
					"INSERT_TS"
					) 
					VALUES ( 
					C_ORDER. "ACCT_NUM",
					C_ORDER. "AGNT_NUM",
					C_ORDER. "CO_CD",
					C_ORDER. "COMIT_TY",
					C_ORDER. "CONTR_END_DT",
					C_ORDER. "CONTR_ID",
					C_ORDER. "CONTR_INCPTN_DT",
					C_ORDER. "CONTR_TERM",
					C_ORDER. "CONTR_TY",
					C_ORDER. "DSCT_IND",
					C_ORDER. "DUO_TRIO_IND",
					C_ORDER. "DUR",
					C_ORDER. "EVNT_EFF_DT",
					C_ORDER. "EVNT_ID",
					C_ORDER. "EVNT_TY",
					C_ORDER. "EVNT_CD",
					C_ORDER. "FEE",
					C_ORDER. "FINAL_TP",
					C_ORDER. "GL_ACCT_NO",
					C_ORDER. "GL_CC",
					C_ORDER. "ITEM_END_DT",
					C_ORDER. "ITEM_ID",
					C_ORDER. "ITEM_STRT_DT",
					C_ORDER. "ITEM_TRANS_ID",
					C_ORDER. "ITEM_TY_CD",
					C_ORDER. "LNK_ITEM_ID",
					C_ORDER. "LSE_NON_LSE",
					C_ORDER. "MAND_STNDLN_PRC",
					C_ORDER. "MAND_TRANS_PRC",
					C_ORDER. "MIN_SPEND_AMT",
					C_ORDER. "MTH_T_MTH_SERV_IND",
					C_ORDER. "NETWK_TY",
					C_ORDER. "OPT_STNDLN_PRC",
					C_ORDER. "OPT_TRANS_PRC",
					C_ORDER. "PKG_CD",
					C_ORDER. "POB_END_DT",
					C_ORDER. "PRIN_NUM",
					C_ORDER. "REMN_MTH",
					C_ORDER. "RSN_CD",
					C_ORDER. "SAP_INT_ORD_NUM",
					C_ORDER. "SRCDOC_ID",
					C_ORDER. "SSP",
					C_ORDER. "TAX_JURISD_CD",
					C_ORDER. "TRANS_PRC",
					C_ORDER. "TRANS_ID",
					C_ORDER. "WVE_IND",
					C_ORDER. "HEADER_ID",
					C_ORDER. "REFERENCE_ID",
					C_ORDER. "PRORATED_IND",
					C_ORDER. "REVENUE_CD",
					C_ORDER. "BILL_CD",
					C_ORDER. "PEN_FEE",
					C_ORDER. "CONVERSION_IND",
					C_ORDER. "KUNNR_SID",
					C_ORDER. "BASE_SERV_IND",
					C_ORDER. "ORIG_CONTR_STRT_DT",
					C_ORDER. "SRC_TS",
					C_ORDER. "CYCL_ID",
					::SQL_ERROR_CODE,
					::SQL_ERROR_MESSAGE,
					LV_CUR_UTC,
					LV_CUR_UTC);   
   
	  	 LV_ERROR_FLAG := 'Y';
    
    END;

--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF C_ORDER.ERROR_STATUS = 1 THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(C_ORDER."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
		 -- Insert into the Error Table
		       	INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ORDER_EH"(
							 "ACCT_NUM",
							 "AGNT_NUM",
							 "CO_CD",
							 "COMIT_TY",
							 "CONTR_END_DT",
							 "CONTR_ID",
							 "CONTR_INCPTN_DT",
							 "CONTR_TERM",
							 "CONTR_TY",
							 "DSCT_IND",
							 "DUO_TRIO_IND",
							 "DUR",
							 "EVNT_EFF_DT",
							 "EVNT_ID",
							 "EVNT_TY",
							 "EVNT_CD",
							 "FEE",
							 "FINAL_TP",
							 "GL_ACCT_NO",
							 "GL_CC",
							 "ITEM_END_DT",
							 "ITEM_ID",
							 "ITEM_STRT_DT",
							 "ITEM_TRANS_ID",
							 "ITEM_TY_CD",
							 "LNK_ITEM_ID",
							 "LSE_NON_LSE",
							 "MAND_STNDLN_PRC",
							 "MAND_TRANS_PRC",
							 "MIN_SPEND_AMT",
							 "MTH_T_MTH_SERV_IND",
							 "NETWK_TY",
							 "OPT_STNDLN_PRC",
							 "OPT_TRANS_PRC",
							 "PKG_CD",
							 "POB_END_DT",
							 "PRIN_NUM",
							 "REMN_MTH",
							 "RSN_CD",
							 "SAP_INT_ORD_NUM",
							 "SRCDOC_ID",
							 "SSP",
							 "TAX_JURISD_CD",
							 "TP",
							 "TRANS_ID",
							 "WVE_IND",
							 "HEADER_ID",
							 "REFERENCE_ID",
							 "PRORATED_IND",
							 "REVENUE_CD",
							 "BILL_CD",
							 "PEN_FEE",
							 "CONVERSION_IND",
							 "KUNNR_SID",
							 "BASE_SERV_IND",
							 "ORIG_CONTR_STRT_DT",
							 "SRC_TS",
							 "CYCL_ID",
							 "ERROR_CODE",
							"ERROR_CREATE_TS",
							"INSERT_TS"
							) 
							VALUES ( 
							C_ORDER. "ACCT_NUM",
							C_ORDER. "AGNT_NUM",
							C_ORDER. "CO_CD",
							C_ORDER. "COMIT_TY",
							C_ORDER. "CONTR_END_DT",
							C_ORDER. "CONTR_ID",
							C_ORDER. "CONTR_INCPTN_DT",
							C_ORDER. "CONTR_TERM",
							C_ORDER. "CONTR_TY",
							C_ORDER. "DSCT_IND",
							C_ORDER. "DUO_TRIO_IND",
							C_ORDER. "DUR",
							C_ORDER. "EVNT_EFF_DT",
							C_ORDER. "EVNT_ID",
							C_ORDER. "EVNT_TY",
							C_ORDER. "EVNT_CD",
							C_ORDER. "FEE",
							C_ORDER. "FINAL_TP",
							C_ORDER. "GL_ACCT_NO",
							C_ORDER. "GL_CC",
							C_ORDER. "ITEM_END_DT",
							C_ORDER. "ITEM_ID",
							C_ORDER. "ITEM_STRT_DT",
							C_ORDER. "ITEM_TRANS_ID",
							C_ORDER. "ITEM_TY_CD",
							C_ORDER. "LNK_ITEM_ID",
							C_ORDER. "LSE_NON_LSE",
							C_ORDER. "MAND_STNDLN_PRC",
							C_ORDER. "MAND_TRANS_PRC",
							C_ORDER. "MIN_SPEND_AMT",
							C_ORDER. "MTH_T_MTH_SERV_IND",
							C_ORDER. "NETWK_TY",
							C_ORDER. "OPT_STNDLN_PRC",
							C_ORDER. "OPT_TRANS_PRC",
							C_ORDER. "PKG_CD",
							C_ORDER. "POB_END_DT",
							C_ORDER. "PRIN_NUM",
							C_ORDER. "REMN_MTH",
							C_ORDER. "RSN_CD",
							C_ORDER. "SAP_INT_ORD_NUM",
							C_ORDER. "SRCDOC_ID",
							C_ORDER. "SSP",
							C_ORDER. "TAX_JURISD_CD",
							C_ORDER. "TRANS_PRC",
							C_ORDER. "TRANS_ID",
							C_ORDER. "WVE_IND",
							C_ORDER. "HEADER_ID",
							C_ORDER. "REFERENCE_ID",
							C_ORDER. "PRORATED_IND",
							C_ORDER. "REVENUE_CD",
							C_ORDER. "BILL_CD",
							C_ORDER. "PEN_FEE",
							C_ORDER. "CONVERSION_IND",
							C_ORDER. "KUNNR_SID",
							C_ORDER. "BASE_SERV_IND",
							C_ORDER. "ORIG_CONTR_STRT_DT",
							C_ORDER. "SRC_TS",
							C_ORDER. "CYCL_ID",
							:CURRENT_ERROR,
							LV_CUR_UTC,
							LV_CUR_UTC); 
				     
         -- Set Error Flag				        
			LV_ERROR_FLAG := 'Y';
			
		END FOR;

-- Processing for Successful Records
   ELSE

--   If Record exists in the Target NDB Table
     IF C_ORDER.FLAG_EXISTING_RECORD = 'U' THEN

BEGIN AUTONOMOUS TRANSACTION

--     Update the target NDB table
	   UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ORDER" NDB 
		  SET NDB."POB_END_DT" = ADD_DAYS(C_ORDER."ITEM_INCPTN_DT",-1),
	 		  NDB.MODIFIED_TS = LV_CUR_UTC 
		WHERE NDB."ACCT_NUM" = C_ORDER."ACCT_NUM" AND 
			  NDB."CONTR_ID" = C_ORDER."CONTR_ID" AND
			  NDB."EVNT_ID" = C_ORDER."EVNT_ID" AND
			  NDB."ITEM_ID" = C_ORDER."ITEM_ID" AND
			  NDB."TRANS_ID" = C_ORDER."TRANS_ID" AND
		      NDB."POB_END_DT" = '99991231';
		  
		  
--    Insert the new records having FLAG_EXISTING_RECORD = 'U'
        INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ORDER"(
   	  			    "ACCT_NUM",
					 "AGNT_NUM",
					 "CO_CD",
					 "COMIT_TY",
					 "CONTR_END_DT",
					 "CONTR_ID",
					 "CONTR_INCPTN_DT",
					 "CONTR_TERM",
					 "CONTR_TY",
					 "DSCT_IND",
					 "DUO_TRIO_IND",
					 "DUR",
					 "EVNT_EFF_DT",
					 "EVNT_ID",
					 "EVNT_TY",
					 "EVNT_CD",
					 "FEE",
					 "FINAL_TP",
					 "GL_ACCT_NO",
					 "GL_CC",
					 "ITEM_END_DT",
					 "ITEM_ID",
					 "ITEM_STRT_DT",
					 "ITEM_TRANS_ID",
					 "ITEM_TY_CD",
					 "LNK_ITEM_ID",
					 "LSE_NON_LSE",
					 "MAND_STNDLN_PRC",
					 "MAND_TRANS_PRC",
					 "MIN_SPEND_AMT",
					 "MTH_T_MTH_SERV_IND",
					 "NETWK_TY",
					 "OPT_STNDLN_PRC",
					 "OPT_TRANS_PRC",
					 "PKG_CD",
					 "POB_END_DT",
					 "PRIN_NUM",
					 "REMN_MTH",
					 "RSN_CD",
					 "SAP_INT_ORD_NUM",
					 "SRCDOC_ID",
					 "SSP",
					 "TAX_JURISD_CD",
					 "TP",
					 "TRANS_ID",
					 "WVE_IND",
					 "HEADER_ID",
					 "REFERENCE_ID",
					 "PRORATED_IND",
					 "REVENUE_CD",
					 "BILL_CD",
					 "PEN_FEE",
					 "CONVERSION_IND",
					 "KUNNR_SID",
					 "BASE_SERV_IND",
					 "ORIG_CONTR_STRT_DT",
					 "SRC_TS",
					 "CYCL_ID",
					 "INSERT_TS"
					) 
					VALUES ( 
					C_ORDER. "ACCT_NUM",
					C_ORDER. "AGNT_NUM",
					C_ORDER. "CO_CD",
					C_ORDER. "COMIT_TY",
					C_ORDER. "CONTR_END_DT",
					C_ORDER. "CONTR_ID",
					C_ORDER. "CONTR_INCPTN_DT",
					C_ORDER. "CONTR_TERM",
					C_ORDER. "CONTR_TY",
					C_ORDER. "DSCT_IND",
					C_ORDER. "DUO_TRIO_IND",
					C_ORDER. "DUR",
					C_ORDER. "EVNT_EFF_DT",
					C_ORDER. "EVNT_ID",
					C_ORDER. "EVNT_TY",
					C_ORDER. "EVNT_CD",
					C_ORDER. "FEE",
					C_ORDER. "FINAL_TP",
					C_ORDER. "GL_ACCT_NO",
					C_ORDER. "GL_CC",
					C_ORDER. "ITEM_END_DT",
					C_ORDER. "ITEM_ID",
					C_ORDER. "ITEM_STRT_DT",
					C_ORDER. "ITEM_TRANS_ID",
					C_ORDER. "ITEM_TY_CD",
					C_ORDER. "LNK_ITEM_ID",
					C_ORDER. "LSE_NON_LSE",
					C_ORDER. "MAND_STNDLN_PRC",
					C_ORDER. "MAND_TRANS_PRC",
					C_ORDER. "MIN_SPEND_AMT",
					C_ORDER. "MTH_T_MTH_SERV_IND",
					C_ORDER. "NETWK_TY",
					C_ORDER. "OPT_STNDLN_PRC",
					C_ORDER. "OPT_TRANS_PRC",
					C_ORDER. "PKG_CD",
					C_ORDER. "POB_END_DT",
					C_ORDER. "PRIN_NUM",
					C_ORDER. "REMN_MTH",
					C_ORDER. "RSN_CD",
					C_ORDER. "SAP_INT_ORD_NUM",
					C_ORDER. "SRCDOC_ID",
					C_ORDER. "SSP",
					C_ORDER. "TAX_JURISD_CD",
					C_ORDER. "TRANS_PRC",
					C_ORDER. "TRANS_ID",
					C_ORDER. "WVE_IND",
					C_ORDER. "HEADER_ID",
					C_ORDER. "REFERENCE_ID",
					C_ORDER. "PRORATED_IND",
					C_ORDER. "REVENUE_CD",
					C_ORDER. "BILL_CD",
					C_ORDER. "PEN_FEE",
					C_ORDER. "CONVERSION_IND",
					C_ORDER. "KUNNR_SID",
					C_ORDER. "BASE_SERV_IND",
					C_ORDER. "ORIG_CONTR_STRT_DT",
					C_ORDER. "SRC_TS",
					C_ORDER. "CYCL_ID",
					LV_CUR_UTC);
	
END;					 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TV_ORDER
					   ("ACCT_NUM", 
					    "CONTR_ID", 
					   	"EVNT_ID",
					   	"ITEM_ID",
					   	"TRANS_ID") 
			    VALUES (C_ORDER."ACCT_NUM", 
					    C_ORDER."CONTR_ID", 
					   	C_ORDER."EVNT_ID",
					   	C_ORDER."ITEM_ID",
					   	C_ORDER."TRANS_ID");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("ACCT_NUM", 
					    "CONTR_ID", 
					   	"EVNT_ID",
					   	"ITEM_ID",
					   	"TRANS_ID") 
			    VALUES (C_ORDER."ACCT_NUM", 
					    C_ORDER."CONTR_ID", 
					   	C_ORDER."EVNT_ID",
					   	C_ORDER."ITEM_ID",
					   	C_ORDER."TRANS_ID");           
                    	
    ELSE
    
--    Insert Records into the target NDB table
        INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ORDER"(
   	  		   	     "ACCT_NUM",
					 "AGNT_NUM",
					 "CO_CD",
					 "COMIT_TY",
					 "CONTR_END_DT",
					 "CONTR_ID",
					 "CONTR_INCPTN_DT",
					 "CONTR_TERM",
					 "CONTR_TY",
					 "DSCT_IND",
					 "DUO_TRIO_IND",
					 "DUR",
					 "EVNT_EFF_DT",
					 "EVNT_ID",
					 "EVNT_TY",
					 "EVNT_CD",
					 "FEE",
					 "FINAL_TP",
					 "GL_ACCT_NO",
					 "GL_CC",
					 "ITEM_END_DT",
					 "ITEM_ID",
					 "ITEM_STRT_DT",
					 "ITEM_TRANS_ID",
					 "ITEM_TY_CD",
					 "LNK_ITEM_ID",
					 "LSE_NON_LSE",
					 "MAND_STNDLN_PRC",
					 "MAND_TRANS_PRC",
					 "MIN_SPEND_AMT",
					 "MTH_T_MTH_SERV_IND",
					 "NETWK_TY",
					 "OPT_STNDLN_PRC",
					 "OPT_TRANS_PRC",
					 "PKG_CD",
					 "POB_END_DT",
					 "PRIN_NUM",
					 "REMN_MTH",
					 "RSN_CD",
					 "SAP_INT_ORD_NUM",
					 "SRCDOC_ID",
					 "SSP",
					 "TAX_JURISD_CD",
					 "TP",
					 "TRANS_ID",
					 "WVE_IND",
					 "HEADER_ID",
					 "REFERENCE_ID",
					 "PRORATED_IND",
					 "REVENUE_CD",
					 "BILL_CD",
					 "PEN_FEE",
					 "CONVERSION_IND",
					 "KUNNR_SID",
					 "BASE_SERV_IND",
					 "ORIG_CONTR_STRT_DT",
					 "SRC_TS",
					 "CYCL_ID",
					 "INSERT_TS"
					) 
					VALUES ( 
					C_ORDER. "ACCT_NUM",
					C_ORDER. "AGNT_NUM",
					C_ORDER. "CO_CD",
					C_ORDER. "COMIT_TY",
					C_ORDER. "CONTR_END_DT",
					C_ORDER. "CONTR_ID",
					C_ORDER. "CONTR_INCPTN_DT",
					C_ORDER. "CONTR_TERM",
					C_ORDER. "CONTR_TY",
					C_ORDER. "DSCT_IND",
					C_ORDER. "DUO_TRIO_IND",
					C_ORDER. "DUR",
					C_ORDER. "EVNT_EFF_DT",
					C_ORDER. "EVNT_ID",
					C_ORDER. "EVNT_TY",
					C_ORDER. "EVNT_CD",
					C_ORDER. "FEE",
					C_ORDER. "FINAL_TP",
					C_ORDER. "GL_ACCT_NO",
					C_ORDER. "GL_CC",
					C_ORDER. "ITEM_END_DT",
					C_ORDER. "ITEM_ID",
					C_ORDER. "ITEM_STRT_DT",
					C_ORDER. "ITEM_TRANS_ID",
					C_ORDER. "ITEM_TY_CD",
					C_ORDER. "LNK_ITEM_ID",
					C_ORDER. "LSE_NON_LSE",
					C_ORDER. "MAND_STNDLN_PRC",
					C_ORDER. "MAND_TRANS_PRC",
					C_ORDER. "MIN_SPEND_AMT",
					C_ORDER. "MTH_T_MTH_SERV_IND",
					C_ORDER. "NETWK_TY",
					C_ORDER. "OPT_STNDLN_PRC",
					C_ORDER. "OPT_TRANS_PRC",
					C_ORDER. "PKG_CD",
					C_ORDER. "POB_END_DT",
					C_ORDER. "PRIN_NUM",
					C_ORDER. "REMN_MTH",
					C_ORDER. "RSN_CD",
					C_ORDER. "SAP_INT_ORD_NUM",
					C_ORDER. "SRCDOC_ID",
					C_ORDER. "SSP",
					C_ORDER. "TAX_JURISD_CD",
					C_ORDER. "TRANS_PRC",
					C_ORDER. "TRANS_ID",
					C_ORDER. "WVE_IND",
					C_ORDER. "HEADER_ID",
					C_ORDER. "REFERENCE_ID",
					C_ORDER. "PRORATED_IND",
					C_ORDER. "REVENUE_CD",
					C_ORDER. "BILL_CD",
					C_ORDER. "PEN_FEE",
					C_ORDER. "CONVERSION_IND",
					C_ORDER. "KUNNR_SID",
					C_ORDER. "BASE_SERV_IND",
					C_ORDER. "ORIG_CONTR_STRT_DT",
					C_ORDER. "SRC_TS",
					C_ORDER. "CYCL_ID",
					LV_CUR_UTC);
					 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TV_ORDER
					   ("ACCT_NUM", 
					    "CONTR_ID", 
					   	"EVNT_ID",
					   	"ITEM_ID",
					   	"TRANS_ID") 
			    VALUES (C_ORDER."ACCT_NUM", 
					    C_ORDER."CONTR_ID", 
					   	C_ORDER."EVNT_ID",
					   	C_ORDER."ITEM_ID",
					   	C_ORDER."TRANS_ID");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("ACCT_NUM", 
					    "CONTR_ID", 
					   	"EVNT_ID",
					   	"ITEM_ID",
					   	"TRANS_ID") 
			    VALUES (C_ORDER."ACCT_NUM", 
					    C_ORDER."CONTR_ID", 
					   	C_ORDER."EVNT_ID",
					   	C_ORDER."ITEM_ID",
					   	C_ORDER."TRANS_ID");
					   	 
    END IF;
    
  END IF;  

END FOR;					   			    

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::MDM_TEL_BILL_CD

 UPDATE "LAND"."IFRS_R1.LAND::TV_ACCT_CONTR_GENL" A
 	FROM "LAND"."IFRS_R1.LAND::TV_ACCT_CONTR_GENL" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	SET A.SP_TV_ORDER_TS = LV_CUR_UTC
 	WHERE A.SP_TV_ORDER_TS IS NULL;
 
 UPDATE "LAND"."IFRS_R1.LAND::TV_ACCT_CONTR_ITEM" A
 	FROM "LAND"."IFRS_R1.LAND::TV_ACCT_CONTR_ITEM" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	AND A.ITEM_ID = B.ITEM_ID
 	SET A.NDB_TS = LV_CUR_UTC
 	WHERE A.NDB_TS IS NULL;
 
  UPDATE "LAND"."IFRS_R1.LAND::TV_ACCT_CONTR_DSCT" A
 	FROM "LAND"."IFRS_R1.LAND::TV_ACCT_CONTR_DSCT" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	AND A.DSCT_ID = B.ITEM_ID 
 	SET A.NDB_TS = LV_CUR_UTC
 	WHERE A.NDB_TS IS NULL;
 
  UPDATE "LAND"."IFRS_R1.LAND::TV_EQP_CONTR_GENL" A
 	FROM "LAND"."IFRS_R1.LAND::TV_EQP_CONTR_GENL" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	SET A.SP_TV_ORDER_TS = LV_CUR_UTC
 	WHERE A.SP_TV_ORDER_TS IS NULL;
					  
					   
  UPDATE "LAND"."IFRS_R1.LAND::TV_EQP_CONTR_ITEM" A
 	FROM "LAND"."IFRS_R1.LAND::TV_EQP_CONTR_ITEM" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	AND A.ITEM_ID = B.ITEM_ID
 	SET A.NDB_TS = LV_CUR_UTC
 	WHERE A.NDB_TS IS NULL;		
 	
   UPDATE "LAND"."IFRS_R1.LAND::TV_EQP_CONTR_DSCT" A
 	FROM "LAND"."IFRS_R1.LAND::TV_EQP_CONTR_DSCT" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	AND A.DSCT_ID = B.ITEM_ID
 	SET A.NDB_TS = LV_CUR_UTC
 	WHERE A.NDB_TS IS NULL;
	
	UPDATE "LAND"."IFRS_R1.LAND::TV_ADD_PGM_CONTR_GENL" A
 	FROM "LAND"."IFRS_R1.LAND::TV_ADD_PGM_CONTR_GENL" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	SET A.SP_TV_ORDER_TS = LV_CUR_UTC
 	WHERE A.SP_TV_ORDER_TS IS NULL;      

	UPDATE "LAND"."IFRS_R1.LAND::TV_ADD_PGM_CONTR_ITEM" A
 	FROM "LAND"."IFRS_R1.LAND::TV_ADD_PGM_CONTR_ITEM" A
 	INNER JOIN #UPDATE_TV_ORDER B 
 	ON A.ACCT_NUM = B.ACCT_NUM 
 	AND  A.CONTR_ID =  B.CONTR_ID
 	AND A.ITEM_ID = B.ITEM_ID
 	SET A.NDB_TS = LV_CUR_UTC
 	WHERE A.NDB_TS IS NULL; 	

	

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ORDER_EH" A
  FROM "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_ORDER_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."ACCT_NUM" = B."ACCT_NUM" AND
A."CONTR_ID" = B."CONTR_ID" AND 
A."EVNT_ID" = B."EVNT_ID" AND
A."ITEM_ID" = B."ITEM_ID" AND
A."TRANS_ID" = B."TRANS_ID" 
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;