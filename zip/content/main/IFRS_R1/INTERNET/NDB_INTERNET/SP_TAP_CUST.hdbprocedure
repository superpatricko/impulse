PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_TAP_CUST"
(IN IP_CID_DATE DATE,
OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_TAP_CUST
-- Created By      : BC_EY96110 (Arpit)       
-- Create Date     : 03-18-2017
-- Description     : Data Inserted using Calculation View - CA_TAP_CUST
--                   to NDB Table - INT_CUST Using this stored procedure.
--                   Internet Customer includes data from landing table TAP_CUST.			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_CUST FOR
	       SELECT
				 "PRM_CONTR_CUST",
				 "ALTN_CONTR_NUM",
				 "SUB_STATUS",
				 "PRV_BAN_MOVE_DT",
				 "PRV_BAN",
				 "NXT_BAN_MOVE_DT",
				 "NXT_BAN",
				 "CMT_RSN_CD",
				 "CMT_STRT_DT",
				 "CMT_END_DT",
				 "REQ_END_GRC_PRD",
				 "REQ_ST_GRC_PRD",
				 "SUB_STS_RSN_CD",
				 "CYCLE_BILL_DAY",
				 "BAN_STS",
				 "PRDCT_TYP",
				 "CONTR_UNQ_ID",
				 "CONTR_TS",
				 "ACCT_TY",
				 "ACCT_SUB_TY",
				 "HS_NUM",
				 "SERV_STRT_DT",
				 "CUST_STATE",
				 "CUST_LOC_ID",
				 "CUST_FRST_NM",
				 "CUST_LAST_NM",
				 "CUST_ADDR",
				 "CONTR_ORD_ID",
				 "CONTR_IPTN_DT",
				 "CONTR_TERM",
				 "CONTR_PROD_CD",
				 "CONTR_PRC_STRC_CD",
				 "EVNT_ID",
				 "ENTR_DT",
				 "ADJ_RSN_CD",
				 "BAL_IMPCT_CD",
				 "FEAT_CD",
				 "AMT",
				 "BL_CYC",
				 "CST_CNTR",
				 "KUNNR_SID",
				 "BILL_CYCL",
				 "MOB_BAN",
				 "MOB_MDN",
				 "FLAG_EXISTING_RECORD",
				 "REFERENCE_EFFECTIVE_DT",
				 "REFERENCE_EXPIRY_DT",
				 "EFFECTIVE_DATE_PREV_DAY" 
	        FROM "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_TAP_CUST"
			     (PLACEHOLDER."$$IP_CID_DATE$$" => :IP_CID_DATE)
	    ORDER BY "CONTR_TS";	  
    
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_TAP_CUST(PRM_CONTR_CUST NVARCHAR(20), ALTN_CONTR_NUM NVARCHAR(9));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (PRM_CONTR_CUST NVARCHAR(20), ALTN_CONTR_NUM NVARCHAR(9));    
    
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------
FOR CUR_CUST AS C_CUST DO

	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
		
	--    Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION 	
		   
		-- Do Nothing. Exception Handled to ensure SP does not get terminated 
		
	 	  END;
 	  			
			   -- Insert record into error table
			   	  INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST_EH"(
			   	  		      "PRM_CONTR_CUST",
							  "ALTN_CONTR_NUM",
							  "CONTR_UNQ_ID",
						      "CONTR_TIMESTAMP",
							  "REFERENCE_EFFECTIVE_DT",
							  "REFERENCE_EXPIRY_DT",
							  "ACCT_TY",
							  "ACCT_SUB_TY",
							  "HS_NUM",
							  "SERV_STRT_DT",
							  "CUST_STATE",
							  "CUST_LOC_ID",
							  "CUST_FRST_NM",
							  "CUST_LAST_NM",
							  "CUST_ADDR",
							  "CONTR_ORD_ID",
						      "CONTR_IPTN_DT", 
							  "CONTR_TERM", 
							  "CONTR_PROD_CD", 
							  "CONTR_PRC_STRC_CD",
							  "EVNT_ID",
							  "ENTR_DT", 
							  "ADJ_RSN_CD", 
							  "BAL_IMPCT_CD", 
							  "FEAT_CD",
							  "AMT",
							  "BILL_CYCL",
							  "CST_CNTR",
						      "BAN_STS",
							  "BL_CYC", 
							  "CMT_END_DT",
							  "CMT_STRT_DT",
							  "CMT_RSN_CD",
							  "CYCLE_BILL_DAY",
						      "NXT_BAN",
							  "NXT_BAN_MOVE_DT",
							  "PRV_BAN",
							  "SUB_STATUS",
							  "PRDCT_TYP",
							  "PRV_BAN_MOVE_DT",
							  "REQ_END_GRC_PRD",
							  "REQ_ST_GRC_PRD",
							  "SUB_STS_RSN_CD",
							  "KUNNR_SID",
							  "ERROR_CODE",
					          "TECHNICAL_MESSAGE",
					          "ERROR_CREATE_TS")
				       VALUES (CUR_CUST."PRM_CONTR_CUST",
							  CUR_CUST."ALTN_CONTR_NUM",
							  CUR_CUST."CONTR_UNQ_ID",
						      CUR_CUST."CONTR_TS",
							  CUR_CUST."REFERENCE_EFFECTIVE_DT",
							  CUR_CUST."REFERENCE_EXPIRY_DT",
							  CUR_CUST."ACCT_TY",
							  CUR_CUST."ACCT_SUB_TY",
							  CUR_CUST."HS_NUM",
							  CUR_CUST."SERV_STRT_DT",
							  CUR_CUST."CUST_STATE",
							  CUR_CUST."CUST_LOC_ID",
							  CUR_CUST."CUST_FRST_NM",
							  CUR_CUST."CUST_LAST_NM",
							  CUR_CUST."CUST_ADDR",
							  CUR_CUST."CONTR_ORD_ID",
						      CUR_CUST."CONTR_IPTN_DT", 
							  CUR_CUST."CONTR_TERM", 
							  CUR_CUST."CONTR_PROD_CD", 
							  CUR_CUST."CONTR_PRC_STRC_CD",
							  CUR_CUST."EVNT_ID",
							  CUR_CUST."ENTR_DT", 
							  CUR_CUST."ADJ_RSN_CD", 
							  CUR_CUST."BAL_IMPCT_CD", 
							  CUR_CUST."FEAT_CD",
							  CUR_CUST."AMT",
							  CUR_CUST."BILL_CYCL",
							  CUR_CUST."CST_CNTR",
						      CUR_CUST."BAN_STS",
							  CUR_CUST."BL_CYC", 
							  CUR_CUST."CMT_END_DT",
							  CUR_CUST."CMT_STRT_DT",
							  CUR_CUST."CMT_RSN_CD",
							  CUR_CUST."CYCLE_BILL_DAY",
						      CUR_CUST."NXT_BAN",
							  CUR_CUST."NXT_BAN_MOVE_DT",
							  CUR_CUST."PRV_BAN",
							  CUR_CUST."SUB_STATUS",
							  CUR_CUST."PRDCT_TYP",
							  CUR_CUST."PRV_BAN_MOVE_DT",
							  CUR_CUST."REQ_END_GRC_PRD",
							  CUR_CUST."REQ_ST_GRC_PRD",
							  CUR_CUST."SUB_STS_RSN_CD",
							  CUR_CUST."KUNNR_SID",
							  ::SQL_ERROR_CODE,
					          ::SQL_ERROR_MESSAGE,
					          LV_CUR_UTC);
		          
              LV_ERROR_FLAG := 'Y';
     	          
   END; 	  
   
 --   If Record exists in the Target NDB Table
      IF CUR_CUST.FLAG_EXISTING_RECORD = 'U' THEN  
      	BEGIN AUTONOMOUS TRANSACTION 
	    
	--     Update the target NDB table
		   UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST" NDB 
			  SET NDB.REFERENCE_EXPIRY_DT   = CUR_CUST.EFFECTIVE_DATE_PREV_DAY,
		 		  NDB.MODIFIED_TS           = LV_CUR_UTC 
			WHERE CUR_CUST."PRM_CONTR_CUST" = NDB."PRM_CONTR_CUST"  
			  AND CUR_CUST."ALTN_CONTR_NUM" = NDB."ALTN_CONTR_NUM"  
			  AND NDB.REFERENCE_EXPIRY_DT   = '99991231';
   	  
			--    Insert the Incoming new record
				  INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST"(
					   	  	  "PRM_CONTR_CUST",
							  "ALTN_CONTR_NUM",
							  "CONTR_UNQ_ID",
						      "CONTR_TIMESTAMP",
							  "REFERENCE_EFFECTIVE_DT",
							  "REFERENCE_EXPIRY_DT",
							  "ACCT_TY",
							  "ACCT_SUB_TY",
							  "HS_NUM",
							  "SERV_STRT_DT",
							  "CUST_STATE",
							  "CUST_LOC_ID",
							  "CUST_FRST_NM",
							  "CUST_LAST_NM",
							  "CUST_ADDR",
							  "CONTR_ORD_ID",
						      "CONTR_IPTN_DT", 
							  "CONTR_TERM", 
							  "CONTR_PROD_CD", 
							  "CONTR_PRC_STRC_CD",
							  "EVNT_ID",
							  "ENTR_DT", 
							  "ADJ_RSN_CD", 
							  "BAL_IMPCT_CD", 
							  "FEAT_CD",
							  "AMT",
							  "BILL_CYCL",
							  "CST_CNTR",
						      "BAN_STS",
							  "BL_CYC", 
							  "CMT_END_DT",
							  "CMT_STRT_DT",
							  "CMT_RSN_CD",
							  "CYCLE_BILL_DAY",
						      "NXT_BAN",
							  "NXT_BAN_MOVE_DT",
							  "PRV_BAN",
							  "SUB_STATUS",
							  "PRDCT_TYP",
							  "PRV_BAN_MOVE_DT",
							  "REQ_END_GRC_PRD",
							  "REQ_ST_GRC_PRD",
							  "SUB_STS_RSN_CD",
							  "KUNNR_SID",
							  "INSERT_TS",
							  "MODIFIED_TS")
				       VALUES (CUR_CUST."PRM_CONTR_CUST",
							  CUR_CUST."ALTN_CONTR_NUM",
							  CUR_CUST."CONTR_UNQ_ID",
						      CUR_CUST."CONTR_TS",
							  CUR_CUST."REFERENCE_EFFECTIVE_DT",
							  CUR_CUST."REFERENCE_EXPIRY_DT",
							  CUR_CUST."ACCT_TY",
							  CUR_CUST."ACCT_SUB_TY",
							  CUR_CUST."HS_NUM",
							  CUR_CUST."SERV_STRT_DT",
							  CUR_CUST."CUST_STATE",
							  CUR_CUST."CUST_LOC_ID",
							  CUR_CUST."CUST_FRST_NM",
							  CUR_CUST."CUST_LAST_NM",
							  CUR_CUST."CUST_ADDR",
							  CUR_CUST."CONTR_ORD_ID",
						      CUR_CUST."CONTR_IPTN_DT", 
							  CUR_CUST."CONTR_TERM", 
							  CUR_CUST."CONTR_PROD_CD", 
							  CUR_CUST."CONTR_PRC_STRC_CD",
							  CUR_CUST."EVNT_ID",
							  CUR_CUST."ENTR_DT", 
							  CUR_CUST."ADJ_RSN_CD", 
							  CUR_CUST."BAL_IMPCT_CD", 
							  CUR_CUST."FEAT_CD",
							  CUR_CUST."AMT",
							  CUR_CUST."BILL_CYCL",
							  CUR_CUST."CST_CNTR",
						      CUR_CUST."BAN_STS",
							  CUR_CUST."BL_CYC", 
							  CUR_CUST."CMT_END_DT",
							  CUR_CUST."CMT_STRT_DT",
							  CUR_CUST."CMT_RSN_CD",
							  CUR_CUST."CYCLE_BILL_DAY",
						      CUR_CUST."NXT_BAN",
							  CUR_CUST."NXT_BAN_MOVE_DT",
							  CUR_CUST."PRV_BAN",
							  CUR_CUST."SUB_STATUS",
							  CUR_CUST."PRDCT_TYP",
							  CUR_CUST."PRV_BAN_MOVE_DT",
							  CUR_CUST."REQ_END_GRC_PRD",
							  CUR_CUST."REQ_ST_GRC_PRD",
							  CUR_CUST."SUB_STS_RSN_CD",
							  CUR_CUST."KUNNR_SID",
					          LV_CUR_UTC,
					          LV_CUR_UTC);
					          
			END;		          
		          
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TAP_CUST
					   ("PRM_CONTR_CUST", 
					    "ALTN_CONTR_NUM") 
			    VALUES (CUR_CUST."PRM_CONTR_CUST", 
				 		CUR_CUST."ALTN_CONTR_NUM");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("PRM_CONTR_CUST", 
					   	"ALTN_CONTR_NUM") 
		        VALUES (CUR_CUST."PRM_CONTR_CUST", 
					   	CUR_CUST."ALTN_CONTR_NUM");           
                    	
    ELSEIF CUR_CUST.FLAG_EXISTING_RECORD = 'I' THEN  		          
--    Insert Records into the target NDB table INT_CUST	  

		INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST"
				   ("PRM_CONTR_CUST",
					"ALTN_CONTR_NUM",
					"CONTR_UNQ_ID",
					"CONTR_TIMESTAMP",
					"REFERENCE_EFFECTIVE_DT",
					"REFERENCE_EXPIRY_DT",
					"ACCT_TY",
					"ACCT_SUB_TY",
					"HS_NUM",
					"SERV_STRT_DT",
					"CUST_STATE",
					"CUST_LOC_ID",
					"CUST_FRST_NM",
					"CUST_LAST_NM",
					"CUST_ADDR",
					"MOB_BAN",
					"MOB_MDN",
					"INSERT_TS")
			VALUES (CUR_CUST."PRM_CONTR_CUST",
					CUR_CUST."ALTN_CONTR_NUM",
					CUR_CUST."CONTR_UNQ_ID",
					CUR_CUST."CONTR_TS",
					CUR_CUST."REFERENCE_EFFECTIVE_DT",
					CUR_CUST."REFERENCE_EXPIRY_DT",
					CUR_CUST."ACCT_TY",
					CUR_CUST."ACCT_SUB_TY",
					CUR_CUST."HS_NUM",				
					CUR_CUST."SERV_STRT_DT",
					CUR_CUST."CUST_STATE",
					CUR_CUST."CUST_LOC_ID",
					CUR_CUST."CUST_FRST_NM",
					CUR_CUST."CUST_LAST_NM",
					CUR_CUST."CUST_ADDR",
					CUR_CUST."MOB_BAN",
					CUR_CUST."MOB_MDN",
					LV_CUR_UTC);

					             	  
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TAP_CUST
					   ("PRM_CONTR_CUST", 
					    "ALTN_CONTR_NUM") 
			    VALUES (CUR_CUST."PRM_CONTR_CUST", 
				 		CUR_CUST."ALTN_CONTR_NUM");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("PRM_CONTR_CUST", 
					   	"ALTN_CONTR_NUM") 
		        VALUES (CUR_CUST."PRM_CONTR_CUST", 
					   	CUR_CUST."ALTN_CONTR_NUM");  
					   	
     END IF;  

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::TAP_CUST
UPDATE "LAND"."IFRS_R1.LAND::TAP_CUST" A
  FROM "LAND"."IFRS_R1.LAND::TAP_CUST" A 
 INNER JOIN #UPDATE_TAP_CUST B 
    ON A."PRM_CONTR_CUST" = B."PRM_CONTR_CUST"
   AND A."ALTN_CONTR_NUM" = B."ALTN_CONTR_NUM"
   SET NDB_TS             = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."PRM_CONTR_CUST"     = B."PRM_CONTR_CUST"
   AND A."ALTN_CONTR_NUM"     = B."ALTN_CONTR_NUM"
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;