PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_INT_COST_CNTR"
(OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN 
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_INT_COST_CNTR
-- Created By      : BC_EY94118 (Prakhar)       
-- Create Date     : 03-17-2017
-- Description     : Data Inserted using Calculation View - CA_INT_COST_CNTR
--                   to NDB Table - INT_CUST Using this stored procedure.
--                   Internet Customer includes data from table ZINTERNET_ENSMBL.			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 

DECLARE CURSOR C_CUST FOR
	 SELECT  "CST_CNTR",
	 	     "CUST_LOC_ID",
	         "PRM_CONTR_CUST",
			 "ALTN_CONTR_NUM",
			 "PRDCT_TYP",
			 "REFERENCE_EFFECTIVE_DT"
	   FROM "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_INT_COST_CNTR" 
  WITH HINT (NO_REMOTE_JOIN_RELOCATION);
    
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (PRM_CONTR_CUST NVARCHAR(35), ALTN_CONTR_NUM NVARCHAR(35), REFERENCE_EFFECTIVE_DT DATE);    
    
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------

FOR CUR_CUST AS C_CUST DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
		--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION
		
		END;
				
	   -- Insert record into error table
	   	  INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST_EH"(
	   	              "CST_CNTR",
			 	      "CUST_LOC_ID",
			          "PRM_CONTR_CUST",
					  "ALTN_CONTR_NUM",
					  "PRDCT_TYP",
					  "REFERENCE_EFFECTIVE_DT",
	   	              "ERROR_CODE",
			          "TECHNICAL_MESSAGE",
			          "ERROR_CREATE_TS")
	   	  	   VALUES (CUR_CUST."CST_CNTR",
	   	  	           CUR_CUST.CUST_LOC_ID,
	   	  	   		   CUR_CUST."PRM_CONTR_CUST",
	   	  	           CUR_CUST.ALTN_CONTR_NUM,
	   	  	   		   CUR_CUST."PRDCT_TYP",
	   	  	           CUR_CUST.REFERENCE_EFFECTIVE_DT,
	   	  	   		   ::SQL_ERROR_CODE,
			           ::SQL_ERROR_MESSAGE,
			           LV_CUR_UTC);
	   	  	   
	      LV_ERROR_FLAG := 'Y';
	      
      END;      
  
--    Update the target NDB table
	  UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST" NDB 
		 SET  NDB.CST_CNTR           = CUR_CUST.CST_CNTR
	   WHERE  CUR_CUST."PRM_CONTR_CUST" = NDB."PRM_CONTR_CUST" AND
	   	      CUR_CUST."ALTN_CONTR_NUM" = NDB."ALTN_CONTR_NUM" AND
	   	      CUR_CUST."REFERENCE_EFFECTIVE_DT" = NDB."REFERENCE_EFFECTIVE_DT" ;
	   
--    Insert PK of successfully processed Records into Error Temp Table 
	  INSERT INTO #UPDATE_EH_DELETION
		          ("PRM_CONTR_CUST",
				   "ALTN_CONTR_NUM",
				   "REFERENCE_EFFECTIVE_DT"
	   	           ) 
		   VALUES (CUR_CUST."PRM_CONTR_CUST",
	   	  	       CUR_CUST.ALTN_CONTR_NUM,
	   	  	       CUR_CUST.REFERENCE_EFFECTIVE_DT
	   	  	   	   );
			           
END FOR;   		
		
--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_CUST_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON  A."PRM_CONTR_CUST" 		   = B."PRM_CONTR_CUST" AND 
        A."ALTN_CONTR_NUM" 		   = B."ALTN_CONTR_NUM" AND
	   	A."REFERENCE_EFFECTIVE_DT" = B."REFERENCE_EFFECTIVE_DT" 
   SET  (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
  
END;