PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_INT_ORDER_D"
(IN IP_CID_DATE DATE,
OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_INT_ORDER_D
-- Created By      : BC_EY94118 (Prakhar)       
-- Create Date     : 03-15-2017
-- Description     : Data Inserted using Calculation View - CA_TAP_DSCT_CUST_PROMO_PRC_ORD
--                   to NDB Table - INT_ORDER Using this stored procedure.
--                   Internet ORDER includes data from table TAP_DSCT.			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_ORDER_D FOR
		  SELECT "PRM_CONTR_CUST",
				 "ALTN_CONTR_NUM",
				 "CONTR_UNQ_ID",
				 "CONTR_ORD_ID",
				 "CONTR_IPTN_DT",
				 "CONTR_PROD_CD",
				 "CONTR_PRC_STRC_CD",
				 "EVNT_ID",
				 "ITEM_CD",
				 "ITEM_STATE_DT",
				 "ITEM_STATE_RD",
				 "TRANS_LINE_ID",
				 "PROMO_CD",
				 "DISC_STRT_DT",
				 "DISC_END_DT",
				 "DISC_STAT",
				 "RT_PLN_CODE",
				 "RT_PLN_STRT_DT",
				 "RT_PLN_END_DT",
				 "PRC_STRUC_STRT_DT",
				 "PRC_STRUC_END_DT",
				 "PROMO_OFFR_PRD_STRT_DT",
				 "PROMO_OFFR_PRD_END_DT",
				 "AO_CODE",
				 "SRC_TS",
				 "CST_CNTR",
				 "KUNNR_SID",
				 "AO_SSP",
				 "ITEM_ID",
				 "ITEM_TY_CD",
				 "UPFRNT_FLG",
				 "BILLR",
				 "BU_VW",
				 "ERROR_STATUS",
				 "ERROR_CODE",
				 "FLAG_EXISTING_RECORD",
				 "REC_IND",
				 "EFFECTIVE_DATE",
				 "EXPIRY_DATE",
				 "EFFECTIVE_DATE_PREV_DAY",
				 "CONTR_TS",
				 "COMPOUND_KEY" 
		 FROM    "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_TAP_DSCT_CUST_PROMO_PRC_ORD"
		         (PLACEHOLDER."$$IP_CID_DATE$$" => :IP_CID_DATE)
		ORDER BY "CONTR_TS";
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_TAP_DSCT (PRM_CONTR_CUST NVARCHAR(35), ALTN_CONTR_NUM NVARCHAR(35), ITEM_CD NVARCHAR(5));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (PRM_CONTR_CUST NVARCHAR(35), ALTN_CONTR_NUM NVARCHAR(35),ITEM_CD NVARCHAR(5),
					 	 	 	 			 	  REC_IND NVARCHAR(1),COMPOUND_KEY NVARCHAR(50));
												  
												  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------  

FOR CUR_ORDER AS C_ORDER_D DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION
		
		END; 
			
		   -- Insert record into error table
		   	  INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER_EH"(
		   	  			  "PRM_CONTR_CUST",
						  "ALTN_CONTR_NUM",
						  "CONTR_UNQ_ID",
						  "CONTR_ORD_ID",
						  "CONTR_IPTN_DT",
						  "CONTR_PROD_CD",
						  "CONTR_PRC_STRC_CD",
						  "EVNT_ID",
						  "ITEM_CD",
						  "ITEM_STATE_DT",
						  "ITEM_STATE_RD",
						  "TRANS_LINE_ID",
						  "PROMO_CD",
						  "DISC_STRT_DT",
						  "DISC_END_DT",
						  "DISC_STAT",
						  "RT_PLN_CODE",
						  "RT_PLN_STRT_DT",
						  "RT_PLN_END_DT",
						  "PRC_STRUC_STRT_DT",
						  "PRC_STRUC_END_DT",
						  "PROMO_OFFR_PRD_STRT_DT",
						  "PROMO_OFFR_PRD_END_DT",
						  "AO_CODE",
						  "EFFECTIVE_DATE",
						  "EXPIRY_DATE",
						  "REC_IND",
						  "CST_CNTR",
						  "KUNNR_SID",
						  "INSERT_TS",
						  "AO_SSP",
						  "ITEM_ID",
						  "ITEM_TY_CD",
						  "UPFRNT_FLG",
						  "BILLR",
						  "BU_VW",
						  "COMPOUND_KEY",
						  "ERROR_CODE",
				          "TECHNICAL_MESSAGE",
				          "ERROR_CREATE_TS")
				   VALUES (CUR_ORDER."PRM_CONTR_CUST",
						   CUR_ORDER."ALTN_CONTR_NUM",
						   CUR_ORDER."CONTR_UNQ_ID",
					       CUR_ORDER."CONTR_ORD_ID",
					       CUR_ORDER."CONTR_IPTN_DT",
						   CUR_ORDER."CONTR_PROD_CD",
						   CUR_ORDER."CONTR_PRC_STRC_CD",
						   CUR_ORDER."EVNT_ID",
						   CUR_ORDER."ITEM_CD",
						   CUR_ORDER."ITEM_STATE_DT",
						   CUR_ORDER."ITEM_STATE_RD",
						   CUR_ORDER."TRANS_LINE_ID",
						   CUR_ORDER."PROMO_CD",
						   CUR_ORDER."DISC_STRT_DT",
						   CUR_ORDER."DISC_END_DT",
						   CUR_ORDER."DISC_STAT",
						   CUR_ORDER."RT_PLN_CODE",
						   CUR_ORDER."RT_PLN_STRT_DT",
						   CUR_ORDER."RT_PLN_END_DT",
						   CUR_ORDER."PRC_STRUC_STRT_DT",
						   CUR_ORDER."PRC_STRUC_END_DT",
						   CUR_ORDER."PROMO_OFFR_PRD_STRT_DT",
						   CUR_ORDER."PROMO_OFFR_PRD_END_DT",
						   CUR_ORDER."AO_CODE",
						   CUR_ORDER."EFFECTIVE_DATE",
						   CUR_ORDER."EXPIRY_DATE",
						   CUR_ORDER."REC_IND",
						   CUR_ORDER."CST_CNTR",
						   CUR_ORDER."KUNNR_SID",
						   LV_CUR_UTC,
						   CUR_ORDER."AO_SSP",
						   CUR_ORDER."ITEM_ID",
						   CUR_ORDER."ITEM_TY_CD",
						   CUR_ORDER."UPFRNT_FLG",
						   CUR_ORDER."BILLR",
						   CUR_ORDER."BU_VW",
						   CUR_ORDER."COMPOUND_KEY",
						   ::SQL_ERROR_CODE,
				           ::SQL_ERROR_MESSAGE,
				           LV_CUR_UTC);
		
			  	LV_ERROR_FLAG := 'Y';
		    
   		 	 
   		 END;
    
--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF CUR_ORDER.ERROR_STATUS = '1' THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_ORDER."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

	     -- Loop through the Error Records
			FOR i IN 1 .. :RECORD_COUNT DO
				
			 -- Fetch the Error Code
				CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
				
				 -- Insert into the Error Table
				    INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER_EH"(
			   	  				"PRM_CONTR_CUST",
								"ALTN_CONTR_NUM",
								"CONTR_UNQ_ID",
								"CONTR_ORD_ID",
								"CONTR_IPTN_DT",
								"CONTR_PROD_CD",
								"CONTR_PRC_STRC_CD",
								"EVNT_ID",
								"ITEM_CD",
								"ITEM_STATE_DT",
								"ITEM_STATE_RD",
								"TRANS_LINE_ID",
								"PROMO_CD",
								"DISC_STRT_DT",
								"DISC_END_DT",
								"DISC_STAT",
								"RT_PLN_CODE",
								"RT_PLN_STRT_DT",
								"RT_PLN_END_DT",
								"PRC_STRUC_STRT_DT",
								"PRC_STRUC_END_DT",
								"PROMO_OFFR_PRD_STRT_DT",
								"PROMO_OFFR_PRD_END_DT",
								"AO_CODE",
								"EFFECTIVE_DATE",
								"EXPIRY_DATE",
								"REC_IND",
								"CST_CNTR",
								"KUNNR_SID",
								"INSERT_TS",
								"AO_SSP",
								"ITEM_ID",
								"ITEM_TY_CD",
								"UPFRNT_FLG",
								"BILLR",
								"BU_VW",
								"COMPOUND_KEY",
								"ERROR_CODE",
							    "ERROR_CREATE_TS")
					     VALUES (CUR_ORDER."PRM_CONTR_CUST",
								 CUR_ORDER."ALTN_CONTR_NUM",
								 CUR_ORDER."CONTR_UNQ_ID",
								 CUR_ORDER."CONTR_ORD_ID",
								 CUR_ORDER."CONTR_IPTN_DT",
								 CUR_ORDER."CONTR_PROD_CD",
								 CUR_ORDER."CONTR_PRC_STRC_CD",
								 CUR_ORDER."EVNT_ID",
								 CUR_ORDER."ITEM_CD",
								 CUR_ORDER."ITEM_STATE_DT",
								 CUR_ORDER."ITEM_STATE_RD",
								 CUR_ORDER."TRANS_LINE_ID",
								 CUR_ORDER."PROMO_CD",
								 CUR_ORDER."DISC_STRT_DT",
								 CUR_ORDER."DISC_END_DT",
								 CUR_ORDER."DISC_STAT",
								 CUR_ORDER."RT_PLN_CODE",
								 CUR_ORDER."RT_PLN_STRT_DT",
								 CUR_ORDER."RT_PLN_END_DT",
								 CUR_ORDER."PRC_STRUC_STRT_DT",
								 CUR_ORDER."PRC_STRUC_END_DT",
								 CUR_ORDER."PROMO_OFFR_PRD_STRT_DT",
								 CUR_ORDER."PROMO_OFFR_PRD_END_DT",
								 CUR_ORDER."AO_CODE",
								 CUR_ORDER."EFFECTIVE_DATE",
								 CUR_ORDER."EXPIRY_DATE",
								 CUR_ORDER."REC_IND",
								 CUR_ORDER."CST_CNTR",
								 CUR_ORDER."KUNNR_SID",
								 LV_CUR_UTC,
								 CUR_ORDER."AO_SSP",
								 CUR_ORDER."ITEM_ID",
								 CUR_ORDER."ITEM_TY_CD",
								 CUR_ORDER."UPFRNT_FLG",
								 CUR_ORDER."BILLR",
								 CUR_ORDER."BU_VW",
								 CUR_ORDER."COMPOUND_KEY",
								 :CURRENT_ERROR,
							     LV_CUR_UTC);
					     
	         -- Set Error Flag				        
				LV_ERROR_FLAG := 'Y';
				
			END FOR;

-- Processing for Successful Records
  

--   If Record exists in the Target NDB Table
     ELSEIF CUR_ORDER.FLAG_EXISTING_RECORD = 'U' THEN
     
		   BEGIN AUTONOMOUS TRANSACTION 
		
		--     Update the target NDB table
			   UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER" NDB 
				  SET NDB.EXPIRY_DATE            = CUR_ORDER.EFFECTIVE_DATE_PREV_DAY,
			 		  NDB.MODIFIED_TS            = LV_CUR_UTC 
				WHERE CUR_ORDER."PRM_CONTR_CUST" = NDB."PRM_CONTR_CUST" 
				  AND CUR_ORDER."ALTN_CONTR_NUM" = NDB."ALTN_CONTR_NUM" 
				  AND CUR_ORDER."ITEM_CD"        = NDB."ITEM_CD"
				  AND NDB.EXPIRY_DATE            = '99991231'
				  AND REC_IND                    = 'D';
				  
		--    Insert the Incoming new record
		      INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"(
		   	  			  "PRM_CONTR_CUST",
						  "ALTN_CONTR_NUM",
						  "CONTR_UNQ_ID",
						  "CONTR_ORD_ID",
						  "CONTR_IPTN_DT",
						  "CONTR_PROD_CD",
						  "CONTR_PRC_STRC_CD",
						  "EVNT_ID",
						  "ITEM_CD",
						  "ITEM_STATE_DT",
						  "ITEM_STATE_RD",
						  "TRANS_LINE_ID",
						  "PROMO_CD",
						  "DISC_STRT_DT",
						  "DISC_END_DT",
						  "DISC_STAT",
						  "RT_PLN_CODE",
						  "RT_PLN_STRT_DT",
						  "RT_PLN_END_DT",
						  "PRC_STRUC_STRT_DT",
						  "PRC_STRUC_END_DT",
						  "PROMO_OFFR_PRD_STRT_DT",
						  "PROMO_OFFR_PRD_END_DT",
						  "AO_CODE",
						  "EFFECTIVE_DATE",
						  "EXPIRY_DATE",
						  "REC_IND",
						  "CST_CNTR",
						  "KUNNR_SID",
						  "INSERT_TS",
		                  "MODIFIED_TS",
						  "AO_SSP",
						  "ITEM_ID",
						  "ITEM_TY_CD",
						  "UPFRNT_FLG",
						  "BILLR",
						  "BU_VW",
						  "COMPOUND_KEY")
				   VALUES (CUR_ORDER."PRM_CONTR_CUST",
						   CUR_ORDER."ALTN_CONTR_NUM",
						   CUR_ORDER."CONTR_UNQ_ID",
						   CUR_ORDER."CONTR_ORD_ID",
						   CUR_ORDER."CONTR_IPTN_DT",
						   CUR_ORDER."CONTR_PROD_CD",
						   CUR_ORDER."CONTR_PRC_STRC_CD",
						   CUR_ORDER."EVNT_ID",
						   CUR_ORDER."ITEM_CD",
						   CUR_ORDER."ITEM_STATE_DT",
						   CUR_ORDER."ITEM_STATE_RD",
						   CUR_ORDER."TRANS_LINE_ID",
						   CUR_ORDER."PROMO_CD",
						   CUR_ORDER."DISC_STRT_DT",
						   CUR_ORDER."DISC_END_DT",
						   CUR_ORDER."DISC_STAT",
						   CUR_ORDER."RT_PLN_CODE",
						   CUR_ORDER."RT_PLN_STRT_DT",
						   CUR_ORDER."RT_PLN_END_DT",
						   CUR_ORDER."PRC_STRUC_STRT_DT",
						   CUR_ORDER."PRC_STRUC_END_DT",
						   CUR_ORDER."PROMO_OFFR_PRD_STRT_DT",
						   CUR_ORDER."PROMO_OFFR_PRD_END_DT",
						   CUR_ORDER."AO_CODE",
						   CUR_ORDER."EFFECTIVE_DATE",
						   CUR_ORDER."EXPIRY_DATE",
						   CUR_ORDER."REC_IND",
						   CUR_ORDER."CST_CNTR",
						   CUR_ORDER."KUNNR_SID",
						   LV_CUR_UTC,
		                   LV_CUR_UTC,
						   CUR_ORDER."AO_SSP",
						   CUR_ORDER."ITEM_ID",
						   CUR_ORDER."ITEM_TY_CD",
						   CUR_ORDER."UPFRNT_FLG",
						   CUR_ORDER."BILLR",
						   CUR_ORDER."BU_VW",
						   CUR_ORDER."COMPOUND_KEY");
						   
		     END ; -- END AUTONOMOUS TRANSACTION 
					 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_TAP_DSCT
					   ("PRM_CONTR_CUST", 
					    "ALTN_CONTR_NUM", 
					   	"ITEM_CD") 
			    VALUES (CUR_ORDER."PRM_CONTR_CUST", 
				 		CUR_ORDER."ALTN_CONTR_NUM", 
					   	CUR_ORDER."ITEM_CD");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("PRM_CONTR_CUST", 
					    "ALTN_CONTR_NUM", 
					   	"ITEM_CD",
					   	"REC_IND",
					   	"COMPOUND_KEY") 
		        VALUES (CUR_ORDER."PRM_CONTR_CUST", 
					   	CUR_ORDER."ALTN_CONTR_NUM",
					   	CUR_ORDER."ITEM_CD",
					   	CUR_ORDER."REC_IND",
					   	CUR_ORDER."COMPOUND_KEY");
					   	           
                    	
    ELSEIF CUR_ORDER.FLAG_EXISTING_RECORD = 'I' THEN
    
	--    Insert Records into the target NDB table
	      INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"(
	   	  			  "PRM_CONTR_CUST",
					  "ALTN_CONTR_NUM",
					  "CONTR_UNQ_ID",
					  "CONTR_ORD_ID",
					  "CONTR_IPTN_DT",
					  "CONTR_PROD_CD",
					  "CONTR_PRC_STRC_CD",
					  "EVNT_ID",
					  "ITEM_CD",
					  "ITEM_STATE_DT",
					  "ITEM_STATE_RD",
					  "TRANS_LINE_ID",
					  "PROMO_CD",
					  "DISC_STRT_DT",
					  "DISC_END_DT",
					  "DISC_STAT",
					  "RT_PLN_CODE",
					  "RT_PLN_STRT_DT",
					  "RT_PLN_END_DT",
					  "PRC_STRUC_STRT_DT",
					  "PRC_STRUC_END_DT",
					  "PROMO_OFFR_PRD_STRT_DT",
					  "PROMO_OFFR_PRD_END_DT",
					  "AO_CODE",
					  "EFFECTIVE_DATE",
					  "EXPIRY_DATE",
					  "REC_IND",
					  "CST_CNTR",
					  "KUNNR_SID",
					  "INSERT_TS",
					  "AO_SSP",
					  "ITEM_ID",
					  "ITEM_TY_CD",
					  "UPFRNT_FLG",
					  "BILLR",
					  "BU_VW",
					  "COMPOUND_KEY"
					  )
			   VALUES (CUR_ORDER."PRM_CONTR_CUST",
					   CUR_ORDER."ALTN_CONTR_NUM",
					   CUR_ORDER."CONTR_UNQ_ID",
					   CUR_ORDER."CONTR_ORD_ID",
					   CUR_ORDER."CONTR_IPTN_DT",
					   CUR_ORDER."CONTR_PROD_CD",
					   CUR_ORDER."CONTR_PRC_STRC_CD",
					   CUR_ORDER."EVNT_ID",
					   CUR_ORDER."ITEM_CD",
					   CUR_ORDER."ITEM_STATE_DT",
					   CUR_ORDER."ITEM_STATE_RD",
					   CUR_ORDER."TRANS_LINE_ID",
					   CUR_ORDER."PROMO_CD",
					   CUR_ORDER."DISC_STRT_DT",
					   CUR_ORDER."DISC_END_DT",
					   CUR_ORDER."DISC_STAT",
					   CUR_ORDER."RT_PLN_CODE",
					   CUR_ORDER."RT_PLN_STRT_DT",
					   CUR_ORDER."RT_PLN_END_DT",
					   CUR_ORDER."PRC_STRUC_STRT_DT",
					   CUR_ORDER."PRC_STRUC_END_DT",
					   CUR_ORDER."PROMO_OFFR_PRD_STRT_DT",
					   CUR_ORDER."PROMO_OFFR_PRD_END_DT",
					   CUR_ORDER."AO_CODE",
					   CUR_ORDER."EFFECTIVE_DATE",
					   CUR_ORDER."EXPIRY_DATE",
					   CUR_ORDER."REC_IND",
					   CUR_ORDER."CST_CNTR",
					   CUR_ORDER."KUNNR_SID",
					   LV_CUR_UTC,
					   CUR_ORDER."AO_SSP",
					   CUR_ORDER."ITEM_ID",
					   CUR_ORDER."ITEM_TY_CD",
					   CUR_ORDER."UPFRNT_FLG",
					   CUR_ORDER."BILLR",
					   CUR_ORDER."BU_VW",
					   CUR_ORDER."COMPOUND_KEY"
					   );
							 
	--         Insert PK of successfully processed Records into Local Temp Tables 
	--         for Updating NDB_TS in corresponding Landing Tables records
			   INSERT INTO #UPDATE_TAP_DSCT
						   ("PRM_CONTR_CUST", 
						    "ALTN_CONTR_NUM", 
						   	"ITEM_CD") 
				    VALUES (CUR_ORDER."PRM_CONTR_CUST", 
						   	CUR_ORDER."ALTN_CONTR_NUM", 
						   	CUR_ORDER."ITEM_CD");
						   					   	    		
			  INSERT INTO  #UPDATE_EH_DELETION
					      ("PRM_CONTR_CUST", 
					       "ALTN_CONTR_NUM", 
					   	   "ITEM_CD",
					   	   "REC_IND",
					   	   "COMPOUND_KEY") 
		           VALUES  (CUR_ORDER."PRM_CONTR_CUST", 
					   	    CUR_ORDER."ALTN_CONTR_NUM",
					   	    CUR_ORDER."ITEM_CD",
					   	    CUR_ORDER."REC_IND",
					   	    CUR_ORDER."COMPOUND_KEY");
					   	           
    END IF;
    
END FOR;					   			    

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::TAP_DSCT
UPDATE "LAND"."IFRS_R1.LAND::TAP_DSCT" A
  FROM "LAND"."IFRS_R1.LAND::TAP_DSCT" A 
 INNER JOIN #UPDATE_TAP_DSCT B 
    ON A."PRM_CONTR_CUST" = B."PRM_CONTR_CUST"
   AND A."ALTN_CONTR_NUM" = B."ALTN_CONTR_NUM"
   AND A."SERV_CD"        = B."ITEM_CD"
   SET NDB_TS             = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."PRM_CONTR_CUST"     = B."PRM_CONTR_CUST"
   AND A."ALTN_CONTR_NUM"     = B."ALTN_CONTR_NUM"
   AND A."ITEM_CD"            = B."ITEM_CD"
   AND A."REC_IND"            = B."REC_IND"
   AND A."COMPOUND_KEY"       = B."COMPOUND_KEY"
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;
