PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_MDM_INT_ORDNG_CD"
(IN IP_CYCL_ID NVARCHAR(3),
OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_MDM_INT_ORDNG_CD
-- Created By      : BC_EZ08930 (Rakesh)       
-- Create Date     : 03-22-2017
-- Description     : Data Inserted using Calculation View - CA_MDM_INT_ORDNG_CD
--                   to NDB Table - MDM_INT_ORDNG_CD Using this stored procedure.
--                   MDM_INT_ORDNG_CD includes data from landing table MDM_INT_ORDNG_CD			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_MDM_ORDNG_CD FOR
		  SELECT
				 "LOB",
				 "PROD_SHRT_NM",
				 "PROD_ENG_NM",
				 "ELIG_LOBS",
				 "OFFR_TY",
				 "REQ_NUM_OF_NEW_LOB_SEL",
				 "MANDT_LOBS",
				 "ATTR_SHRT_NM",
				 "ATTR_ENG_NM",
				 "PROD_DISC_TY",
				 "PROD_DISC_VAL",
				 "ORDNG_CD_TY",
				 "ORDNG_CD_NM",
				 "ACCS_DISC",
				 "MODEM_DISC",
				 "VAS_DISC",
				 "PROMO_DUR",
				 "REFERENCE_EFFECTIVE_DT",
				 "REFERENCE_EXPIRY_DT",
				 "ATTR_VAL_ENG_NM",
				 "CYCL_ID",
				 "SEQ_ID",
				 "FLAG_EXISTING_RECORD",
				 "EFFECTIVE_DATE_PREV_DAY",
				 "INT_ORDG_CD_PRIMARY_KEY" 
		    FROM "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_MDM_INTERNT_ORDNG_CD"
				 (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID)
		ORDER BY CYCL_ID, SEQ_ID ;     		 


--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_MDM_INT_ORDNG_CD (INT_ORDG_CD_PRIMARY_KEY NVARCHAR(370));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION      (ORDNG_CD_NM NVARCHAR(200), PROD_SHRT_NM NVARCHAR(200),REFERENCE_EFFECTIVE_DT DATE);    
    
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------
FOR CUR_ORDNG AS C_MDM_ORDNG_CD DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
		--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
		
		END;
							
		      -- Insert record into error table			
				 INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_ORDNG_CD_EH"(
				   	  		 "LOB",
							 "PROD_SHRT_NM",
							 "PROD_ENG_NM",
							 "ELIG_LOBS",
							 "OFFR_TY",
							 "REQ_NUM_OF_NEW_LOB_SEL",
							 "MANDT_LOBS",
							 "ATTR_SHRT_NM",
							 "ATTR_ENG_NM",
							 "PROD_DISC_TY",
							 "PROD_DISC_VAL",
							 "ORDNG_CD_TY",
							 "ORDNG_CD_NM",
							 "ACCS_DISC",
							 "MODEM_DISC",
							 "VAS_DISC",
							 "PROMO_DUR",
							 "REFERENCE_EFFECTIVE_DT",
							 "REFERENCE_EXPIRY_DT",
							 "ATTR_VAL_ENG_NM",
							 "ERROR_CODE",
						     "TECHNICAL_MESSAGE",
						     "ERROR_CREATE_TS")	 
				      VALUES (CUR_ORDNG."LOB",
							  CUR_ORDNG."PROD_SHRT_NM",
							  CUR_ORDNG."PROD_ENG_NM",
							  CUR_ORDNG."ELIG_LOBS",
							  CUR_ORDNG."OFFR_TY",
							  CUR_ORDNG."REQ_NUM_OF_NEW_LOB_SEL",
							  CUR_ORDNG."MANDT_LOBS",
							  CUR_ORDNG."ATTR_SHRT_NM",
							  CUR_ORDNG."ATTR_ENG_NM",
							  CUR_ORDNG."PROD_DISC_TY",
							  CUR_ORDNG."PROD_DISC_VAL",
							  CUR_ORDNG."ORDNG_CD_TY",
							  CUR_ORDNG."ORDNG_CD_NM",
							  CUR_ORDNG."ACCS_DISC",
							  CUR_ORDNG."MODEM_DISC",
							  CUR_ORDNG."VAS_DISC",
							  CUR_ORDNG."PROMO_DUR",
							  CUR_ORDNG."REFERENCE_EFFECTIVE_DT",
							  CUR_ORDNG."REFERENCE_EXPIRY_DT",
							  CUR_ORDNG."ATTR_VAL_ENG_NM",
				   	  		  ::SQL_ERROR_CODE,
						      ::SQL_ERROR_MESSAGE,
						      LV_CUR_UTC);  	     
						          
				 LV_ERROR_FLAG := 'Y';
	  
	END;	   		

 --   If Record exists in the Target NDB Table
      IF CUR_ORDNG.FLAG_EXISTING_RECORD = 'U' THEN  
      
        BEGIN AUTONOMOUS TRANSACTION 
      
		--     Update the target NDB table
			   UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_ORDNG_CD" NDB
			      SET  NDB.REFERENCE_EXPIRY_DT   = CUR_ORDNG.EFFECTIVE_DATE_PREV_DAY,
			 		   NDB.MODIFIED_TS           = LV_CUR_UTC 
				WHERE  CUR_ORDNG."ORDNG_CD_NM"   = NDB."ORDNG_CD_NM"  
				  AND  CUR_ORDNG."PROD_SHRT_NM"  = NDB."PROD_SHRT_NM"
				  AND  NDB."REFERENCE_EXPIRY_DT" = '99991231';
				  
				  				  
				--    Insert the Incoming new record
		   	     INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_ORDNG_CD"(
		   	  				 "LOB",
							 "PROD_SHRT_NM",
							 "PROD_ENG_NM",
							 "ELIG_LOBS",
							 "OFFR_TY",
							 "REQ_NUM_OF_NEW_LOB_SEL",
							 "MANDT_LOBS",
							 "ATTR_SHRT_NM",
							 "ATTR_ENG_NM",
							 "PROD_DISC_TY",
							 "PROD_DISC_VAL",
							 "ORDNG_CD_TY",
							 "ORDNG_CD_NM",
							 "ACCS_DISC",
							 "MODEM_DISC",
							 "VAS_DISC",
							 "PROMO_DUR",
							 "REFERENCE_EFFECTIVE_DT",
							 "REFERENCE_EXPIRY_DT",
							 "ATTR_VAL_ENG_NM",
						     "INSRT_TS",
						     "MODIFIED_TS")	
				     VALUES (CUR_ORDNG."LOB",
							 CUR_ORDNG."PROD_SHRT_NM",
							 CUR_ORDNG."PROD_ENG_NM",
							 CUR_ORDNG."ELIG_LOBS",
							 CUR_ORDNG."OFFR_TY",
							 CUR_ORDNG."REQ_NUM_OF_NEW_LOB_SEL",
							 CUR_ORDNG."MANDT_LOBS",
							 CUR_ORDNG."ATTR_SHRT_NM",
							 CUR_ORDNG."ATTR_ENG_NM",
							 CUR_ORDNG."PROD_DISC_TY",
							 CUR_ORDNG."PROD_DISC_VAL",
							 CUR_ORDNG."ORDNG_CD_TY",
							 CUR_ORDNG."ORDNG_CD_NM",
							 CUR_ORDNG."ACCS_DISC",
							 CUR_ORDNG."MODEM_DISC",
							 CUR_ORDNG."VAS_DISC",
							 CUR_ORDNG."PROMO_DUR",
							 CUR_ORDNG."REFERENCE_EFFECTIVE_DT",
							 CUR_ORDNG."REFERENCE_EXPIRY_DT",
							 CUR_ORDNG."ATTR_VAL_ENG_NM",
				             LV_CUR_UTC,
				             LV_CUR_UTC);

		   END;

--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_MDM_INT_ORDNG_CD
					   ("INT_ORDG_CD_PRIMARY_KEY") 
			    VALUES (CUR_ORDNG."INT_ORDG_CD_PRIMARY_KEY");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   (ORDNG_CD_NM, 
					    PROD_SHRT_NM,
					    REFERENCE_EFFECTIVE_DT) 
			    VALUES (CUR_ORDNG."ORDNG_CD_NM", 
				 		CUR_ORDNG."PROD_SHRT_NM",
				 		CUR_ORDNG."REFERENCE_EFFECTIVE_DT");
				 		
      ELSEIF CUR_ORDNG.FLAG_EXISTING_RECORD = 'I' THEN 		          
		   --    Insert Records into the target NDB table   	
			     INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_ORDNG_CD"(
		   	  				 "LOB",
							 "PROD_SHRT_NM",
							 "PROD_ENG_NM",
							 "ELIG_LOBS",
							 "OFFR_TY",
							 "REQ_NUM_OF_NEW_LOB_SEL",
							 "MANDT_LOBS",
							 "ATTR_SHRT_NM",
							 "ATTR_ENG_NM",
							 "PROD_DISC_TY",
							 "PROD_DISC_VAL",
							 "ORDNG_CD_TY",
							 "ORDNG_CD_NM",
							 "ACCS_DISC",
							 "MODEM_DISC",
							 "VAS_DISC",
							 "PROMO_DUR",
							 "REFERENCE_EFFECTIVE_DT",
							 "REFERENCE_EXPIRY_DT",
							 "ATTR_VAL_ENG_NM",
						     "INSRT_TS")
				     VALUES (CUR_ORDNG."LOB",
							 CUR_ORDNG."PROD_SHRT_NM",
							 CUR_ORDNG."PROD_ENG_NM",
							 CUR_ORDNG."ELIG_LOBS",
							 CUR_ORDNG."OFFR_TY",
							 CUR_ORDNG."REQ_NUM_OF_NEW_LOB_SEL",
							 CUR_ORDNG."MANDT_LOBS",
							 CUR_ORDNG."ATTR_SHRT_NM",
							 CUR_ORDNG."ATTR_ENG_NM",
							 CUR_ORDNG."PROD_DISC_TY",
							 CUR_ORDNG."PROD_DISC_VAL",
							 CUR_ORDNG."ORDNG_CD_TY",
							 CUR_ORDNG."ORDNG_CD_NM",
							 CUR_ORDNG."ACCS_DISC",
							 CUR_ORDNG."MODEM_DISC",
							 CUR_ORDNG."VAS_DISC",
							 CUR_ORDNG."PROMO_DUR",
							 CUR_ORDNG."REFERENCE_EFFECTIVE_DT",
							 CUR_ORDNG."REFERENCE_EXPIRY_DT",
							 CUR_ORDNG."ATTR_VAL_ENG_NM",
				             LV_CUR_UTC);
								 		
		                    	
		--         Insert PK of successfully processed Records into Local Temp Tables 
		--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_MDM_INT_ORDNG_CD
					   ("INT_ORDG_CD_PRIMARY_KEY") 
			    VALUES (CUR_ORDNG."INT_ORDG_CD_PRIMARY_KEY");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   (ORDNG_CD_NM, 
					    PROD_SHRT_NM,
					    REFERENCE_EFFECTIVE_DT) 
			    VALUES (CUR_ORDNG."ORDNG_CD_NM", 
				 		CUR_ORDNG."PROD_SHRT_NM",
				 		CUR_ORDNG."REFERENCE_EFFECTIVE_DT");
		
		
		  END IF;  

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::MDM_INTERNT_ORDNG_CD
UPDATE "LAND"."IFRS_R1.LAND::MDM_INTERNT_ORDNG_CD" A
  FROM "LAND"."IFRS_R1.LAND::MDM_INTERNT_ORDNG_CD" A 
 INNER JOIN #UPDATE_MDM_INT_ORDNG_CD B 
    ON A."INT_ORDG_CD_PRIMARY_KEY" = B."INT_ORDG_CD_PRIMARY_KEY"
   SET NDB_TS           = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_ORDNG_CD_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_ORDNG_CD_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."ORDNG_CD_NM"          = B."ORDNG_CD_NM"
   AND A."PROD_SHRT_NM"         = B."PROD_SHRT_NM"
   AND A.REFERENCE_EFFECTIVE_DT = B.REFERENCE_EFFECTIVE_DT
   SET (DELETE_DATE, DELETED)   = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

       OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	   OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;	  