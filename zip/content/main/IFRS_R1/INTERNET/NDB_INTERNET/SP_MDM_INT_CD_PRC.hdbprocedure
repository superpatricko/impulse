PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_MDM_INT_CD_PRC"
(IN IP_CYCL_ID NVARCHAR(3),
OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_MDM_INT_CD_PRC
-- Created By      : BC_EY94118 (Prakhar)       
-- Create Date     : 03-23-2017
-- Description     : Data Inserted using Calculation View - CA_MDM_INTERNT_CD_PRC
--                   to NDB Table - MDM_INT_BILL_CD_PRC Using this stored procedure.
--                   MDM_INT_BILL_CD_PRC includes data from table MDM_INTERNT_CD_PRC.			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_MDM FOR
		  SELECT
				 "LOB_NM",
				 "PROD_SHRT_NM",
				 "PROD_ENG_NM",
				 "CD_ENG_DESC",
				 "PRC",
				 "PROV",
				 "FLAG_EXISTING_RECORD",
				 "IS_20201901",
				 "CD_NM",
				 "CD_TY",
				 "REFERENCE_EFFECTIVE_DT",
				 "REFERENCE_EXPIRY_DT",
				 "EFFECTIVE_DATE_PREV_DAY",
				 "ERROR_CODE",
				 "ERROR_STATUS",
				 "SEQ_ID",
				 "CYCL_ID" 
		    FROM "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_MDM_INTERNT_CD_PRC"
		  	     (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID)
		 ORDER BY "CYCL_ID", "SEQ_ID";
		      

--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_MDM_INTERNT_CD_PRC (CD_TY NVARCHAR(35), CD_NM NVARCHAR(35));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (CD_TY NVARCHAR(35), CD_NM NVARCHAR(35));
        	  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------  

FOR CUR_MDM AS C_MDM DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
			
   -- Insert record into error table
   	  INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_BILL_CD_PRC_EH"(
   	  			  "CD_NM",
				  "CD_TY",
				  "LOB_NM",
				  "PROD_ENG_NM",
				  "PROD_SHRT_NM",
				  "CD_ENG_DESC",
				  "PRC",
				  "PROV",
				  "REFERENCE_EFFECTIVE_DT",
				  "REFERENCE_EXPIRY_DT",
				  "ERROR_CODE",
		          "TECHNICAL_MESSAGE",
		          "ERROR_CREATE_TS")
		   VALUES (CUR_MDM."CD_NM",
				   CUR_MDM."CD_TY",
				   CUR_MDM."LOB_NM",
				   CUR_MDM."PROD_ENG_NM",
				   CUR_MDM."PROD_SHRT_NM",
				   CUR_MDM."CD_ENG_DESC",
				   CUR_MDM."PRC",
				   CUR_MDM."PROV",
				   CUR_MDM."REFERENCE_EFFECTIVE_DT",
				   CUR_MDM."REFERENCE_EXPIRY_DT",
				   ::SQL_ERROR_CODE,
		           ::SQL_ERROR_MESSAGE,
		           LV_CUR_UTC);

	  	LV_ERROR_FLAG := 'Y';
    
    END;
    
--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF CUR_MDM.ERROR_STATUS = '1' THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_MDM."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
		 -- Insert into the Error Table
		    INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_BILL_CD_PRC_EH"(
		   	  			"CD_NM",
						"CD_TY",
						"LOB_NM",
						"PROD_ENG_NM",
						"PROD_SHRT_NM",
						"CD_ENG_DESC",
						"PRC",
						"PROV",
						"REFERENCE_EFFECTIVE_DT",
						"REFERENCE_EXPIRY_DT",
						"ERROR_CODE",
		                "ERROR_CREATE_TS")
				 VALUES (CUR_MDM."CD_NM",
						 CUR_MDM."CD_TY",
						 CUR_MDM."LOB_NM",
						 CUR_MDM."PROD_ENG_NM",
						 CUR_MDM."PROD_SHRT_NM",
						 CUR_MDM."CD_ENG_DESC",
						 CUR_MDM."PRC",
						 CUR_MDM."PROV",
						 CUR_MDM."REFERENCE_EFFECTIVE_DT",
						 CUR_MDM."REFERENCE_EXPIRY_DT",
						 :CURRENT_ERROR,
					     LV_CUR_UTC);
				     
         -- Set Error Flag				        
			LV_ERROR_FLAG := 'Y';
			
		END FOR;

-- Processing for Successful Records
   

--   If Code Price exists for the Code Name in the Target NDB Table then history will be maintained for that record.
     ELSEIF CUR_MDM.FLAG_EXISTING_RECORD = 'U' THEN

--     Update the target NDB table
	   UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_BILL_CD_PRC" NDB 
		  SET  NDB.REFERENCE_EXPIRY_DT = CUR_MDM.EFFECTIVE_DATE_PREV_DAY,
	 		   NDB.MODIFIED_TS         = LV_CUR_UTC 
		WHERE  CUR_MDM."CD_TY"         = NDB."CD_TY"
		  AND  CUR_MDM."CD_NM"         = NDB."CD_NM"  
		  AND  NDB.REFERENCE_EXPIRY_DT = '99991231';
		  
--    Insert the Incoming new record
      INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_BILL_CD_PRC"(
		   	  	  "CD_NM",
				  "CD_TY",
				  "LOB_NM",
				  "PROD_ENG_NM",
				  "PROD_SHRT_NM",
			      "CD_ENG_DESC",
			      "PRC",
				  "PROV",
				  "REFERENCE_EFFECTIVE_DT",
				  "REFERENCE_EXPIRY_DT",
				  "INSRT_TS",
		          "MODIFIED_TS")
		   VALUES (CUR_MDM."CD_NM",
				   CUR_MDM."CD_TY",
				   CUR_MDM."LOB_NM",
			       CUR_MDM."PROD_ENG_NM",
				   CUR_MDM."PROD_SHRT_NM",
				   CUR_MDM."CD_ENG_DESC",
				   CUR_MDM."PRC",
				   CUR_MDM."PROV",
				   CUR_MDM."REFERENCE_EFFECTIVE_DT",
				   CUR_MDM."REFERENCE_EXPIRY_DT",
				   LV_CUR_UTC,
				   LV_CUR_UTC);		
					 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_MDM_INTERNT_CD_PRC
					   ("CD_TY", 
					    "CD_NM") 
			    VALUES ( CUR_MDM."CD_TY", 
				 		 CUR_MDM."CD_NM");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("CD_TY", 
					    "CD_NM") 
			    VALUES ( CUR_MDM."CD_TY", 
				 		 CUR_MDM."CD_NM");           
                    	
    ELSEIF CUR_MDM.FLAG_EXISTING_RECORD = 'I' THEN
    
--    Insert Code Price details for existing Code Name in the target NDB table

      UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_BILL_CD_PRC" NDB
 		  SET NDB."CD_ENG_DESC"= CUR_MDM."CD_ENG_DESC",
			  NDB."PRC"        = CUR_MDM."PRC",
			  NDB."PROV"       = CUR_MDM."PROV"
 	    WHERE CUR_MDM."CD_TY"  = NDB."CD_TY"
		  AND CUR_MDM."CD_NM"  = NDB."CD_NM";
					 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_MDM_INTERNT_CD_PRC
					   ("CD_TY", 
					    "CD_NM") 
			    VALUES ( CUR_MDM."CD_TY", 
				 		 CUR_MDM."CD_NM");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("CD_TY", 
					    "CD_NM") 
			    VALUES ( CUR_MDM."CD_TY", 
				 		 CUR_MDM."CD_NM");
					   	 
    END IF;

END FOR;					   			    

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::MDM_INTERNT_CD_PRC
UPDATE "LAND"."IFRS_R1.LAND::MDM_INTERNT_CD_PRC" A
  FROM "LAND"."IFRS_R1.LAND::MDM_INTERNT_CD_PRC" A 
 INNER JOIN #UPDATE_MDM_INTERNT_CD_PRC B 
    ON A."CD_TY" = B."CD_TY"
   AND A."CD_NM" = B."CD_NM"
   SET NDB_TS    = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_BILL_CD_PRC_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::MDM_INT_BILL_CD_PRC_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."CD_TY"              = B."CD_TY"
   AND A."CD_NM"              = B."CD_NM"
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END; 	 
