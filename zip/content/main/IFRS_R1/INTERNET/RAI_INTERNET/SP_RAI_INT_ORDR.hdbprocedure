PROCEDURE "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::SP_RAI_INT_ORDR"   
(IP_DATE DATE,
IN IP_BAN NVARCHAR(1000),
 OUT OT_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	AS
 
BEGIN

--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_RAI_INT_ORDR
-- Created By      : BC_EY94105(Snehlata)       
-- Create Date     : 28-01-2017
-- Description     : This procedure will create RAI Order Main and Condition Items based on 
--					 NDB Home Phone Order data.
--   				 The Order RAI Items will be created:
--		 			 	1. Every month in case of M2M contracts.
--						2. In case of Modification events which are:
--							a. Price Change
--							b. Plan Change
--							c. Suspension of the services
--							d. Termination of a contract.
				    
--   				 If the Batch ID is blank in the NDB order, then it will create RAI item at T0. 
--   

--   				 Based on the Bill Cycle, it will create RAI item for T1... T24. 
--   				 If the time indicator in NDB is T0, then it will create RAI for T1.
--   				 If the time indicator in NDB is T1, then it will create RAI for T2.
--   				 This procedure will cover both order creation and order modifcation
--   				 for term contract, SSP and TP will be calcualted for the entire contract period
--   				 if the contracts gets modified in between the billing cycle, the SSP and TP 
--					 for the contract  modification will be calculated based on the pro-rated.
                           
--   				 This Procedure has 2 parameters:
--					   	1. The date parameter 'IP_DATE': Using this date paramter,
--					   	   RAI item	can be created for past records(if it is required).
-- 					    2. The  OT_STATUS parametere : This parameter give the status of the 
-- 						   Procedure whether it is  success or failure

-- 					  INT_ORDR_MAIN_EH and INT_ORDR_COND_EH Table : Will be used to trace the errors

-- 					  FREQUENCY OF PROCEDURE EXECUTION: Daily
		
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- M O D I F I C A T I O N   H I S T O R Y
----------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
-- 08/08/2017  | BC_EZ23103       | CR 283 - Update to process the records based on input parameter as IP_BAN 
-- 06/10/2017  | BC_EZ18725       | RAID 585 - Update the new RAI control field TIMESTAMP_UTC for RUN_ID update 
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- Description Of the changes 
----------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>        
----------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LV_BATCH_ID       		INTEGER;
DECLARE LV_ORDR_MAIN_COUNT      INTEGER;
DECLARE LV_ORDR_COND_COUNT      INTEGER;
DECLARE LV_CUR_UTC 				TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE LV_CUR_DATE 			DATE      := CURRENT_DATE;
DECLARE LV_SESSION_ID           NVARCHAR(32) := SYSUUID;
DECLARE LV_CUR_UTC_TIME 		DECIMAL(15,2) 
                                := TO_DECIMAL(TO_CHAR(CURRENT_UTCTIMESTAMP,'YYYYMMDDHHMISS'),15,2);
DECLARE LC_SQL_ERROR            NVARCHAR(40) DEFAULT 'SQL_EXCEPTION : SIBLING ERROR';                                                                
DECLARE CURRENT_ERROR		    NVARCHAR(100);
DECLARE ERROR_TAB 			    TABLE (ERROR_CODE NVARCHAR(100));
DECLARE RECORD_COUNT		    INTEGER;
DECLARE i					    INTEGER;
DECLARE IP_BAN_LIST 			NVARCHAR(1000);                              
DECLARE LV_ERROR_FLAG 		    NVARCHAR(1) := 'N';
DECLARE LC_ERROR_TEXT 		    NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	    NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';

--CREATE LOCAL TEMPORARY TABLE "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT" AS(SELECT * FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN");

--CREATE LOCAL TEMPORARY TABLE "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT"_EH AS(SELECT * FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH");

--CREATE LOCAL TEMPORARY TABLE "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_TT" AS(SELECT * FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND");

--CREATE LOCAL TEMPORARY TABLE "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_TT"_EH AS(SELECT * FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH");	

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------

TEMP_RAI_TABLE_TEMP = 
     SELECT 
        "CC_X_NEGATIVE_ITEM",
        "PRM_CONTR_CUST",
        "ALTN_CONTR_NUM",
        "SOC",
        "ITEM_TRANS_PRICE",        
        "REFERENCE_ID",
        "SRCDOC_ID",
        "TIM_IND",
        "EXPIRY_DATE",
        "MOD_IND",
        "PRIOD_CVRG_END_DT",
        "PRIOD_CVRG_ST_DT",
        "ITEM_STATE_RD",
        "CONTR_IPTN_DT",        
        "KUNNR_SID",
        "CC_BILL_DAY",
        "BATCH_ID",
        "CC_REF_ID",        
        "CC_START_DATE",
        "RAI_ITEM_ID",
        "CC_TP",
        "CC_SSP",
        "CC_END_DT",
        "ADJ_RSN_CD",
        "CST_CNTR",
        "RAC_CD",
        "MKT",
        "LGL_ENTT",
        "CONVERSION_IND",
        "CC_ZZ_BKTXT",
        "EXECUTION_ID",        
        "CC_ZZ_XBLNR",
        "CC_ZZ_ZUONR",
        "CC_ZZ_LEGACY",
        "CC_ZZ_AUFNR",
        "CC_ZZ_UPFLAG",
        "CC_ZZ_MINPRICE",
        "CC_ZZ_ADJ_RSN_CD",
        "CC_ZZ_BILLER",
        "CC_ZZ_BU_VIEW",
        "CC_ZZ_CONVERSION",
        "CC_ZZ_MOD_TYPE",
        "CC_ZZ_PAOBJNR",
        "ACCT_TY",
        "ACCT_SUB_TY",
        "CC_ZZ_PRE_POST",
        "CC_ZZ_VBUND",
        "CC_ZZ_BUKRS",                
        "CC_GL_ACCOUNT_STR",
       -- "CC_ZZ_ICHKONT",
        "BUKRS",
        "CC_ZZ_MWSKZ",
        "CC_ZZ_TXJCD",        
        "INSERT_TS",
        "CC_ZZ_SGTXT",        
        "CC_ZZ_KOSTL",
        "EFFECTIVE_DATE",
        "SRCDOC_COMP",
        "SRCDOC_LOGSYS",
        "SRCDOC_TYPE",
        "REFERENCE_TYPE",
        "WAERS",
        "RECEIV_ACCOUNT",
        "KOSTL",
        "ERROR_STATUS",
        "ERROR_CODE",
        "CC_PL_ACCOUNT",
        "CC_QUANTITY",
        "CC_QUANTITY_UNIT",
        "CC_BILREL",
        "CC_PARTNER",
        "CC_SALES_ORG",
        "CC_CATEGORY",
        "CC_MAIN_COND_TYPE",
        "CC_COND_TYPE_TP",
        "CC_COND_TYPE_SSP",
        "POB_TYPE",
	 	"CC_CHARGE_TYPE",
	 	"VALUE_RELEVANT",
	 	"CC_SIBLING_ERROR",
	 	"PRDCT_TYP" ,
	 	"COMPOUND_KEY",
	 	"TIMESTAMP_DT"
	FROM "_SYS_BIC"."IFRS_R1.INTERNET.RAI_INTERNET/CA_INT_ORDR_SIBLING_CHECK"
	(PLACEHOLDER."$$IP_BILL_DAY$$" => :IP_DATE);
--------------------------------------------------------------------------------------------------
--      FILTER ALTN_CONTR_NUM as per CR_283
--------------------------------------------------------------------------------------------------	 	
IF IP_BAN IS NULL THEN
 	IP_BAN_LIST := '1=1';
ELSE
 IP_BAN_LIST := 'ALTN_CONTR_NUM IN('||:IP_BAN||')';
END IF;

TEMP_RAI_TABLE = APPLY_FILTER (:TEMP_RAI_TABLE_TEMP,:IP_BAN_LIST);

BEGIN
	DECLARE CURSOR C_RAI_ORDR FOR SELECT * FROM :TEMP_RAI_TABLE;
	
	DECLARE CURSOR C_PARENT_RAI_ORDR FOR 
	SELECT "CC_REF_ID" FROM :TEMP_RAI_TABLE
     WHERE "CC_SIBLING_ERROR" = '0' and "ERROR_STATUS" = '0' GROUP BY "CC_REF_ID";	
			
--------------------------------------------------------------------------------------------------
-- Create a Batch ID for RAI processing
-------------------------------------------------------------------------------------------------- 
	
SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI_BATCH_ID".NEXTVAL INTO LV_BATCH_ID FROM DUMMY;	
	 
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 							 
	 
CREATE LOCAL TEMPORARY TABLE #UPDATE_INT_ORDER 
	(PRM_CONTR_CUST		NVARCHAR(35),
	ALTN_CONTR_NUM 	    NVARCHAR(35),
	SOC                 NVARCHAR(9), 
	SRCDOC_ID           NVARCHAR(35),
	REFERENCE_ID        NVARCHAR(30),
	RAI_ITEM_ID         NVARCHAR(15),
	BILL_DATE           DATE,
	TIME_IND            NVARCHAR(4),
	MOD_IND             NVARCHAR(1),
	EFFECTIVE_DATE      DATE,
	COMPOUND_KEY        NVARCHAR(18),
	PRDCT_TYP           NVARCHAR(1),
	HEADER_ID			NVARCHAR(20),
	TIMESTAMP_UTC       DECIMAL(15,0));--RAID 585

CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_MAIN (SRCDOC_ID NVARCHAR(35));

CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_COND (SRCDOC_ID NVARCHAR(35));

--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 


FOR CUR_ORDER AS C_RAI_ORDR DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION	
	
		
-- Do Nothing. Exception Handled to ensure SP does not get terminated
	END;
			 

	INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH"
	(
        "SRCDOC_COMP",
        "SRCDOC_LOGSYS",
        "SRCDOC_TYPE",
        "SRCDOC_ID",
        "TIMESTAMP_UTC",
        "HEADER_ID",
        "ITEM_ID",
        "REFERENCE_TYPE",
        "REFERENCE_ID",
        "KUNNR",
        "PARTNER",
        "BUKRS",
        "WAERS",
        "QUANTITY",
        "QUANTITY_UNIT",
        "BILREL",
        "START_DATE",
        "END_DATE",
        "SALES_ORG",
        "RECEIV_ACCOUNT",
        "INCEPTION_DATE",
        "ZZ_ADJ_RSN_CD",
        "ZZ_AUFNR",
        "ZZ_BATCH_ID",
        "ZZ_BILLER",
        "ZZ_BKTXT",
        "ZZ_BUKRS",
        "ZZ_BU_VIEW",
        --"ZZ_ICHKONT",
        "ZZ_KOSTL",
        "ZZ_LEGACY",
        "ZZ_MATNR",
        "ZZ_MATNR_GRP",
        "ZZ_MINPRICE",
        "ZZ_MWSKZ",
        "ZZ_PAOBJNR",
        "ZZ_PRE_POST",
        "ZZ_SGTXT",
        "ZZ_TXJCD",
        "ZZ_UPFFLG",
        "ZZ_VBUND",
        "ZZ_XBLNR",
        "ZZ_ZUONR",
        "ZZ_MOD_TYPE",
        "VALUE_RELEVANT",
        "ERROR_CODE",
        "TECHNICAL_MESSAGE",
        "ERROR_CREATE_TS")
	VALUES
	(           
        CUR_ORDER."SRCDOC_COMP",
        CUR_ORDER."SRCDOC_LOGSYS",
        CUR_ORDER."SRCDOC_TYPE",
        CUR_ORDER."SRCDOC_ID",
        CUR_ORDER."TIMESTAMP_DT",
        CUR_ORDER."ALTN_CONTR_NUM",
        CUR_ORDER."RAI_ITEM_ID",
        CUR_ORDER."REFERENCE_TYPE",
        CUR_ORDER."CC_REF_ID",
        CUR_ORDER."KUNNR_SID",
        CUR_ORDER.CC_PARTNER,
        CUR_ORDER."BUKRS",
        CUR_ORDER."WAERS",
        CUR_ORDER.CC_QUANTITY,
        CUR_ORDER.CC_QUANTITY_UNIT,
        CUR_ORDER.CC_BILREL,
        CUR_ORDER."CC_START_DATE",
        CUR_ORDER."CC_END_DT",
        CUR_ORDER.CC_SALES_ORG,
        CUR_ORDER."RECEIV_ACCOUNT",
        CUR_ORDER."CONTR_IPTN_DT",
        CUR_ORDER."ADJ_RSN_CD",
        CUR_ORDER."CC_ZZ_AUFNR",
        :LV_BATCH_ID,
        CUR_ORDER."CC_ZZ_BILLER",
        CUR_ORDER."CC_ZZ_BKTXT",
        CUR_ORDER."CC_ZZ_BUKRS",
        CUR_ORDER."CC_ZZ_BU_VIEW",
        --CUR_ORDER."CC_ZZ_ICHKONT",
        CUR_ORDER."CC_ZZ_KOSTL",
        CUR_ORDER."CC_ZZ_LEGACY",
        Null,
        CUR_ORDER."POB_TYPE",
        CUR_ORDER."CC_ZZ_MINPRICE",
        CUR_ORDER."CC_ZZ_MWSKZ",
        CUR_ORDER."CC_ZZ_PAOBJNR",
        CUR_ORDER."CC_ZZ_PRE_POST",
        CUR_ORDER."CC_ZZ_SGTXT",
        CUR_ORDER."CC_ZZ_TXJCD",
        CUR_ORDER."CC_ZZ_UPFLAG",
        CUR_ORDER."CC_ZZ_VBUND",
        CUR_ORDER."CC_ZZ_XBLNR",
        CUR_ORDER."CC_ZZ_ZUONR",
        CUR_ORDER."CC_ZZ_MOD_TYPE",
        CUR_ORDER."VALUE_RELEVANT",
        ::SQL_ERROR_CODE,
        ::SQL_ERROR_MESSAGE,
        :LV_CUR_UTC);
		            
-- Insert record into ORDER Condition error table for SSP(Standalone Selling Price)     
	INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH"
	(
		"SRCDOC_COMP",
		"SRCDOC_LOGSYS",
		"SRCDOC_TYPE",
		"SRCDOC_ID",
		"TIMESTAMP_UTC",
		"CONDITION_TYPE",
		"PL_ACCOUNT",			
		"BETRW",
		"WAERS",
		"CATEGORY",
		"MAIN_COND_TYPE",
		"ERROR_CODE",
	    "TECHNICAL_MESSAGE",
	    "ERROR_CREATE_TS"
	)
	VALUES( 		
	    CUR_ORDER."SRCDOC_COMP",
		CUR_ORDER."SRCDOC_LOGSYS",			
		CUR_ORDER."SRCDOC_TYPE",
		CUR_ORDER."SRCDOC_ID",
		CUR_ORDER."TIMESTAMP_DT",
		CUR_ORDER.CC_COND_TYPE_SSP,
		CUR_ORDER."CC_PL_ACCOUNT",
		CUR_ORDER."CC_SSP",
		CUR_ORDER."WAERS",
		CUR_ORDER.CC_CATEGORY,
		CUR_ORDER.CC_MAIN_COND_TYPE,
		::SQL_ERROR_CODE,
	    ::SQL_ERROR_MESSAGE,
	    LV_CUR_UTC);	
     
-- Insert record into ORDER Condition error table for TP(Transaction Price)
	INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH"
	(
		"SRCDOC_COMP",
		"SRCDOC_LOGSYS",
		"SRCDOC_TYPE",
		"SRCDOC_ID",
		"TIMESTAMP_UTC",
		"CONDITION_TYPE",
		"PL_ACCOUNT",			
		"BETRW",
		"WAERS",
		"CATEGORY",
		"MAIN_COND_TYPE",
		"ERROR_CODE",
	    "TECHNICAL_MESSAGE",
	    "ERROR_CREATE_TS"
	)
	VALUES( 		
	    CUR_ORDER."SRCDOC_COMP",
		CUR_ORDER."SRCDOC_LOGSYS",			
		CUR_ORDER."SRCDOC_TYPE",
		CUR_ORDER."SRCDOC_ID",
		CUR_ORDER."TIMESTAMP_DT",
		CUR_ORDER.CC_COND_TYPE_TP,
		CUR_ORDER."CC_PL_ACCOUNT",
		CUR_ORDER."CC_SSP",
		CUR_ORDER."WAERS",
		CUR_ORDER.CC_CATEGORY,
		CUR_ORDER.CC_MAIN_COND_TYPE,
		::SQL_ERROR_CODE,
	    ::SQL_ERROR_MESSAGE,
	    LV_CUR_UTC);	
    
	
	LV_ERROR_FLAG := 'Y';
    
END;

  

--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
IF CUR_ORDER.CC_SIBLING_ERROR ='1' OR CUR_ORDER.ERROR_STATUS = '1' THEN
	
--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
	CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_ORDER."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

-- Loop through the Error Records
	FOR i IN 1 .. :RECORD_COUNT DO
			
-- Fetch the Error Code
		CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
-- All erroneous records are inserted into Order Main EH table 
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"HEADER_ID",
			"ITEM_ID",
			"REFERENCE_TYPE",
			"REFERENCE_ID",
			"KUNNR",
			"PARTNER",
			"BUKRS",
			"WAERS",
			"QUANTITY",
			"QUANTITY_UNIT",
			"BILREL",
			"START_DATE",
			"END_DATE",
			"SALES_ORG",
			"RECEIV_ACCOUNT",
			"INCEPTION_DATE",
			"ZZ_ADJ_RSN_CD",
			"ZZ_AUFNR",
			"ZZ_BATCH_ID",
			"ZZ_BILLER",
			"ZZ_BKTXT",
			"ZZ_BUKRS",
			"ZZ_BU_VIEW",
			--"ZZ_ICHKONT",
			"ZZ_KOSTL",
			"ZZ_LEGACY",
			"ZZ_MATNR",
			"ZZ_MATNR_GRP",
			"ZZ_MINPRICE",
			"ZZ_MWSKZ",
			"ZZ_PAOBJNR",
			"ZZ_PRE_POST",
			"ZZ_SGTXT",
			"ZZ_TXJCD",
			"ZZ_UPFFLG",
			"ZZ_VBUND",
			"ZZ_XBLNR",
			"ZZ_ZUONR",
			"ZZ_MOD_TYPE",
			"VALUE_RELEVANT",
			"ERROR_CODE",
		    "ERROR_CREATE_TS")
		VALUES
		(   
			CUR_ORDER."SRCDOC_COMP",
            CUR_ORDER."SRCDOC_LOGSYS",
			CUR_ORDER."SRCDOC_TYPE",
            CUR_ORDER."SRCDOC_ID",
            CUR_ORDER."TIMESTAMP_DT",
            CUR_ORDER."ALTN_CONTR_NUM",
            CUR_ORDER."RAI_ITEM_ID",
            CUR_ORDER."REFERENCE_TYPE",
            CUR_ORDER."CC_REF_ID",
            CUR_ORDER."KUNNR_SID",
            CUR_ORDER.CC_PARTNER,
            CUR_ORDER."BUKRS",
            CUR_ORDER."WAERS",
            CUR_ORDER.CC_QUANTITY,
            CUR_ORDER.CC_QUANTITY_UNIT,
            CUR_ORDER.CC_BILREL,
            CUR_ORDER."CC_START_DATE",
            CUR_ORDER."CC_END_DT",
            CUR_ORDER.CC_SALES_ORG,
            CUR_ORDER."RECEIV_ACCOUNT",
            CUR_ORDER."CONTR_IPTN_DT",
            CUR_ORDER."ADJ_RSN_CD",
            CUR_ORDER."CC_ZZ_AUFNR",
            :LV_BATCH_ID,
            CUR_ORDER."CC_ZZ_BILLER",
            CUR_ORDER."CC_ZZ_BKTXT",
            CUR_ORDER."CC_ZZ_BUKRS",
            CUR_ORDER."CC_ZZ_BU_VIEW",
	        --CUR_ORDER."CC_ZZ_ICHKONT",
            CUR_ORDER."CC_ZZ_KOSTL",
            CUR_ORDER."CC_ZZ_LEGACY",
            Null,
            CUR_ORDER."POB_TYPE",
            CUR_ORDER."CC_ZZ_MINPRICE",
            CUR_ORDER."CC_ZZ_MWSKZ",
            CUR_ORDER."CC_ZZ_PAOBJNR",
            CUR_ORDER."CC_ZZ_PRE_POST", 
            CUR_ORDER."CC_ZZ_SGTXT",
            CUR_ORDER."CC_ZZ_TXJCD",
            CUR_ORDER."CC_ZZ_UPFLAG",
            CUR_ORDER."CC_ZZ_VBUND",
            CUR_ORDER."CC_ZZ_XBLNR",
            CUR_ORDER."CC_ZZ_ZUONR",
            CUR_ORDER."CC_ZZ_MOD_TYPE",
            CUR_ORDER."VALUE_RELEVANT",
            :CURRENT_ERROR,
		    LV_CUR_UTC); 
		            
		            
-- Insert record into ORDER Condition error table for SSP(Standalone Saling Price)     
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"CONDITION_TYPE",
			"PL_ACCOUNT",			
			"BETRW",
			"WAERS",
			"CATEGORY",
			"MAIN_COND_TYPE",
			"ERROR_CODE",
		    "ERROR_CREATE_TS"
		)
		VALUES( 		
		    CUR_ORDER."SRCDOC_COMP",
			CUR_ORDER."SRCDOC_LOGSYS",			
			CUR_ORDER."SRCDOC_TYPE",
			CUR_ORDER."SRCDOC_ID",
			CUR_ORDER."TIMESTAMP_DT",
			CUR_ORDER.CC_COND_TYPE_TP,
			CUR_ORDER."CC_PL_ACCOUNT",
			CUR_ORDER."CC_SSP",
			CUR_ORDER."WAERS",
			CUR_ORDER.CC_CATEGORY,
			CUR_ORDER.CC_MAIN_COND_TYPE,
			:CURRENT_ERROR,
		    LV_CUR_UTC);	
		    
     
-- Insert record into ORDER Condition error table for TP(Transaction Price)
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"CONDITION_TYPE",
			"PL_ACCOUNT",			
			"BETRW",
			"WAERS",
			"CATEGORY",
			"MAIN_COND_TYPE",
			"ERROR_CODE",
		    "ERROR_CREATE_TS"
		)
		VALUES( 		
		    CUR_ORDER."SRCDOC_COMP",
			CUR_ORDER."SRCDOC_LOGSYS",			
			CUR_ORDER."SRCDOC_TYPE",
			CUR_ORDER."SRCDOC_ID",
			CUR_ORDER."TIMESTAMP_DT",
			CUR_ORDER.CC_COND_TYPE_TP,
			CUR_ORDER."CC_PL_ACCOUNT",
			CUR_ORDER."CC_SSP",
			CUR_ORDER."WAERS",
			CUR_ORDER.CC_CATEGORY,
			CUR_ORDER.CC_MAIN_COND_TYPE,
			:CURRENT_ERROR,
		    LV_CUR_UTC);
		    
-- Set Error Flag		
		LV_ERROR_FLAG := 'Y';
     	
	END FOR;
		
	
-- Processing for Successful Records
    ELSE
		BEGIN AUTONOMOUS TRANSACTION
			-- All valid records are inserted into Order Main table  
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"HEADER_ID",
			"ITEM_ID",
			"REFERENCE_TYPE",
			"REFERENCE_ID",
			"KUNNR",
			"PARTNER",
			"BUKRS",
			"WAERS",
			"QUANTITY",
			"QUANTITY_UNIT",
			"BILREL",
			"START_DATE",
			"END_DATE",
			"SALES_ORG",
			"RECEIV_ACCOUNT",
			"INCEPTION_DATE",
			"ZZ_ADJ_RSN_CD",
			"ZZ_AUFNR",
			"ZZ_BATCH_ID",
			"ZZ_BILLER",
			"ZZ_BKTXT",
			"ZZ_BUKRS",
			"ZZ_BU_VIEW",
			--"ZZ_ICHKONT",
			"ZZ_KOSTL",
			"ZZ_LEGACY",
			"ZZ_MATNR",
			"ZZ_MATNR_GRP",
			"ZZ_MINPRICE",
			"ZZ_MWSKZ",
			"ZZ_PAOBJNR",
			"ZZ_PRE_POST",
			"ZZ_SGTXT",
			"ZZ_TXJCD",
			"ZZ_UPFFLG",
			"ZZ_VBUND",
			"ZZ_XBLNR",
			"ZZ_ZUONR",
			"ZZ_MOD_TYPE",
			"VALUE_RELEVANT",			
			"SESSION_ID")
		VALUES
		(   
			CUR_ORDER."SRCDOC_COMP",
            CUR_ORDER."SRCDOC_LOGSYS",
			CUR_ORDER."SRCDOC_TYPE",
            CUR_ORDER."SRCDOC_ID",
            CUR_ORDER."TIMESTAMP_DT",
            CUR_ORDER."ALTN_CONTR_NUM",
            CUR_ORDER."RAI_ITEM_ID",
            CUR_ORDER."REFERENCE_TYPE",
            CUR_ORDER."CC_REF_ID",
            CUR_ORDER."KUNNR_SID",
            CUR_ORDER.CC_PARTNER,
            CUR_ORDER."BUKRS",
            CUR_ORDER."WAERS",
            CUR_ORDER.CC_QUANTITY,
            CUR_ORDER.CC_QUANTITY_UNIT,
            CUR_ORDER.CC_BILREL,
            CUR_ORDER."CC_START_DATE",
            CUR_ORDER."CC_END_DT",
            CUR_ORDER.CC_SALES_ORG,
            CUR_ORDER."RECEIV_ACCOUNT",
            CUR_ORDER."CONTR_IPTN_DT",
            CUR_ORDER."ADJ_RSN_CD",
            CUR_ORDER."CC_ZZ_AUFNR",
            :LV_BATCH_ID,
            CUR_ORDER."CC_ZZ_BILLER",
            CUR_ORDER."CC_ZZ_BKTXT",
            CUR_ORDER."CC_ZZ_BUKRS",
            CUR_ORDER."CC_ZZ_BU_VIEW",
	        --CUR_ORDER."CC_ZZ_ICHKONT",
            CUR_ORDER."CC_ZZ_KOSTL",
            CUR_ORDER."CC_ZZ_LEGACY",
            Null,
            CUR_ORDER."POB_TYPE",
            CUR_ORDER."CC_ZZ_MINPRICE",
            CUR_ORDER."CC_ZZ_MWSKZ",
            CUR_ORDER."CC_ZZ_PAOBJNR",
            CUR_ORDER."CC_ZZ_PRE_POST", 
            CUR_ORDER."CC_ZZ_SGTXT",
            CUR_ORDER."CC_ZZ_TXJCD",
            CUR_ORDER."CC_ZZ_UPFLAG",
            CUR_ORDER."CC_ZZ_VBUND",
            CUR_ORDER."CC_ZZ_XBLNR",
            CUR_ORDER."CC_ZZ_ZUONR",
            CUR_ORDER."CC_ZZ_MOD_TYPE",
            CUR_ORDER."VALUE_RELEVANT",		    
		    :LV_SESSION_ID); 
		            
-- Insert record into ORDER Condition error table for SSP(Standalone Saling Price)     
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_TT"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"CONDITION_TYPE",
			"PL_ACCOUNT",			
			"BETRW",
			"WAERS",
			"CATEGORY",
			"MAIN_COND_TYPE",			
			"SESSION_ID"
		)
		VALUES( 		
		    CUR_ORDER."SRCDOC_COMP",
			CUR_ORDER."SRCDOC_LOGSYS",			
			CUR_ORDER."SRCDOC_TYPE",
			CUR_ORDER."SRCDOC_ID",
			CUR_ORDER."TIMESTAMP_DT",
			CUR_ORDER.CC_COND_TYPE_SSP,
			CUR_ORDER."CC_PL_ACCOUNT",
			CUR_ORDER."CC_SSP",
			CUR_ORDER."WAERS",
			CUR_ORDER.CC_CATEGORY,
			CUR_ORDER.CC_MAIN_COND_TYPE,
		    :LV_SESSION_ID);	
     
-- Insert record into ORDER Condition error table for TP(Transaction Price)
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_TT"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"CONDITION_TYPE",
			"PL_ACCOUNT",			
			"BETRW",
			"WAERS",
			"CATEGORY",
			"MAIN_COND_TYPE",
			"SESSION_ID"
		)
		VALUES( 		
		    CUR_ORDER."SRCDOC_COMP",
			CUR_ORDER."SRCDOC_LOGSYS",			
			CUR_ORDER."SRCDOC_TYPE",
			CUR_ORDER."SRCDOC_ID",
			CUR_ORDER."TIMESTAMP_DT",
			CUR_ORDER.CC_COND_TYPE_TP,
			CUR_ORDER."CC_PL_ACCOUNT",
			CUR_ORDER."CC_TP",
			CUR_ORDER."WAERS",
			CUR_ORDER.CC_CATEGORY,
			CUR_ORDER.CC_MAIN_COND_TYPE,
		    :LV_SESSION_ID);
		
		END;	

	END IF;
	
END FOR;

	
FOR CUR_PARENT AS C_PARENT_RAI_ORDR DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 

--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 
	
      -- Do Nothing. Exception Handled to ensure SP does not get terminated
      
      END;


--      Insert record into INTERNET ORDER main error table
        INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"HEADER_ID",
			"ITEM_ID",
			"REFERENCE_TYPE",
			"REFERENCE_ID",
			"KUNNR",
			"PARTNER",
			"BUKRS",
			"WAERS",
			"QUANTITY",
			"QUANTITY_UNIT",
			"BILREL",
			"START_DATE",
			"END_DATE",
			"SALES_ORG",
			"RECEIV_ACCOUNT",
			"INCEPTION_DATE",
			"ZZ_ADJ_RSN_CD",
			"ZZ_AUFNR",
			"ZZ_BATCH_ID",
			"ZZ_BILLER",
			"ZZ_BKTXT",
			"ZZ_BRANDACT",
			"ZZ_BUKRS",
			"ZZ_BU_VIEW",
			--"ZZ_ICHKONT",
			"ZZ_KOSTL",
			"ZZ_LEGACY",
			"ZZ_MATNR",
			"ZZ_MATNR_GRP",
			"ZZ_MINPRICE",
			"ZZ_MWSKZ",
			"ZZ_PAOBJNR",
			"ZZ_PRE_POST",
			"ZZ_SGTXT",
			"ZZ_TXJCD",
			"ZZ_UPFFLG",
			"ZZ_VBUND",
			"ZZ_XBLNR",
			"ZZ_ZUONR",
			"ZZ_MOD_TYPE",
			"VALUE_RELEVANT",
			"ERROR_CODE",
			"TECHNICAL_MESSAGE",
			"ERROR_CREATE_TS")
		SELECT          
            "SRCDOC_COMP",
            "SRCDOC_LOGSYS",
            "SRCDOC_TYPE",
            "SRCDOC_ID",
            "TIMESTAMP_UTC",
            "HEADER_ID",
            "ITEM_ID",
            "REFERENCE_TYPE",
            "REFERENCE_ID",
            "KUNNR",
            "PARTNER",
            "BUKRS",
            "WAERS",
            "QUANTITY",
            "QUANTITY_UNIT",
            "BILREL",
            "START_DATE",
            "END_DATE",
            "SALES_ORG",
            "RECEIV_ACCOUNT",
            "INCEPTION_DATE",
            "ZZ_ADJ_RSN_CD",
            "ZZ_AUFNR",
            :LV_BATCH_ID,
            "ZZ_BILLER",
            "ZZ_BKTXT",
            "ZZ_BRANDACT",
            "ZZ_BUKRS",
            "ZZ_BU_VIEW",
           --"ZZ_ICHKONT",
            "ZZ_KOSTL",
            "ZZ_LEGACY",
            "ZZ_MATNR",
            "ZZ_MATNR_GRP",
            "ZZ_MINPRICE",
            "ZZ_MWSKZ",
            "ZZ_PAOBJNR",
            "ZZ_PRE_POST",
            "ZZ_SGTXT",
            "ZZ_TXJCD",
            "ZZ_UPFFLG",
            "ZZ_VBUND",
            "ZZ_XBLNR",
            "ZZ_ZUONR",
            "ZZ_MOD_TYPE",
            "VALUE_RELEVANT",
            ::SQL_ERROR_CODE,
			::SQL_ERROR_MESSAGE,
			:LV_CUR_UTC
            FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT"
            WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
            AND   "SESSION_ID" = LV_SESSION_ID;         
		            
-- Insert record into ORDER Condition error table for SSP(Standalone Saling Price)and TP(Transaction Price)    
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"CONDITION_TYPE",
			"PL_ACCOUNT",			
			"BETRW",
			"WAERS",
			"CATEGORY",
			"MAIN_COND_TYPE",
			"ERROR_CODE",
			"TECHNICAL_MESSAGE",
			"ERROR_CREATE_TS"			
		)
		SELECT		
		    COND."SRCDOC_COMP",
			COND."SRCDOC_LOGSYS",			
			COND."SRCDOC_TYPE",
			COND."SRCDOC_ID",
			COND."TIMESTAMP_UTC",
			COND."CONDITION_TYPE",
			COND."PL_ACCOUNT",
			COND."BETRW",
			COND."WAERS",
			COND."CATEGORY",
			COND."MAIN_COND_TYPE",
			::SQL_ERROR_CODE,
			::SQL_ERROR_MESSAGE,
			:LV_CUR_UTC
			FROM (SELECT * FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_TT" 
			WHERE "SESSION_ID" = LV_SESSION_ID )COND,
			 (SELECT SRCDOC_ID FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT"
					      WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
					      AND "SESSION_ID" = LV_SESSION_ID ) MAIN 
				          WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";	
     			
	LV_ERROR_FLAG := 'Y';
    
    END;		    	
         
    --  Check if any siblings of the parent is in ORDR MAIN Error table.
    --  If Yes move the entire dataset of the corresponding parent into MAIN error and COND error tables.
    
 		    SELECT COUNT(*) INTO LV_ORDR_MAIN_COUNT 
 		    FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH"
	 		WHERE "REFERENCE_ID"=CUR_PARENT."CC_REF_ID"
	 		AND "ZZ_BATCH_ID" = LV_BATCH_ID;
 		
 		
         -- All valid records are inserted into HP NM1 Order Main table
		IF :LV_ORDR_MAIN_COUNT > 0 THEN
		 -- There's an error move all RAI MAIN to EH 
		 INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH"
		   ("SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"HEADER_ID",
			"ITEM_ID",
			"REFERENCE_TYPE",
			"REFERENCE_ID",
			"KUNNR",
			"PARTNER",
			"BUKRS",
			"WAERS",
			"QUANTITY",
			"QUANTITY_UNIT",
			"BILREL",
			"START_DATE",
			"END_DATE",
			"SALES_ORG",
			"RECEIV_ACCOUNT",
			"INCEPTION_DATE",
			"ZZ_ADJ_RSN_CD",
			"ZZ_AUFNR",
			"ZZ_BATCH_ID",
			"ZZ_BILLER",
			"ZZ_BKTXT",
			"ZZ_BRANDACT",
			"ZZ_BUKRS",
			"ZZ_BU_VIEW",
			--"ZZ_ICHKONT",
			"ZZ_KOSTL",
			"ZZ_LEGACY",
			"ZZ_MATNR",
			"ZZ_MATNR_GRP",
			"ZZ_MINPRICE",
			"ZZ_MWSKZ",
			"ZZ_PAOBJNR",
			"ZZ_PRE_POST",
			"ZZ_SGTXT",
			"ZZ_TXJCD",
			"ZZ_UPFFLG",
			"ZZ_VBUND",
			"ZZ_XBLNR",
			"ZZ_ZUONR",
			"ZZ_MOD_TYPE",
			"VALUE_RELEVANT",
			"ERROR_CODE",
			"ERROR_CREATE_TS")
		SELECT          
            "SRCDOC_COMP",
            "SRCDOC_LOGSYS",
            "SRCDOC_TYPE",
            "SRCDOC_ID",
            "TIMESTAMP_UTC",
            "HEADER_ID",
            "ITEM_ID",
            "REFERENCE_TYPE",
            "REFERENCE_ID",
            "KUNNR",
            "PARTNER",
            "BUKRS",
            "WAERS",
            "QUANTITY",
            "QUANTITY_UNIT",
            "BILREL",
            "START_DATE",
            "END_DATE",
            "SALES_ORG",
            "RECEIV_ACCOUNT",
            "INCEPTION_DATE",
            "ZZ_ADJ_RSN_CD",
            "ZZ_AUFNR",
            :LV_BATCH_ID,
            "ZZ_BILLER",
            "ZZ_BKTXT",
            "ZZ_BRANDACT",
            "ZZ_BUKRS",
            "ZZ_BU_VIEW",
            --"ZZ_ICHKONT",
            "ZZ_KOSTL",
            "ZZ_LEGACY",
            "ZZ_MATNR",
            "ZZ_MATNR_GRP",
            "ZZ_MINPRICE",
            "ZZ_MWSKZ",
            "ZZ_PAOBJNR",
            "ZZ_PRE_POST",
            "ZZ_SGTXT",
            "ZZ_TXJCD",
            "ZZ_UPFFLG",
            "ZZ_VBUND",
            "ZZ_XBLNR",
            "ZZ_ZUONR",
            "ZZ_MOD_TYPE",
            "VALUE_RELEVANT",
            LC_SQL_ERROR,
			LV_CUR_UTC
            FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT"
            WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
            AND "SESSION_ID" = LV_SESSION_ID;       

-- Insert record into ORDER Condition error table for SSP(Standalone Saling Price)and TP(Transaction Price)     
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"CONDITION_TYPE",
			"PL_ACCOUNT",			
			"BETRW",
			"WAERS",
			"CATEGORY",
			"MAIN_COND_TYPE",
			"ERROR_CODE",
			"ERROR_CREATE_TS"
		)
		SELECT				
		    COND."SRCDOC_COMP",
			COND."SRCDOC_LOGSYS",			
			COND."SRCDOC_TYPE",
			COND."SRCDOC_ID",
			COND."TIMESTAMP_UTC",
			COND."CONDITION_TYPE",
			COND."PL_ACCOUNT",
			COND."BETRW",
			COND."WAERS",
			COND."CATEGORY",
			COND."MAIN_COND_TYPE",
			LC_SQL_ERROR,
			LV_CUR_UTC
			FROM (SELECT * FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_TT"
			WHERE "SESSION_ID" = LV_SESSION_ID ) COND,
			 (SELECT SRCDOC_ID FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT"
					      WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
					      AND "SESSION_ID" = LV_SESSION_ID) MAIN 
				          WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
--  Set Error Flag				        
			LV_ERROR_FLAG := 'Y';	  
	
	--	Processing of successful records(none of the siblings of a corresponding parent are in error)
				
		ELSE
			
			BEGIN AUTONOMOUS TRANSACTION
           INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN"
		   ("SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"HEADER_ID",
			"ITEM_ID",
			"REFERENCE_TYPE",
			"REFERENCE_ID",
			"KUNNR",
			"PARTNER",
			"BUKRS",
			"WAERS",
			"QUANTITY",
			"QUANTITY_UNIT",
			"BILREL",
			"START_DATE",
			"END_DATE",
			"SALES_ORG",
			"RECEIV_ACCOUNT",
			"INCEPTION_DATE",
			"ZZ_ADJ_RSN_CD",
			"ZZ_AUFNR",
			"ZZ_BATCH_ID",
			"ZZ_BILLER",
			"ZZ_BKTXT",
			"ZZ_BRANDACT",
			"ZZ_BUKRS",
			"ZZ_BU_VIEW",
			--"ZZ_ICHKONT",
			"ZZ_KOSTL",
			"ZZ_LEGACY",
			"ZZ_MATNR",
			"ZZ_MATNR_GRP",
			"ZZ_MINPRICE",
			"ZZ_MWSKZ",
			"ZZ_PAOBJNR",
			"ZZ_PRE_POST",
			"ZZ_SGTXT",
			"ZZ_TXJCD",
			"ZZ_UPFFLG",
			"ZZ_VBUND",
			"ZZ_XBLNR",
			"ZZ_ZUONR",
			"ZZ_MOD_TYPE",
			"VALUE_RELEVANT")
		SELECT          
            "SRCDOC_COMP",
            "SRCDOC_LOGSYS",
            "SRCDOC_TYPE",
            "SRCDOC_ID",
            "TIMESTAMP_UTC",
            "HEADER_ID",
            "ITEM_ID",
            "REFERENCE_TYPE",
            "REFERENCE_ID",
            "KUNNR",
            "PARTNER",
            "BUKRS",
            "WAERS",
            "QUANTITY",
            "QUANTITY_UNIT",
            "BILREL",
            "START_DATE",
            "END_DATE",
            "SALES_ORG",
            "RECEIV_ACCOUNT",
            "INCEPTION_DATE",
            "ZZ_ADJ_RSN_CD",
            "ZZ_AUFNR",
            :LV_BATCH_ID,
            "ZZ_BILLER",
            "ZZ_BKTXT",
            "ZZ_BRANDACT",
            "ZZ_BUKRS",
            "ZZ_BU_VIEW",
            --"ZZ_ICHKONT",
            "ZZ_KOSTL",
            "ZZ_LEGACY",
            "ZZ_MATNR",
            "ZZ_MATNR_GRP",
            "ZZ_MINPRICE",
            "ZZ_MWSKZ",
            "ZZ_PAOBJNR",
            "ZZ_PRE_POST",
            "ZZ_SGTXT",
            "ZZ_TXJCD",
            "ZZ_UPFFLG",
            "ZZ_VBUND",
            "ZZ_XBLNR",
            "ZZ_ZUONR",
            "ZZ_MOD_TYPE",
            "VALUE_RELEVANT"
            FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT" 
            WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
            AND "SESSION_ID" = LV_SESSION_ID;      

-- Insert record into ORDER Condition error table for SSP(Standalone Saling Price)and TP(Transaction Price)     
		INSERT INTO "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND"
		(
			"SRCDOC_COMP",
			"SRCDOC_LOGSYS",
			"SRCDOC_TYPE",
			"SRCDOC_ID",
			"TIMESTAMP_UTC",
			"CONDITION_TYPE",
			"PL_ACCOUNT",			
			"BETRW",
			"WAERS",
			"CATEGORY",
			"MAIN_COND_TYPE"
		)
		SELECT				
		   COND."SRCDOC_COMP",
			COND."SRCDOC_LOGSYS",			
			COND."SRCDOC_TYPE",
			COND."SRCDOC_ID",
			COND."TIMESTAMP_UTC",
			COND."CONDITION_TYPE",
			COND."PL_ACCOUNT",
			COND."BETRW",
			COND."WAERS",
			COND."CATEGORY",
			COND."MAIN_COND_TYPE"
			FROM ( SELECT * FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_TT"
			WHERE "SESSION_ID" = LV_SESSION_ID) COND,
			 (SELECT SRCDOC_ID FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_TT"
					      WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
					      AND "SESSION_ID" = LV_SESSION_ID) MAIN 
				          WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
		
        END; -- END Autonomous transaction
        			
--Insert PK of successfully processed Records into Local Temp Tables 
  -- for Updating NDB_TS in corresponding Landing Tables records

 		INSERT INTO #UPDATE_INT_ORDER
		(
		   	PRM_CONTR_CUST,
		   	ALTN_CONTR_NUM,
		    SOC,
		   	SRCDOC_ID,
		   	REFERENCE_ID,
		   	RAI_ITEM_ID,
		   	BILL_DATE,
		   	TIME_IND,
		   	MOD_IND,
		   	EFFECTIVE_DATE,
		   	PRDCT_TYP,
		   	COMPOUND_KEY,
		   	HEADER_ID,
		   	TIMESTAMP_UTC ---RAID 585
		)
		SELECT 
	        A."PRM_CONTR_CUST",
		    A."ALTN_CONTR_NUM",
		    A."SOC",
		    A."SRCDOC_ID",
		    A."CC_REF_ID",
		    A."RAI_ITEM_ID",
		    A."CC_BILL_DAY",
		    A."TIM_IND",
		    A."MOD_IND"	,
		    A."EFFECTIVE_DATE",
		    A."PRDCT_TYP",
		    A."COMPOUND_KEY",
		    A."ALTN_CONTR_NUM",
		    A."TIMESTAMP_DT" --RAID 585
            FROM :TEMP_RAI_TABLE A,
                 "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN" B	
            WHERE B."REFERENCE_ID" = A."CC_REF_ID"
            AND "ZZ_BATCH_ID" = LV_BATCH_ID;
		    
		INSERT INTO	#UPDATE_EH_DELETION_MAIN (SRCDOC_ID) 
				SELECT "SRCDOC_ID" FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN"
			    WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
			    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
			   		
			INSERT INTO	#UPDATE_EH_DELETION_COND (SRCDOC_ID) 
				SELECT COND."SRCDOC_ID" FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND"COND,
				(SELECT "SRCDOC_ID" FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN" 
					  	  WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
					  	  AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				 WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";	    
		   		       				          												 		   		        		   	   
    END IF;

  
END FOR;

--------------------------------------------------------------------------------------------------
-- Update NDB Tables
-------------------------------------------------------------------------------------------------- 
		

-- Updating the Source document Id, Reference Id, Header Id, Time indicator, RAI Item ID,Batch id 
  -- and RAI Timestamp in NDB order table for M2M Contracts as well as Optional POB of Term Contracts
	UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER" A
	FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER" A
	INNER JOIN #UPDATE_INT_ORDER B
	ON  A."PRM_CONTR_CUST" = B."PRM_CONTR_CUST"
	AND A."ALTN_CONTR_NUM" =B."ALTN_CONTR_NUM"
	AND A."SOC" = B."SOC"
	AND A."EFFECTIVE_DATE" =B."EFFECTIVE_DATE"
	AND A."PRDCT_TYP" = B."PRDCT_TYP"
	AND A."COMPOUND_KEY"= B."COMPOUND_KEY"
	SET 
		A."SRCDOC_ID" = B."SRCDOC_ID",
		A."REFERENCE_ID"  = B."REFERENCE_ID",				
		A."RAI_ITEM_ID"   = B."RAI_ITEM_ID",
		A."BATCH_ID"      = LV_BATCH_ID,
		A."BILL_DATE"     = B."BILL_DATE",
		A."TIM_IND"      = B."TIME_IND",
		A."MOD_IND"       = B."MOD_IND",
		A."HEADER_ID"	  = B."HEADER_ID",
		A."TIMESTAMP_UTC" = B."TIMESTAMP_UTC",	---RAID 585
		A."RAI_TS"        = LV_CUR_UTC
		WHERE A."MOD_IND" IS NULL;
			
			
						 
-- Update Order Main Error Table

	UPDATE "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH" A
	FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_MAIN_EH" A
	INNER JOIN #UPDATE_EH_DELETION_MAIN B
	ON A.SRCDOC_ID=B.SRCDOC_ID
	SET  (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 

-- Update Order Cond Error Table

	UPDATE "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH" A
	FROM "RAI_INTERNET"."IFRS_R1.INTERNET.RAI_INTERNET::INTERNET_ORDR_COND_EH" A
	INNER JOIN #UPDATE_EH_DELETION_COND B
	ON A.SRCDOC_ID=B.SRCDOC_ID
	SET  (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 
			
-------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

		OT_STATUS := LC_ERROR_TEXT; 
			
    ELSE

		OT_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
											            

END;
END;