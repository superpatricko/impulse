PROCEDURE "RAI_HP"."IFRS_R1.HP.RAI_HP::SP_RAI2RAR_BATCH_HP_NM1_ORDR" ( IN IP_RECORD_LIMIT INT DEFAULT 600000 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	AS
BEGIN

    DECLARE LV_BATCH_ID BIGINT;
    DECLARE LV_COUNT BIGINT;
    DECLARE LV_THRESHOLD BIGINT:= :IP_RECORD_LIMIT;

    CREATE LOCAL TEMPORARY TABLE #UPDATE_CURRENT_BATCH_TO_RAR 
                                (SRCDOC_ID             NVARCHAR(35),
                                 TIMESTAMP_UTC         DECIMAL(15,0),
                                 HEADER_ID             NVARCHAR(10),
                                 RAR_BATCH_ASSIGNED    NVARCHAR(1));
                             
    INSERT INTO  #UPDATE_CURRENT_BATCH_TO_RAR
                 (SRCDOC_ID,
                  TIMESTAMP_UTC,
                  HEADER_ID,
                  RAR_BATCH_ASSIGNED)
           SELECT SRCDOC_ID,
                  TIMESTAMP_UTC,
                  HEADER_ID,
                  NULL 
             FROM "_SYS_BIC"."IFRS_R1.HP.RAI_HP/CA_HP_NM1_ORDR_RAI2RAR_BATCH";
                      
    SELECT COUNT(SRCDOC_ID) INTO LV_COUNT 
      FROM #UPDATE_CURRENT_BATCH_TO_RAR 
     WHERE RAR_BATCH_ASSIGNED IS NULL;
  
    IF (LV_COUNT>0 and LV_COUNT<=:LV_THRESHOLD) THEN
    
        SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI2RAR_BATCH_ID".nextval
          INTO LV_BATCH_ID 
          FROM DUMMY;
        
        UPDATE "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN" A
          FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN" A
         INNER JOIN #UPDATE_CURRENT_BATCH_TO_RAR B
            ON A.SRCDOC_ID = B.SRCDOC_ID 
           AND A.TIMESTAMP_UTC = B.TIMESTAMP_UTC
           SET RAR_EXTRACT_BATCH_ID = LV_BATCH_ID;
    ELSE
            
        WHILE LV_COUNT > 0
            DO
            SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI2RAR_BATCH_ID".nextval
            INTO LV_BATCH_ID 
            FROM DUMMY; 
            
            HEADER_COUNT = SELECT HEADER_ID FROM
                           (SELECT HEADER_ID,SUM(COUNT(SRCDOC_ID)) OVER(ORDER BY COUNT(SRCDOC_ID) ROWS UNBOUNDED PRECEDING) CNT
                              FROM #UPDATE_CURRENT_BATCH_TO_RAR 
                             WHERE RAR_BATCH_ASSIGNED IS NULL 
                             GROUP BY HEADER_ID)
                         WHERE CNT<=:LV_THRESHOLD; 
                    
            CURRENT_BATCH = SELECT TMP.SRCDOC_ID,TMP.TIMESTAMP_UTC 
                              FROM :HEADER_COUNT SEL 
                             INNER JOIN #UPDATE_CURRENT_BATCH_TO_RAR TMP 
                                ON SEL.HEADER_ID=TMP.HEADER_ID;                   
            
            UPDATE "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN" A
              FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN" A
             INNER JOIN :CURRENT_BATCH B
                ON A.SRCDOC_ID = B.SRCDOC_ID 
               AND A.TIMESTAMP_UTC = B.TIMESTAMP_UTC
               SET RAR_EXTRACT_BATCH_ID = LV_BATCH_ID;
               
               
            UPDATE #UPDATE_CURRENT_BATCH_TO_RAR A
              FROM #UPDATE_CURRENT_BATCH_TO_RAR A
             INNER JOIN :HEADER_COUNT B
                ON A.HEADER_ID = B.HEADER_ID 
               SET RAR_BATCH_ASSIGNED = 'Y';
            
            SELECT COUNT(SRCDOC_ID) INTO LV_COUNT 
              FROM #UPDATE_CURRENT_BATCH_TO_RAR 
             WHERE RAR_BATCH_ASSIGNED IS NULL;
               
        END WHILE;
    
    END IF;

END;
