PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_INT_MODTN_EVNT" (IN  IP_EFF_DT DATE,
 OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS 
	
BEGIN
----------------------------------------------------------------------
-- Procedure Title : SP_INT_POSTBILL
-- Created By      : BC_EZ08930 (Ashutosh)       
-- Create Date     : 15-03-2017
-- Description     : Data Inserted using Calculation View - CA_INT_MODTN_EVNT
--                   to NDB Table - INT_MODTN_EVNT Using this stored procedure.
--                   INT_MODTN_EVNT includes data from table INT_MODTN_EVNT.			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------
DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------   
DECLARE CURSOR C_EVNT FOR
SELECT
	 "TRX_SEQ_NO",
	 "ACTV_CD",
	 "BAN",
	 "SUB_NO",
	 "PRODUCT_TYPE",
	 "REFERENCE_EFFECTIVE_DT",
	 "REFERENCE_EXPIRY_DT",
	 "ODS_SYST_CD",
	 "ACTV_RSN_CD",
	 "EFFECTIVE_DATE",
	 "ISSUE_DATE",
	 "EVNT_FEE",
	 "PENALTIES",
	 "TEMP_SEAS_SUSPNSN",
	 "FLAG_EXISTING_RECORD",
	 "EFFECTIVE_DATE_PREV_DAY",
	 "ERROR_CODE",
	 "ERROR_STATUS"
FROM "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_INT_MOD_EVNT"
			(PLACEHOLDER."$$IP_EFF_DT$$" => :IP_EFF_DT);

----------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-----------------------------------------------------------------------------------------------------
 
CREATE LOCAL TEMPORARY TABLE #UPDATE_MODTN_EVNT(TRX_SEQ_NO INTEGER, ACTV_CD NVARCHAR(3),BAN NVARCHAR(9), SUB_NO NVARCHAR(20), PRODUCT_TYPE NVARCHAR(1),REFERENCE_EFFECTIVE_DT DATE);
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION(TRX_SEQ_NO INTEGER, ACTV_CD NVARCHAR(3),BAN NVARCHAR(9), SUB_NO NVARCHAR(20), PRODUCT_TYPE NVARCHAR(1),REFERENCE_EFFECTIVE_DT DATE);
 
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-----------------------------------------------------------------------------------------------
FOR CUR_EVNT AS C_EVNT DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 	
	   
	-- Do Nothing. Exception Handled to ensure SP does not get terminated 
	 
	 
 	  END;
 	  
	 -- Insert record into error table
	    INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_MODTN_EVNT_EH"(
	                "TRX_SEQ_NO",
       			    "ACTV_CD",
                    "BAN",
       	            "SUB_NO",
				    "PRODUCT_TYPE",
				    "REFERENCE_EFFECTIVE_DT",
				    "REFERENCE_EXPIRY_DT",
				    "ODS_SYST_CD",
				    "ACTV_RSN_CD",
				    "EFFECTIVE_DATE",
				    "ISSUE_DATE",
			 	    "EVNT_FEE",
			 	    "PENALTIES",
				    "TEMP_SEAS_SUSPNSN",
				    "ERROR_CODE",
				    "TECHNICAL_MESSAGE",				    
		    	    "ERROR_CREATE_TS")
		     VALUES (CUR_EVNT."TRX_SEQ_NO",
					 CUR_EVNT."ACTV_CD",
					 CUR_EVNT."BAN",
					 CUR_EVNT."SUB_NO",
					 CUR_EVNT."PRODUCT_TYPE",
					 CUR_EVNT."REFERENCE_EFFECTIVE_DT",
					 CUR_EVNT."REFERENCE_EXPIRY_DT",
					 CUR_EVNT."ODS_SYST_CD",
					 CUR_EVNT."ACTV_RSN_CD",
					 CUR_EVNT."EFFECTIVE_DATE",
					 CUR_EVNT."ISSUE_DATE",
					 CUR_EVNT."EVNT_FEE",
					 CUR_EVNT."PENALTIES",
					 CUR_EVNT."TEMP_SEAS_SUSPNSN",
					 ::SQL_ERROR_CODE,
		             ::SQL_ERROR_MESSAGE,
		             LV_CUR_UTC);
		             
		             
		 LV_ERROR_FLAG := 'Y';
      	
        END;
        
        
         --  Check the Error Status of the Record. If Record is with Error, then send to Error Table
   	   /*   ALTN_CONTR_NUM already exists in INT_MODTN_EVNT NDB table for ALTN_CONTR_NUM  in CA_INT_MODTN_EVNT view.
   	      Always new ALTN_CONTR_NUM is expected from CA_TAP_MODTN_EVNT , Therefore no update (FLAG_EXISTING_RECORD='U')
		  is expected in this view. If an update comes  ERROR_STATUS will be set to '1'	
	   */
	IF CUR_EVNT.ERROR_STATUS = '1' THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_EVNT."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
			 -- Fetch the Error Code
				CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
				
	 -- Insert into the Error Table
	    INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_MODTN_EVNT_EH"( 
	                "TRX_SEQ_NO",
       			    "ACTV_CD",
                    "BAN",
       	            "SUB_NO",
				    "PRODUCT_TYPE",
				    "REFERENCE_EFFECTIVE_DT",
				    "REFERENCE_EXPIRY_DT",
				    "ODS_SYST_CD",
				    "ACTV_RSN_CD",
				    "EFFECTIVE_DATE",
				    "ISSUE_DATE",
			 	    "EVNT_FEE",
			 	    "PENALTIES",
				    "TEMP_SEAS_SUSPNSN",
				    "INSERT_TS",
				    "ERROR_CODE",				    
		    	    "ERROR_CREATE_TS")
		     VALUES (CUR_EVNT."TRX_SEQ_NO",
					 CUR_EVNT."ACTV_CD",
					 CUR_EVNT."BAN",
					 CUR_EVNT."SUB_NO",
					 CUR_EVNT."PRODUCT_TYPE",
					 CUR_EVNT."REFERENCE_EFFECTIVE_DT",
					 CUR_EVNT."REFERENCE_EXPIRY_DT",
					 CUR_EVNT."ODS_SYST_CD",
					 CUR_EVNT."ACTV_RSN_CD",
					 CUR_EVNT."EFFECTIVE_DATE",
					 CUR_EVNT."ISSUE_DATE",
					 CUR_EVNT."EVNT_FEE",
					 CUR_EVNT."PENALTIES",
					 CUR_EVNT."TEMP_SEAS_SUSPNSN",
					 LV_CUR_UTC,
		             :CURRENT_ERROR,		             
		             LV_CUR_UTC);
		             
		 END FOR;
								     
         -- Set Error Flag				        
			LV_ERROR_FLAG := 'Y';

-- Processing for Successful Records

      ELSEIF CUR_EVNT.FLAG_EXISTING_RECORD = 'I' THEN	
      	          
  --    Insert Records into the target NDB table   	
  
   	    INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_MODTN_EVNT"(
   	                "TRX_SEQ_NO",
       			    "ACTV_CD",
                    "BAN",
       	            "SUB_NO",
				    "PRODUCT_TYPE",
				    "REFERENCE_EFFECTIVE_DT",
				    "REFERENCE_EXPIRY_DT",
				    "ODS_SYST_CD",
				    "ACTV_RSN_CD",
				    "EFFECTIVE_DATE",
				    "ISSUE_DATE",
			 	    "EVNT_FEE",
			 	    "PENALTIES",
				    "TEMP_SEAS_SUSPNSN",
				    "INSERT_TS")
		     VALUES (CUR_EVNT."TRX_SEQ_NO",
					 CUR_EVNT."ACTV_CD",
					 CUR_EVNT."BAN",
					 CUR_EVNT."SUB_NO",
					 CUR_EVNT."PRODUCT_TYPE",
					 CUR_EVNT."REFERENCE_EFFECTIVE_DT",
					 CUR_EVNT."REFERENCE_EXPIRY_DT",
					 CUR_EVNT."ODS_SYST_CD",
					 CUR_EVNT."ACTV_RSN_CD",
					 CUR_EVNT."EFFECTIVE_DATE",
					 CUR_EVNT."ISSUE_DATE",
					 CUR_EVNT."EVNT_FEE",
					 CUR_EVNT."PENALTIES",
					 CUR_EVNT."TEMP_SEAS_SUSPNSN",
					 LV_CUR_UTC);
					 
	  --         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		 INSERT INTO #UPDATE_MODTN_EVNT
					 (TRX_SEQ_NO,
       			     ACTV_CD,
                     BAN,
       	             SUB_NO,
				     PRODUCT_TYPE,
				     REFERENCE_EFFECTIVE_DT) 
			  VALUES (CUR_EVNT.TRX_SEQ_NO,
					 CUR_EVNT.ACTV_CD,
					 CUR_EVNT.BAN,
					 CUR_EVNT.SUB_NO,
					 CUR_EVNT.PRODUCT_TYPE,
					 CUR_EVNT.REFERENCE_EFFECTIVE_DT);
			
   	     INSERT INTO #UPDATE_EH_DELETION
   	                 (TRX_SEQ_NO,
       			     ACTV_CD,
                     BAN,
       	             SUB_NO,
				     PRODUCT_TYPE,
				     REFERENCE_EFFECTIVE_DT) 
			  VALUES (CUR_EVNT.TRX_SEQ_NO,
					 CUR_EVNT.ACTV_CD,
					 CUR_EVNT.BAN,
					 CUR_EVNT.SUB_NO,
					 CUR_EVNT.PRODUCT_TYPE,
					 CUR_EVNT.REFERENCE_EFFECTIVE_DT);
   	END IF;  

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::INT_MKT
UPDATE "LAND"."IFRS_R1.LAND::INT_MOD_EVNT" A
  FROM "LAND"."IFRS_R1.LAND::INT_MOD_EVNT" A 
 INNER JOIN #UPDATE_MODTN_EVNT B 
    ON A."TRX_SEQ_NO"        = B."TRX_SEQ_NO"
   AND A."ACTV_CD"           = B."ACTV_CD"
   AND A."BAN"               = B."BAN"
   AND A."SUB_NO"            = B."SUB_NO"
   AND A."PRODUCT_TYPE"      = B."PRODUCT_TYPE" 
   AND A."EFF_DT"            = B."REFERENCE_EFFECTIVE_DT"
   SET NDB_TS                = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;
--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_MODTN_EVNT_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_MODTN_EVNT_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."TRX_SEQ_NO"                 = B."TRX_SEQ_NO"
   AND A."ACTV_CD"                    = B."ACTV_CD"
   AND A."BAN"                        = B."BAN"
   AND A."SUB_NO"                     = B."SUB_NO"
   AND A."PRODUCT_TYPE"               = B."PRODUCT_TYPE"
   AND A."REFERENCE_EFFECTIVE_DT"     = B."REFERENCE_EFFECTIVE_DT"
   SET (DELETE_DATE, DELETED)         = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		             
END;
