PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_INT_POSTBILL"    
(IN  IP_EFF_DT DATE,
 OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN 
----------------------------------------------------------------------
-- Procedure Title : SP_INT_POSTBILL
-- Created By      : BC_EY96110 (Arpit)       
-- Create Date     : 15-03-2017
-- Description     : Data Inserted using Calculation View - CA_INT_PB_SA
--                   To NDB Table - INT_POSTBILL Using this stored procedure.
--                   INT_POSTBILL includes data from table INT_CUST,ZINTERNET_RAC.			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------   
DECLARE CURSOR C_POSTBILL_SA FOR
			  SELECT "DSCNT_PCT",
					 "DSCNT_AMT",
					 "BEFORE_DISCNT_AMT",
					 "ACTV_AMT",
					 "BAN",
					 "ENT_SEQ_NO",
					 "ACTV_SEQ_NO",
					 "SUBSCRIBER_NO",
					 "SOC",
					 "FEAT_CD", 
					 "FTR_REV_CD",
					 "ACTV_CD",
					 "ACTV_RSN_CD",
					 "CHRG_SEQ_NO",
					 "EFFECTIVE_DATE",
					 "BLNC_IMPCT_CD",
					 "CYC_CD",
					 "CYC_RUN_MNTH",
					 "CYC_RUN_YR",
					 "CYC_STR_DT",
					 "DSCNT_CD",
					 "PRIOD_CVRG_ST_DT",
					 "PRIOD_CVRG_END_DT",
					 "ACTV_BL_SEQ_NO",
					 "ACTV_DT",
					 "CYC_END_DT",
					 "CHRG_TYP",
					 "TAX_PROV",
					 "OVR_USG_ING", 
					 "ACCRUAL_IND",
					 "TRANSACTION_TYPE",
					 "MKT_SGMT_CD",
					 "ACCT_TY",
					 "ACCT_SUB_TY",
					 "PROV", 
					 "PRDCT_TYP",
					 "RAC_CD",
					 "CYCLE_BILL_DAY",
					 "PROMO_END_DT",
					 "PROMO_START_DT",
					 "PROMO_EXPY_DT",
					 "PROMO_EFF_DT",
					 "PROMOTION_CODE",
					 "PROD_PROMO_STS_CD",
					 "DISC_CD",
					 "OFFR_TY",
					 "AO_CODE",
					 "PROMO_NAME", 
					 "PROMO_CD",
					 "KUNNR_SID",
					 "DUOTRIO_IND",
					 "REFERENCE_EFFECTIVE_DT",
					 "REFERENCE_EXPIRY_DT",
					 "ERROR_STATUS",
					 "ERROR_CODE",
					 "CYCLE_ID"					 
			    FROM "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_INT_PB_SA"	
                     (PLACEHOLDER."$$IP_EFF_DT$$" => :IP_EFF_DT)
            ORDER BY "REFERENCE_EFFECTIVE_DT", "REFERENCE_EXPIRY_DT"
           WITH HINT (NO_REMOTE_JOIN_RELOCATION);
  
----------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-----------------------------------------------------------------------------------------------------

CREATE LOCAL TEMPORARY TABLE #UPDATE_INT_POSTBILLING (BAN NVARCHAR(9),ENT_SEQ_NO INTEGER, ACTV_SEQ_NO INTEGER, EFF_DT DATE);
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (BAN NVARCHAR(100), ENT_SEQ_NO NVARCHAR(100), ACTV_SEQ_NO NVARCHAR(100)); 
 
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 
FOR CUR_PB_SA AS C_POSTBILL_SA DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 	
	   
	-- Do Nothing. Exception Handled to ensure SP does not get terminated 
	
 	  END;
 	  
	 -- Insert record into error table
	 
	     INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING_EH"(
					 "DSCNT_PCT",
					 "DSCNT_AMT",
					 "BEFORE_DISCNT_AMT",
					 "ACTV_AMT",
					 "BAN",
					 "ENT_SEQ_NO",
					 "ACTV_SEQ_NO",
					 "SUBSCRIBER_NO",
					 "SOC",
					 "FEAT_CD",
					 "FTR_REV_CD",
					 "ACTV_CD",
					 "ACTV_RSN_CD",
					 "CHRG_SEQ_NO",
					 "EFFECTIVE_DATE",
					 "BLNC_IMPCT_CD",
					 "CYC_CD",
					 "CYC_RUN_MNTH",
					 "CYC_RUN_YR",
					 "CYC_STR_DT",
					 "DSCNT_CD",
					 "PRIOD_CVRG_ST_DT",
					 "PRIOD_CVRG_END_DT",
					 "ACTV_BL_SEQ_NO",
					 "ACTV_DT",
					 "CYC_END_DT",
					 "CHRG_TYP",
					 "TAX_PROV",
					 "OVR_USG_ING",
					 "ACCRUAL_IND",
					 "TRANSACTION_TYPE",
					 "MKT_SGMT_CD",
					 "ACCT_TY",
					 "ACCT_SUB_TY",
					 "PROV",
					 "PRDCT_TYP",
					 "RAC_CD",
					 "CYCLE_BILL_DAY",
					 "PROMO_END_DT",
					 "PROMO_START_DT",
					 "PROMO_EXPY_DT",
					 "PROMO_EFF_DT",
					 "PROMOTION_CODE",
					 "PROD_PROMO_STS_CD",
					 "DISC_CD",
					 "OFFR_TY",
					 "AO_CODE",
					 "PROMO_NAME", 
					 "PROMO_CD",
					 "KUNNR_SID",
					 "DUOTRIO_IND",
					 "REFERENCE_EFFECTIVE_DT",
					 "REFERENCE_EXPIRY_DT",
					 "INSERT_TS",
					 "ERROR_CODE",
			         "TECHNICAL_MESSAGE",
			         "ERROR_CREATE_TS",
			         "CYCLE_ID") 
            VALUES  (CUR_PB_SA."DSCNT_PCT",
					 CUR_PB_SA."DSCNT_AMT",
					 CUR_PB_SA."BEFORE_DISCNT_AMT",
					 CUR_PB_SA."ACTV_AMT",
					 CUR_PB_SA."BAN",
					 CUR_PB_SA."ENT_SEQ_NO",
					 CUR_PB_SA."ACTV_SEQ_NO",
					 CUR_PB_SA."SUBSCRIBER_NO",
					 CUR_PB_SA."SOC",
					 CUR_PB_SA."FEAT_CD",
					 CUR_PB_SA."FTR_REV_CD",
					 CUR_PB_SA."ACTV_CD",
					 CUR_PB_SA."ACTV_RSN_CD",
					 CUR_PB_SA."CHRG_SEQ_NO",
					 CUR_PB_SA."EFFECTIVE_DATE",
					 CUR_PB_SA."BLNC_IMPCT_CD",
					 CUR_PB_SA."CYC_CD",
					 CUR_PB_SA."CYC_RUN_MNTH",
				 	 CUR_PB_SA."CYC_RUN_YR",
					 CUR_PB_SA."CYC_STR_DT",
					 CUR_PB_SA."DSCNT_CD",
					 CUR_PB_SA."PRIOD_CVRG_ST_DT",
					 CUR_PB_SA."PRIOD_CVRG_END_DT",
					 CUR_PB_SA."ACTV_BL_SEQ_NO",
					 CUR_PB_SA."ACTV_DT",
					 CUR_PB_SA."CYC_END_DT",
					 CUR_PB_SA."CHRG_TYP",
					 CUR_PB_SA."TAX_PROV",
					 CUR_PB_SA."OVR_USG_ING",
					 CUR_PB_SA."ACCRUAL_IND",
					 CUR_PB_SA."TRANSACTION_TYPE",
					 CUR_PB_SA."MKT_SGMT_CD",
					 CUR_PB_SA."ACCT_TY",
					 CUR_PB_SA."ACCT_SUB_TY",
					 CUR_PB_SA."PROV",
					 CUR_PB_SA."PRDCT_TYP",
					 CUR_PB_SA."RAC_CD",
					 CUR_PB_SA."CYCLE_BILL_DAY",
					 CUR_PB_SA."PROMO_END_DT",
					 CUR_PB_SA."PROMO_START_DT",
					 CUR_PB_SA."PROMO_EXPY_DT",
					 CUR_PB_SA."PROMO_EFF_DT",
					 CUR_PB_SA."PROMOTION_CODE",
					 CUR_PB_SA."PROD_PROMO_STS_CD",
					 CUR_PB_SA."DISC_CD",
					 CUR_PB_SA."OFFR_TY",
					 CUR_PB_SA."AO_CODE",
					 CUR_PB_SA."PROMO_NAME", 
					 CUR_PB_SA."PROMO_CD",
					 CUR_PB_SA."KUNNR_SID",
					 CUR_PB_SA."DUOTRIO_IND",
					 CUR_PB_SA."REFERENCE_EFFECTIVE_DT",
					 CUR_PB_SA."REFERENCE_EXPIRY_DT",
	 				 LV_CUR_UTC,
		             ::SQL_ERROR_CODE,
		             ::SQL_ERROR_MESSAGE,
		             LV_CUR_UTC,
		             CUR_PB_SA."CYCLE_ID");   
   
				     
	 -- Set Error Flag		
				LV_ERROR_FLAG := 'Y';	
	  	       
	 END;

--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF CUR_PB_SA.ERROR_STATUS = '1' THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_PB_SA."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
			 -- Insert into the Error Table
			 
		        INSERT INTO  "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING_EH"(
							 "DSCNT_PCT",
							 "DSCNT_AMT",
							 "BEFORE_DISCNT_AMT",
							 "ACTV_AMT",
							 "BAN",
							 "ENT_SEQ_NO",
							 "ACTV_SEQ_NO",
							 "SUBSCRIBER_NO",
							 "SOC",
							 "FEAT_CD",
							 "FTR_REV_CD",
							 "ACTV_CD",
							 "ACTV_RSN_CD",
							 "CHRG_SEQ_NO",
							 "EFFECTIVE_DATE",
							 "BLNC_IMPCT_CD",
							 "CYC_CD",
							 "CYC_RUN_MNTH",
							 "CYC_RUN_YR",
							 "CYC_STR_DT",
							 "DSCNT_CD",
							 "PRIOD_CVRG_ST_DT",
							 "PRIOD_CVRG_END_DT",
							 "ACTV_BL_SEQ_NO",
							 "ACTV_DT",
							 "CYC_END_DT",
							 "CHRG_TYP",
							 "TAX_PROV",
							 "OVR_USG_ING",
							 "ACCRUAL_IND",
							 "TRANSACTION_TYPE",
							 "MKT_SGMT_CD",
							 "ACCT_TY",
							 "ACCT_SUB_TY",
							 "PROV",
							 "PRDCT_TYP",
							 "RAC_CD",
							 "CYCLE_BILL_DAY",
							 "PROMO_END_DT",
							 "PROMO_START_DT",
							 "PROMO_EXPY_DT",
							 "PROMO_EFF_DT",
							 "PROMOTION_CODE",
							 "PROD_PROMO_STS_CD",
							 "DISC_CD",
							 "OFFR_TY",
							 "AO_CODE",
							 "PROMO_NAME", 
							 "PROMO_CD",
							 "KUNNR_SID",
							 "DUOTRIO_IND",
							 "REFERENCE_EFFECTIVE_DT",
					 		 "REFERENCE_EXPIRY_DT",
							  INSERT_TS,
						     "ERROR_CODE",
				             "ERROR_CREATE_TS",
				             "CYCLE_ID") 
		            VALUES  (CUR_PB_SA."DSCNT_PCT",
							 CUR_PB_SA."DSCNT_AMT",
							 CUR_PB_SA."BEFORE_DISCNT_AMT",
							 CUR_PB_SA."ACTV_AMT",
							 CUR_PB_SA."BAN",
							 CUR_PB_SA."ENT_SEQ_NO",
							 CUR_PB_SA."ACTV_SEQ_NO",
							 CUR_PB_SA."SUBSCRIBER_NO",
							 CUR_PB_SA."SOC",
							 CUR_PB_SA."FEAT_CD",
							 CUR_PB_SA."FTR_REV_CD",
							 CUR_PB_SA."ACTV_CD",
							 CUR_PB_SA."ACTV_RSN_CD",
							 CUR_PB_SA."CHRG_SEQ_NO",
							 CUR_PB_SA."EFFECTIVE_DATE",
							 CUR_PB_SA."BLNC_IMPCT_CD",
							 CUR_PB_SA."CYC_CD",
							 CUR_PB_SA."CYC_RUN_MNTH",
						 	 CUR_PB_SA."CYC_RUN_YR",
							 CUR_PB_SA."CYC_STR_DT",
							 CUR_PB_SA."DSCNT_CD",
							 CUR_PB_SA."PRIOD_CVRG_ST_DT",
							 CUR_PB_SA."PRIOD_CVRG_END_DT",
							 CUR_PB_SA."ACTV_BL_SEQ_NO",
							 CUR_PB_SA."ACTV_DT",
							 CUR_PB_SA."CYC_END_DT",
							 CUR_PB_SA."CHRG_TYP",
							 CUR_PB_SA."TAX_PROV",
							 CUR_PB_SA."OVR_USG_ING",
							 CUR_PB_SA."ACCRUAL_IND",
							 CUR_PB_SA."TRANSACTION_TYPE",
							 CUR_PB_SA."MKT_SGMT_CD",
							 CUR_PB_SA."ACCT_TY",
							 CUR_PB_SA."ACCT_SUB_TY",
							 CUR_PB_SA."PROV",
							 CUR_PB_SA."PRDCT_TYP",
							 CUR_PB_SA."RAC_CD",
							 CUR_PB_SA."CYCLE_BILL_DAY",
							 CUR_PB_SA."PROMO_END_DT",
							 CUR_PB_SA."PROMO_START_DT",
							 CUR_PB_SA."PROMO_EXPY_DT",
							 CUR_PB_SA."PROMO_EFF_DT",
							 CUR_PB_SA."PROMOTION_CODE",
							 CUR_PB_SA."PROD_PROMO_STS_CD",
							 CUR_PB_SA."DISC_CD",
							 CUR_PB_SA."OFFR_TY",
							 CUR_PB_SA."AO_CODE",
							 CUR_PB_SA."PROMO_NAME", 
							 CUR_PB_SA."PROMO_CD",
							 CUR_PB_SA."KUNNR_SID",
							 CUR_PB_SA."DUOTRIO_IND",
		  					 CUR_PB_SA."REFERENCE_EFFECTIVE_DT",
					         CUR_PB_SA."REFERENCE_EXPIRY_DT",
			 				 LV_CUR_UTC,
				             :CURRENT_ERROR,
				             LV_CUR_UTC,
				             CUR_PB_SA."CYCLE_ID");   
						 
			 END FOR ;
			 
	  -- Set Error Flag  		
	  LV_ERROR_FLAG := 'Y';

  ELSEIF CUR_PB_SA.ERROR_STATUS = '0' THEN 
  
        --Insert Statement--

		        INSERT INTO  "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING"(
							 "DSCNT_PCT",
							 "DSCNT_AMT",
							 "BEFORE_DISCNT_AMT",
							 "ACTV_AMT",
							 "BAN",
							 "ENT_SEQ_NO",
							 "ACTV_SEQ_NO",
							 "SUBSCRIBER_NO",
							 "SOC",
							 "FEAT_CD",
							 "FTR_REV_CD",
							 "ACTV_CD",
							 "ACTV_RSN_CD",
							 "CHRG_SEQ_NO",
							 "EFFECTIVE_DATE",
							 "BLNC_IMPCT_CD",
							 "CYC_CD",
							 "CYC_RUN_MNTH",
							 "CYC_RUN_YR",
							 "CYC_STR_DT",
							 "DSCNT_CD",
							 "PRIOD_CVRG_ST_DT",
							 "PRIOD_CVRG_END_DT",
							 "ACTV_BL_SEQ_NO",
							 "ACTV_DT",
							 "CYC_END_DT",
							 "CHRG_TYP",
							 "TAX_PROV",
							 "OVR_USG_ING",
							 "ACCRUAL_IND",
							 "TRANSACTION_TYPE",
							 "MKT_SGMT_CD",
							 "ACCT_TY",
							 "ACCT_SUB_TY",
							 "PROV",
							 "PRDCT_TYP",
							 "RAC_CD",
							 "CYCLE_BILL_DAY",
							 "PROMO_END_DT",
							 "PROMO_START_DT",
							 "PROMO_EXPY_DT",
							 "PROMO_EFF_DT",
							 "PROMOTION_CODE",
							 "PROD_PROMO_STS_CD",
							 "DISC_CD",
							 "OFFR_TY",
							 "AO_CODE",
							 "PROMO_NAME", 
							 "PROMO_CD",
							 "KUNNR_SID",
							 "DUOTRIO_IND",
							 "REFERENCE_EFFECTIVE_DT",
					 		 "REFERENCE_EXPIRY_DT",
							 "INSERT_TS",
							 "CYCLE_ID")
		            VALUES  (CUR_PB_SA."DSCNT_PCT",
							 CUR_PB_SA."DSCNT_AMT",
							 CUR_PB_SA."BEFORE_DISCNT_AMT",
							 CUR_PB_SA."ACTV_AMT",
							 CUR_PB_SA."BAN",
							 CUR_PB_SA."ENT_SEQ_NO",
							 CUR_PB_SA."ACTV_SEQ_NO",
							 CUR_PB_SA."SUBSCRIBER_NO",
							 CUR_PB_SA."SOC",
							 CUR_PB_SA."FEAT_CD",
							 CUR_PB_SA."FTR_REV_CD",
							 CUR_PB_SA."ACTV_CD",
							 CUR_PB_SA."ACTV_RSN_CD",
							 CUR_PB_SA."CHRG_SEQ_NO",
							 CUR_PB_SA."EFFECTIVE_DATE",
							 CUR_PB_SA."BLNC_IMPCT_CD",
							 CUR_PB_SA."CYC_CD",
							 CUR_PB_SA."CYC_RUN_MNTH",
						 	 CUR_PB_SA."CYC_RUN_YR",
							 CUR_PB_SA."CYC_STR_DT",
							 CUR_PB_SA."DSCNT_CD",
							 CUR_PB_SA."PRIOD_CVRG_ST_DT",
							 CUR_PB_SA."PRIOD_CVRG_END_DT",
							 CUR_PB_SA."ACTV_BL_SEQ_NO",
							 CUR_PB_SA."ACTV_DT",
							 CUR_PB_SA."CYC_END_DT",
							 CUR_PB_SA."CHRG_TYP",
							 CUR_PB_SA."TAX_PROV",
							 CUR_PB_SA."OVR_USG_ING",
							 CUR_PB_SA."ACCRUAL_IND",
							 CUR_PB_SA."TRANSACTION_TYPE",
							 CUR_PB_SA."MKT_SGMT_CD",
							 CUR_PB_SA."ACCT_TY",
							 CUR_PB_SA."ACCT_SUB_TY",
							 CUR_PB_SA."PROV",
							 CUR_PB_SA."PRDCT_TYP",
							 CUR_PB_SA."RAC_CD",
							 CUR_PB_SA."CYCLE_BILL_DAY",
							 CUR_PB_SA."PROMO_END_DT",
							 CUR_PB_SA."PROMO_START_DT",
							 CUR_PB_SA."PROMO_EXPY_DT",
							 CUR_PB_SA."PROMO_EFF_DT",
							 CUR_PB_SA."PROMOTION_CODE",
							 CUR_PB_SA."PROD_PROMO_STS_CD",
							 CUR_PB_SA."DISC_CD",
							 CUR_PB_SA."OFFR_TY",
							 CUR_PB_SA."AO_CODE",
							 CUR_PB_SA."PROMO_NAME", 
							 CUR_PB_SA."PROMO_CD",
							 CUR_PB_SA."KUNNR_SID",
							 CUR_PB_SA."DUOTRIO_IND",
							 CUR_PB_SA."REFERENCE_EFFECTIVE_DT",
					         CUR_PB_SA."REFERENCE_EXPIRY_DT",
			 				 "LV_CUR_UTC",
			 				 CUR_PB_SA."CYCLE_ID");
			 				 
-- End of insert statement -- 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records

		   INSERT INTO #UPDATE_INT_POSTBILLING
		   			   ("BAN", 
		   			    "ACTV_SEQ_NO", 
		   			    "ENT_SEQ_NO",
		   			    "EFF_DT") 
		   		VALUES (CUR_PB_SA."BAN",
		   				CUR_PB_SA."ACTV_SEQ_NO",
		   				CUR_PB_SA."ENT_SEQ_NO",
		   				CUR_PB_SA.REFERENCE_EFFECTIVE_DT);
		   				
		   INSERT INTO #UPDATE_EH_DELETION
		   			   ("BAN", 
		   			    "ACTV_SEQ_NO", 
		   			    "ENT_SEQ_NO") 
		   		VALUES (CUR_PB_SA."BAN",
		   				CUR_PB_SA."ACTV_SEQ_NO",
		   				CUR_PB_SA."ENT_SEQ_NO"); 				
    END IF;

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table "IFRS_R1.LAND::INT_POSTBILL"
UPDATE "LAND"."IFRS_R1.LAND::INT_POSTBILL" A
  FROM "LAND"."IFRS_R1.LAND::INT_POSTBILL" A 
 INNER JOIN #UPDATE_INT_POSTBILLING B 
    ON  A."BAN"         = B."BAN"
   AND  A."ACTV_SEQ_NO" = B."ACTV_SEQ_NO"
   AND  A."ENT_SEQ_NO"  = B."ENT_SEQ_NO"
   AND  A."EFF_DT"	    = B."EFF_DT" 
   SET  NDB_TS          = LV_CUR_UTC
 WHERE  A.NDB_TS IS NULL;

--Update Landing Table "IFRS_R1.LAND::INT_CHARGE_HIST"
UPDATE "LAND"."IFRS_R1.LAND::INT_CHARGE_HIST" A
  FROM "LAND"."IFRS_R1.LAND::INT_CHARGE_HIST" A 
 INNER JOIN #UPDATE_INT_POSTBILLING B 
    ON  A."BAN"         = B."BAN"
   AND  A."ACTV_SEQ_NO" = B."ACTV_SEQ_NO"
   AND  A."ENT_SEQ_NO"  = B."ENT_SEQ_NO"
   AND  A."EFF_DT"	    = B."EFF_DT"
   SET  NDB_TS          = LV_CUR_UTC
 WHERE  A.NDB_TS IS NULL;
 
--Update Landing Table "IFRS_R1.LAND::INT_ADJUSTMENT_HIST"
 UPDATE "LAND"."IFRS_R1.LAND::INT_ADJUSTMENT_HIST" A
  FROM "LAND"."IFRS_R1.LAND::INT_ADJUSTMENT_HIST" A 
 INNER JOIN #UPDATE_INT_POSTBILLING B 
    ON  A."BAN"         = B."BAN"
   AND  A."ACTV_SEQ_NO" = B."ACTV_SEQ_NO"
   AND  A."ENT_SEQ_NO"  = B."ENT_SEQ_NO"
   AND  A."EFF_DT"	    = B."EFF_DT"
   SET  NDB_TS          = LV_CUR_UTC
 WHERE  A.NDB_TS IS NULL;

-- Update Error Table
UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING_EH" A
 INNER JOIN  #UPDATE_EH_DELETION B
    ON  A."BAN"                = B."BAN"
   AND  A."ACTV_SEQ_NO"        = B."ACTV_SEQ_NO"
   AND  A."ENT_SEQ_NO"         = B."ENT_SEQ_NO"
   SET  (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

  
--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 
    
--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
	
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
	END IF;	
END;