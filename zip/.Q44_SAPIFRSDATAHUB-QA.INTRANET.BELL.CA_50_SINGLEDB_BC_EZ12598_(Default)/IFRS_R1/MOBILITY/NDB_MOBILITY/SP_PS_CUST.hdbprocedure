PROCEDURE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::SP_PS_CUST"
(  IN IP_EFF_DATE DATE,
 	OUT OP_STATUS NVARCHAR(1000))
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA 
	AS
BEGIN
--------------------------------------------------------------------------------
-- Procedure Title : IFRS_R1.MOBILITY.NDB_MOBILITY::SP_PS_CUST
--
-- Created By      : BC_EZ07674(Suresh Konidala)          Date :10/09/2016
-- 
-- Procedure Description : We will Insert PS Customer Information into NDB Table
-- Project :Bell Canada
-- 
-- Release :R1/IFRS
--------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------
-- 06/10/2016  | BC_EZ07674       | Updated after unit testing
-- 25/01/2017  | BC_EZ07674       | Customer History changes and Added cursor logic
-- 05/09/2017  | BC_EZ18762		  | Error logic and single coursor
-- 01/06/2017  | BC_EZ07674       | PK changes in NDB
--------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------
-- Modification Number          :<Assign Some Number> 
-- Description of Changes Made> :<Updated the logic of NDB_TS write back>       
--------------------------------------------------------------------------------


	DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
	DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
	DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
	DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
	DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
	DECLARE i					INTEGER;
	DECLARE RECORD_COUNT		INTEGER;
	DECLARE CURRENT_ERROR		NVARCHAR(100);
	DECLARE LV_LOOP_ERROR_FLAG  INTEGER := 0;
	DECLARE LV_PREV_SUBSCR_NO_BAN	NVARCHAR(61) := NULL;
	
	DECLARE CURSOR CA_CUST FOR
	
	SELECT
	 "ACCT_SUB_TY",
	 "ACCT_TY",
	 "ANNIVERSARY_DATE",
	 "BAN",
	 "BILL_ST",
	 "SUBSCR_NO",
	 "EFF_DT",
	 "EMAIL_ADDR",
	 "EQUIPMENT_TYPE",
	 "ESTAB_DT",
	 "FRST_NM",
	 "ESN_IMEI",
	 "MSID",
	 "LANG",
	 "LAST_BUS_NM",
	 "MDN",
	 "NTWK_TY",
	 "PORT_INDICATOR",
	 "SIM",
	 "ST",
	 "PRM_SUBMKT",
	 "CYCL_ID",
	 "INSRT_TS",
	 "NDB_TS",
	 "NDB_MART",
	 "SEQ_ID",
	 "SRC_TS",
	 "PROCESS_ID",
	 "FLAG_EXISTING_RECORD",
	 "BAN_RIGHT",
	 "BAN_PROV_CD",
	 "BAN_SERV_STRT_DT",
	 "BAN_ST_ACTV_CD",
	 "BAN_ST_ACTV_RSN_CD",
	 "BRND",
	 "BUS_ENTT",
	 "CH_ST",
	 "CORP_OBJ_ID",
	 "CRNCY_CD",
	 "DIVN_OBJ_ID",
	 "LGL_ENTT",
	 "MKT_SEG",
	 "NAG_OBJ_ID",
	 "PREPD_IND",
	 "PREV_BAN",
	 "PREV_CTN",
	 "PREV_SUBS",
	 "SL_DIV",
	 "KUNNR_SID",
	 "SUBSCR_PROV_CD",
	 "SUBSCR_REF_NO",
	 "SUBSCR_ST_LAST_ACT",
	 "SUBSCR_ST_RSN_CD",
	 "TRDG_PTNR",
	 "WCOC_IND",
	 "ONE_BILL_IND",
	 "CONSO_ST",
	 "CONSO_STRT_DT",
	 "CONSO_END_DT",
	 "NEW_PLATFORM_BALANCE",
	 "BALANCE_EXPIRY_DATE",
	 "MODIFIED_TS",
	 "ADR_POSTAL",
	 "PRODUCT_TYPE",
	 "SUBSCR_ST",
	 "BAN_ST",
	 "CUSTOMER_EXPIRY_DT",
	 "EFFECTIVE_DATE",
	 "CUSTOMER_EFFECTIVE_DT",
	 "BILL_CYCL",
	 "EXP_DATE",
	 "ERROR_STATUS",
	 "ERROR_CODE"
	  FROM "_SYS_BIC"."IFRS_R1.MOBILITY.NDB_MOBILITY/CA_PS_CUST"
	  (PLACEHOLDER."$$IP_EFF_DATE$$"=> :IP_EFF_DATE)
	  ORDER BY "SUBSCR_NO","BAN","CYCL_ID", "SEQ_ID";

--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
--------------------------------------------------------------------------------------------------  
CREATE LOCAL TEMPORARY TABLE #UPDATE_PS_CUST(SUBSCR_NO NVARCHAR(30), CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION(BAN NVARCHAR(31), SUBSCR_NO NVARCHAR(30),CUSTOMER_EFFECTIVE_DT DATE);

--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 		
	FOR CUR_PY AS CA_CUST DO		
		-- Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION
			-- Define Exit Handler
			DECLARE EXIT HANDLER FOR SQLEXCEPTION 
			BEGIN AUTONOMOUS TRANSACTION 
			END;
		     
					INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST_EH" 
					(
							"SUBSCR_NO",
							"ACCT_SUB_TY",
							"ACCT_TY",
							"BAN",
							"BAN_PROV_CD",
							"BAN_SERV_STRT_DT",
							"BAN_ST",
							"BAN_ST_ACTV_CD",
							"BAN_ST_ACTV_RSN_CD",
							"BILL_CYCL",
							"BRND",
							"BUS_ENTT",
							"CRNCY_CD",
							"LGL_ENTT",
							"MKT_SEG",
							"NAG_OBJ_ID",
							"PREPD_IND",
							"PREV_BAN",
							"PREV_CTN",
							"PREV_SUBS",
							"PRM_SUBMKT",
							"SL_DIV",
							"SUBSCR_PROV_CD",
							"SUBSCR_REF_NO",
							"SUBSCR_ST",
							"SUBSCR_ST_LAST_ACT",
							"SUBSCR_ST_RSN_CD",
							"KUNNR_SID",
							"TRDG_PTNR",
							"WCOC_IND",
							"ONE_BILL_IND",
							"CONSO_ST",
							"CONSO_STRT_DT",
							"CONSO_END_DT",
							"MDN",
							"MSID",
							"PORT_INDICATOR",
							"EFFECTIVE_DATE",
							"ESN_IMEI",
							"SIM",
							"EQUIPMENT_TYPE",
							"ANNIVERSARY_DATE",
							"NEW_PLATFORM_BALANCE",
							"BALANCE_EXPIRY_DATE",
							"INSERT_TS",
							"MODIFIED_TS",
							"FRST_NM",
							"LAST_BUS_NM",
							"ADR_POSTAL",
							"CUSTOMER_EXPIRY_DT",
							"CUSTOMER_EFFECTIVE_DT",
							"PRODUCT_TYPE",
							"ERROR_CODE",
							"TECHNICAL_MESSAGE",
							"ERROR_CREATE_TS"
					) VALUES (
						    CUR_PY."SUBSCR_NO",
							CUR_PY."ACCT_SUB_TY",
							CUR_PY."ACCT_TY",
							CUR_PY."BAN",
							CUR_PY."BAN_PROV_CD",
							CUR_PY."BAN_SERV_STRT_DT",
							CUR_PY."BAN_ST",
							CUR_PY."BAN_ST_ACTV_CD",
							CUR_PY."BAN_ST_ACTV_RSN_CD",
							CUR_PY.BILL_CYCL,
							CUR_PY."BRND",
							CUR_PY."BUS_ENTT",
							CUR_PY."CRNCY_CD",
							CUR_PY."LGL_ENTT",
							CUR_PY."MKT_SEG",
							CUR_PY."NAG_OBJ_ID",
							CUR_PY."PREPD_IND",
							CUR_PY."PREV_BAN",
							CUR_PY."PREV_CTN",
							CUR_PY."PREV_SUBS",
							CUR_PY."PRM_SUBMKT",
							CUR_PY."SL_DIV",
							CUR_PY."SUBSCR_PROV_CD",
							CUR_PY."SUBSCR_REF_NO",
							CUR_PY."SUBSCR_ST",
							CUR_PY."SUBSCR_ST_LAST_ACT",
							CUR_PY."SUBSCR_ST_RSN_CD",
							CUR_PY."KUNNR_SID",
							CUR_PY."TRDG_PTNR",
							CUR_PY."WCOC_IND",
							CUR_PY."ONE_BILL_IND",
							CUR_PY."CONSO_ST",
							CUR_PY."CONSO_STRT_DT",
							CUR_PY."CONSO_END_DT",
							CUR_PY."MDN",
							CUR_PY."MSID",
							CUR_PY."PORT_INDICATOR",
							CUR_PY."EFFECTIVE_DATE",
							CUR_PY."ESN_IMEI",
							CUR_PY."SIM",
							CUR_PY."EQUIPMENT_TYPE",
							CUR_PY."ANNIVERSARY_DATE",
							CUR_PY."NEW_PLATFORM_BALANCE",
							CUR_PY."BALANCE_EXPIRY_DATE",
							LV_CUR_UTC,
							CUR_PY."MODIFIED_TS",
							CUR_PY."FRST_NM",
							CUR_PY."LAST_BUS_NM",
							CUR_PY."ADR_POSTAL",
							CUR_PY."CUSTOMER_EXPIRY_DT",
							CUR_PY."CUSTOMER_EFFECTIVE_DT",
							CUR_PY."PRODUCT_TYPE",
							::SQL_ERROR_CODE,
							::SQL_ERROR_MESSAGE,
					  		LV_CUR_UTC);     	
						LV_ERROR_FLAG := 'Y';	
						LV_LOOP_ERROR_FLAG := 1;	   
			--END for AUTONOMOS		
			END;
			
-----------------------------------------------------------------------------------------------   
    
-- FOR CLEARING THE VARIABLES

	IF (LV_PREV_SUBSCR_NO_BAN IS NULL OR ((CUR_PY."SUBSCR_NO" || CUR_PY."BAN") != LV_PREV_SUBSCR_NO_BAN)) THEN

		LV_LOOP_ERROR_FLAG := 0;
		LV_PREV_SUBSCR_NO_BAN := (CUR_PY."SUBSCR_NO" || CUR_PY."BAN");	   
    END IF;

 -----------------------------------------------------------------------------------------------
		--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF CUR_PY.ERROR_STATUS = '1' THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_PY."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
		 -- Insert into the Error Table
		 INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST_EH" 
					(
							"SUBSCR_NO",
							"ACCT_SUB_TY",
							"ACCT_TY",
							"BAN",
							"BAN_PROV_CD",
							"BAN_SERV_STRT_DT",
							"BAN_ST",
							"BAN_ST_ACTV_CD",
							"BAN_ST_ACTV_RSN_CD",
							"BILL_CYCL",
							"BRND",
							"BUS_ENTT",
							"CRNCY_CD",
							"LGL_ENTT",
							"MKT_SEG",
							"NAG_OBJ_ID",
							"PREPD_IND",
							"PREV_BAN",
							"PREV_CTN",
							"PREV_SUBS",
							"PRM_SUBMKT",
							"SL_DIV",
							"SUBSCR_PROV_CD",
							"SUBSCR_REF_NO",
							"SUBSCR_ST",
							"SUBSCR_ST_LAST_ACT",
							"SUBSCR_ST_RSN_CD",
							"KUNNR_SID",
							"TRDG_PTNR",
							"WCOC_IND",
							"ONE_BILL_IND",
							"CONSO_ST",
							"CONSO_STRT_DT",
							"CONSO_END_DT",
							"MDN",
							"MSID",
							"PORT_INDICATOR",
							"EFFECTIVE_DATE",
							"ESN_IMEI",
							"SIM",
							"EQUIPMENT_TYPE",
							"ANNIVERSARY_DATE",
							"NEW_PLATFORM_BALANCE",
							"BALANCE_EXPIRY_DATE",
							"INSERT_TS",
							"MODIFIED_TS",
							"FRST_NM",
							"LAST_BUS_NM",
							"ADR_POSTAL",
							"CUSTOMER_EXPIRY_DT",
							"CUSTOMER_EFFECTIVE_DT",
							"PRODUCT_TYPE",
							"ERROR_CODE",
							"ERROR_CREATE_TS"
					) VALUES (
						    CUR_PY."SUBSCR_NO",
							CUR_PY."ACCT_SUB_TY",
							CUR_PY."ACCT_TY",
							CUR_PY."BAN",
							CUR_PY."BAN_PROV_CD",
							CUR_PY."BAN_SERV_STRT_DT",
							CUR_PY."BAN_ST",
							CUR_PY."BAN_ST_ACTV_CD",
							CUR_PY."BAN_ST_ACTV_RSN_CD",
							CUR_PY.BILL_CYCL,
							CUR_PY."BRND",
							CUR_PY."BUS_ENTT",
							CUR_PY."CRNCY_CD",
							CUR_PY."LGL_ENTT",
							CUR_PY."MKT_SEG",
							CUR_PY."NAG_OBJ_ID",
							CUR_PY."PREPD_IND",
							CUR_PY."PREV_BAN",
							CUR_PY."PREV_CTN",
							CUR_PY."PREV_SUBS",
							CUR_PY."PRM_SUBMKT",
							CUR_PY."SL_DIV",
							CUR_PY."SUBSCR_PROV_CD",
							CUR_PY."SUBSCR_REF_NO",
							CUR_PY."SUBSCR_ST",
							CUR_PY."SUBSCR_ST_LAST_ACT",
							CUR_PY."SUBSCR_ST_RSN_CD",
							CUR_PY."KUNNR_SID",
							CUR_PY."TRDG_PTNR",
							CUR_PY."WCOC_IND",
							CUR_PY."ONE_BILL_IND",
							CUR_PY."CONSO_ST",
							CUR_PY."CONSO_STRT_DT",
							CUR_PY."CONSO_END_DT",
							CUR_PY."MDN",
							CUR_PY."MSID",
							CUR_PY."PORT_INDICATOR",
							CUR_PY."EFFECTIVE_DATE",
							CUR_PY."ESN_IMEI",
							CUR_PY."SIM",
							CUR_PY."EQUIPMENT_TYPE",
							CUR_PY."ANNIVERSARY_DATE",
							CUR_PY."NEW_PLATFORM_BALANCE",
							CUR_PY."BALANCE_EXPIRY_DATE",
							LV_CUR_UTC,
							CUR_PY."MODIFIED_TS",
							CUR_PY."FRST_NM",
							CUR_PY."LAST_BUS_NM",
							CUR_PY."ADR_POSTAL",
							CUR_PY."CUSTOMER_EXPIRY_DT",
							CUR_PY."CUSTOMER_EFFECTIVE_DT",
							CUR_PY."PRODUCT_TYPE",
							:CURRENT_ERROR,
							LV_CUR_UTC); 					
			
		END FOR;
						         		        
       -- Set Error Flag				        
	    LV_ERROR_FLAG := 'Y';
	    LV_LOOP_ERROR_FLAG := 1;
	    LV_PREV_SUBSCR_NO_BAN := (CUR_PY."SUBSCR_NO" || CUR_PY."BAN");

-- Processing for Successful Records
   ELSE

         IF CUR_PY.ERROR_STATUS = '0' THEN
	    
	        IF LV_LOOP_ERROR_FLAG = 1 THEN
	        
	        
	        		 INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST_EH" 
					(
							"SUBSCR_NO",
							"ACCT_SUB_TY",
							"ACCT_TY",
							"BAN",
							"BAN_PROV_CD",
							"BAN_SERV_STRT_DT",
							"BAN_ST",
							"BAN_ST_ACTV_CD",
							"BAN_ST_ACTV_RSN_CD",
							"BILL_CYCL",
							"BRND",
							"BUS_ENTT",
							"CRNCY_CD",
							"LGL_ENTT",
							"MKT_SEG",
							"NAG_OBJ_ID",
							"PREPD_IND",
							"PREV_BAN",
							"PREV_CTN",
							"PREV_SUBS",
							"PRM_SUBMKT",
							"SL_DIV",
							"SUBSCR_PROV_CD",
							"SUBSCR_REF_NO",
							"SUBSCR_ST",
							"SUBSCR_ST_LAST_ACT",
							"SUBSCR_ST_RSN_CD",
							"KUNNR_SID",
							"TRDG_PTNR",
							"WCOC_IND",
							"ONE_BILL_IND",
							"CONSO_ST",
							"CONSO_STRT_DT",
							"CONSO_END_DT",
							"MDN",
							"MSID",
							"PORT_INDICATOR",
							"EFFECTIVE_DATE",
							"ESN_IMEI",
							"SIM",
							"EQUIPMENT_TYPE",
							"ANNIVERSARY_DATE",
							"NEW_PLATFORM_BALANCE",
							"BALANCE_EXPIRY_DATE",
							"INSERT_TS",
							"MODIFIED_TS",
							"FRST_NM",
							"LAST_BUS_NM",
							"ADR_POSTAL",
							"CUSTOMER_EXPIRY_DT",
							"CUSTOMER_EFFECTIVE_DT",
							"PRODUCT_TYPE",
							"ERROR_CODE",
							"ERROR_CREATE_TS"
					) VALUES (
						    CUR_PY."SUBSCR_NO",
							CUR_PY."ACCT_SUB_TY",
							CUR_PY."ACCT_TY",
							CUR_PY."BAN",
							CUR_PY."BAN_PROV_CD",
							CUR_PY."BAN_SERV_STRT_DT",
							CUR_PY."BAN_ST",
							CUR_PY."BAN_ST_ACTV_CD",
							CUR_PY."BAN_ST_ACTV_RSN_CD",
							CUR_PY.BILL_CYCL,
							CUR_PY."BRND",
							CUR_PY."BUS_ENTT",
							CUR_PY."CRNCY_CD",
							CUR_PY."LGL_ENTT",
							CUR_PY."MKT_SEG",
							CUR_PY."NAG_OBJ_ID",
							CUR_PY."PREPD_IND",
							CUR_PY."PREV_BAN",
							CUR_PY."PREV_CTN",
							CUR_PY."PREV_SUBS",
							CUR_PY."PRM_SUBMKT",
							CUR_PY."SL_DIV",
							CUR_PY."SUBSCR_PROV_CD",
							CUR_PY."SUBSCR_REF_NO",
							CUR_PY."SUBSCR_ST",
							CUR_PY."SUBSCR_ST_LAST_ACT",
							CUR_PY."SUBSCR_ST_RSN_CD",
							CUR_PY."KUNNR_SID",
							CUR_PY."TRDG_PTNR",
							CUR_PY."WCOC_IND",
							CUR_PY."ONE_BILL_IND",
							CUR_PY."CONSO_ST",
							CUR_PY."CONSO_STRT_DT",
							CUR_PY."CONSO_END_DT",
							CUR_PY."MDN",
							CUR_PY."MSID",
							CUR_PY."PORT_INDICATOR",
							CUR_PY."EFFECTIVE_DATE",
							CUR_PY."ESN_IMEI",
							CUR_PY."SIM",
							CUR_PY."EQUIPMENT_TYPE",
							CUR_PY."ANNIVERSARY_DATE",
							CUR_PY."NEW_PLATFORM_BALANCE",
							CUR_PY."BALANCE_EXPIRY_DATE",
							LV_CUR_UTC,
							CUR_PY."MODIFIED_TS",
							CUR_PY."FRST_NM",
							CUR_PY."LAST_BUS_NM",
							CUR_PY."ADR_POSTAL",
							CUR_PY."CUSTOMER_EXPIRY_DT",
							CUR_PY."CUSTOMER_EFFECTIVE_DT",
							CUR_PY."PRODUCT_TYPE",
							'PREVIOUS VERSION IN ERROR',
							LV_CUR_UTC); 
	ELSE	
			
			-- If Record exists in the Target NDB Table
     		IF (CUR_PY.FLAG_EXISTING_RECORD = 'U') AND (CUR_PY."EXP_DATE" IS NOT NULL) THEN
     			BEGIN AUTONOMOUS TRANSACTION
     				
					UPDATE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST" 
					SET MODIFIED_TS = :LV_CUR_UTC,
					CUSTOMER_EXPIRY_DT = CUR_PY."EXP_DATE"
					WHERE SUBSCR_NO = CUR_PY."SUBSCR_NO"
					AND CUR_PY.CUSTOMER_EFFECTIVE_DT < CUSTOMER_EXPIRY_DT
					AND CUSTOMER_EXPIRY_DT = CUR_PY.CUSTOMER_EXPIRY_DT;
					  
					                      
					/* Data will be inserted into Mobility NDB Customer.because we have created
					customer repository of LOB so for PS will not be created separated table*/
					INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST" 
					(
							"SUBSCR_NO",
							"ACCT_SUB_TY",
							"ACCT_TY",
							"BAN",
							"BAN_PROV_CD",
							"BAN_SERV_STRT_DT",
							"BAN_ST",
							"BAN_ST_ACTV_CD",
							"BAN_ST_ACTV_RSN_CD",
							"BILL_CYCL",
							"BRND",
							"BUS_ENTT",
							"CRNCY_CD",
							"LGL_ENTT",
							"MKT_SEG",
							"NAG_OBJ_ID",
							"PREPD_IND",
							"PREV_BAN",
							"PREV_CTN",
							"PREV_SUBS",
							"PRM_SUBMKT",
							"SL_DIV",
							"SUBSCR_PROV_CD",
							"SUBSCR_REF_NO",
							"SUBSCR_ST",
							"SUBSCR_ST_LAST_ACT",
							"SUBSCR_ST_RSN_CD",
							"KUNNR_SID",
							"TRDG_PTNR",
							"WCOC_IND",
							"ONE_BILL_IND",
							"CONSO_ST",
							"CONSO_STRT_DT",
							"CONSO_END_DT",
							"MDN","MSID",
							"PORT_INDICATOR",
							"EFFECTIVE_DATE",
							"ESN_IMEI",
							"SIM",
							"EQUIPMENT_TYPE",
							"ANNIVERSARY_DATE",
							"NEW_PLATFORM_BALANCE",
							"BALANCE_EXPIRY_DATE",
							"INSERT_TS",
							"MODIFIED_TS",
							"FRST_NM",
							"LAST_BUS_NM",
							"ADR_POSTAL",
							"CUSTOMER_EXPIRY_DT",
							"CUSTOMER_EFFECTIVE_DT",
							"PRODUCT_TYPE"
					) VALUES (
						    CUR_PY."SUBSCR_NO",
							CUR_PY."ACCT_SUB_TY",
							CUR_PY."ACCT_TY",
							CUR_PY."BAN",
							CUR_PY."BAN_PROV_CD",
							CUR_PY."BAN_SERV_STRT_DT",
							CUR_PY."BAN_ST",
							CUR_PY."BAN_ST_ACTV_CD",
							CUR_PY."BAN_ST_ACTV_RSN_CD",
							CUR_PY.BILL_CYCL,
							CUR_PY."BRND",
							CUR_PY."BUS_ENTT",
							CUR_PY."CRNCY_CD",
							CUR_PY."LGL_ENTT",
							CUR_PY."MKT_SEG",
							CUR_PY."NAG_OBJ_ID",
							CUR_PY."PREPD_IND",
							CUR_PY."PREV_BAN",
							CUR_PY."PREV_CTN",
							CUR_PY."PREV_SUBS",
							CUR_PY."PRM_SUBMKT",
							CUR_PY."SL_DIV",
							CUR_PY."SUBSCR_PROV_CD",
							CUR_PY."SUBSCR_REF_NO",
							CUR_PY."SUBSCR_ST",
							CUR_PY."SUBSCR_ST_LAST_ACT",
							CUR_PY."SUBSCR_ST_RSN_CD",
							CUR_PY."KUNNR_SID",
							CUR_PY."TRDG_PTNR",
							CUR_PY."WCOC_IND",
							CUR_PY."ONE_BILL_IND",
							CUR_PY."CONSO_ST",
							CUR_PY."CONSO_STRT_DT",
							CUR_PY."CONSO_END_DT",
							CUR_PY."MDN",
							CUR_PY."MSID",
							CUR_PY."PORT_INDICATOR",
							CUR_PY."EFFECTIVE_DATE",
							CUR_PY."ESN_IMEI",
							CUR_PY."SIM",
							CUR_PY."EQUIPMENT_TYPE",
							CUR_PY."ANNIVERSARY_DATE",
							CUR_PY."NEW_PLATFORM_BALANCE",
							CUR_PY."BALANCE_EXPIRY_DATE",
							LV_CUR_UTC,
							CUR_PY."MODIFIED_TS",
							CUR_PY."FRST_NM",
							CUR_PY."LAST_BUS_NM",
							CUR_PY."ADR_POSTAL",
							CUR_PY."CUSTOMER_EXPIRY_DT",
							CUR_PY."CUSTOMER_EFFECTIVE_DT",
							CUR_PY."PRODUCT_TYPE");   
							LV_PREV_SUBSCR_NO_BAN := (CUR_PY."SUBSCR_NO" || CUR_PY."BAN");  				
     			END;
     				-- Insert PK of successfully processed Records into Local Temp Tables 
					-- For Updating NDB_TS in corresponding Landing Tables records
					INSERT INTO #UPDATE_PS_CUST (SUBSCR_NO, CYCL_ID) 
					       VALUES (CUR_PY."SUBSCR_NO", CUR_PY."CYCL_ID");
					
					
					--         Add record to Delete the error from the error table if it exists
					INSERT INTO #UPDATE_EH_DELETION ("BAN", "SUBSCR_NO", "CUSTOMER_EFFECTIVE_DT") 
			               VALUES (CUR_PY."BAN",CUR_PY."SUBSCR_NO", CUR_PY."CUSTOMER_EFFECTIVE_DT"); 
				
     		--ELSE
     		ELSEIF (CUR_PY.FLAG_EXISTING_RECORD = 'I') THEN
     		BEGIN AUTONOMOUS TRANSACTION
     			INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST" 
					(
							"SUBSCR_NO",
							"ACCT_SUB_TY",
							"ACCT_TY",
							"BAN",
							"BAN_PROV_CD",
							"BAN_SERV_STRT_DT",
							"BAN_ST",
							"BAN_ST_ACTV_CD",
							"BAN_ST_ACTV_RSN_CD",
							"BILL_CYCL",
							"BRND",
							"BUS_ENTT",
							"CRNCY_CD",
							"LGL_ENTT",
							"MKT_SEG",
							"NAG_OBJ_ID",
							"PREPD_IND",
							"PREV_BAN",
							"PREV_CTN",
							"PREV_SUBS",
							"PRM_SUBMKT",
							"SL_DIV",
							"SUBSCR_PROV_CD",
							"SUBSCR_REF_NO",
							"SUBSCR_ST",
							"SUBSCR_ST_LAST_ACT",
							"SUBSCR_ST_RSN_CD",
							"KUNNR_SID",
							"TRDG_PTNR",
							"WCOC_IND",
							"ONE_BILL_IND",
							"CONSO_ST",
							"CONSO_STRT_DT",
							"CONSO_END_DT",
							"MDN","MSID",
							"PORT_INDICATOR",
							"EFFECTIVE_DATE",
							"ESN_IMEI",
							"SIM",
							"EQUIPMENT_TYPE",
							"ANNIVERSARY_DATE",
							"NEW_PLATFORM_BALANCE",
							"BALANCE_EXPIRY_DATE",
							"INSERT_TS",
							"MODIFIED_TS",
							"FRST_NM",
							"LAST_BUS_NM",
							"ADR_POSTAL",
							"CUSTOMER_EXPIRY_DT",
							"CUSTOMER_EFFECTIVE_DT",
							"PRODUCT_TYPE"
					) VALUES (
						    CUR_PY."SUBSCR_NO",
							CUR_PY."ACCT_SUB_TY",
							CUR_PY."ACCT_TY",
							CUR_PY."BAN",
							CUR_PY."BAN_PROV_CD",
							CUR_PY."BAN_SERV_STRT_DT",
							CUR_PY."BAN_ST",
							CUR_PY."BAN_ST_ACTV_CD",
							CUR_PY."BAN_ST_ACTV_RSN_CD",
							CUR_PY."BILL_CYCL",
							CUR_PY."BRND",
							CUR_PY."BUS_ENTT",
							CUR_PY."CRNCY_CD",
							CUR_PY."LGL_ENTT",
							CUR_PY."MKT_SEG",
							CUR_PY."NAG_OBJ_ID",
							CUR_PY."PREPD_IND",
							CUR_PY."PREV_BAN",
							CUR_PY."PREV_CTN",
							CUR_PY."PREV_SUBS",
							CUR_PY."PRM_SUBMKT",
							CUR_PY."SL_DIV",
							CUR_PY."SUBSCR_PROV_CD",
							CUR_PY."SUBSCR_REF_NO",
							CUR_PY."SUBSCR_ST",
							CUR_PY."SUBSCR_ST_LAST_ACT",
							CUR_PY."SUBSCR_ST_RSN_CD",
							CUR_PY."KUNNR_SID",
							CUR_PY."TRDG_PTNR",
							CUR_PY."WCOC_IND",
							CUR_PY."ONE_BILL_IND",
							CUR_PY."CONSO_ST",
							CUR_PY."CONSO_STRT_DT",
							CUR_PY."CONSO_END_DT",
							CUR_PY."MDN",
							CUR_PY."MSID",
							CUR_PY."PORT_INDICATOR",
							CUR_PY."EFFECTIVE_DATE",
							CUR_PY."ESN_IMEI",
							CUR_PY."SIM",
							CUR_PY."EQUIPMENT_TYPE",
							CUR_PY."ANNIVERSARY_DATE",
							CUR_PY."NEW_PLATFORM_BALANCE",
							CUR_PY."BALANCE_EXPIRY_DATE",
							LV_CUR_UTC,
							CUR_PY."MODIFIED_TS",
							CUR_PY."FRST_NM",
							CUR_PY."LAST_BUS_NM",
							CUR_PY."ADR_POSTAL",
							CUR_PY."CUSTOMER_EXPIRY_DT",
							CUR_PY."CUSTOMER_EFFECTIVE_DT",
							CUR_PY."PRODUCT_TYPE");  
							LV_PREV_SUBSCR_NO_BAN := (CUR_PY."SUBSCR_NO" || CUR_PY."BAN");
						END;
					-- Insert PK of successfully processed Records into Local Temp Tables 
					-- For Updating NDB_TS in corresponding Landing Tables records
					INSERT INTO #UPDATE_PS_CUST (SUBSCR_NO, CYCL_ID) 
					       VALUES (CUR_PY."SUBSCR_NO", CUR_PY."CYCL_ID");
					       
					--         Add record to Delete the error from the error table if it exists
					INSERT INTO #UPDATE_EH_DELETION ("BAN", "SUBSCR_NO", "CUSTOMER_EFFECTIVE_DT") 
			               VALUES (CUR_PY."BAN",CUR_PY."SUBSCR_NO", CUR_PY."CUSTOMER_EFFECTIVE_DT");
     			
     		END IF ;	
     	END IF ;    
     END IF ;
   END IF ;	
END FOR;
	
--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 
	 -- Update NDB_TS with current_timestamp for the records that has been processed   
		UPDATE "LAND"."IFRS_R1.LAND::PS_CUST" A
		FROM   "LAND"."IFRS_R1.LAND::PS_CUST" A
		INNER JOIN #UPDATE_PS_CUST B ON		 
		A."CUST_ID" = B."SUBSCR_NO"
		AND A."CYCL_ID" = B."CYCL_ID"
		SET NDB_TS=LV_CUR_UTC 
		WHERE NDB_TS IS NULL;
		
--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------
UPDATE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST_EH" A
FROM "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_CUST_EH" A 
INNER JOIN #UPDATE_EH_DELETION B
ON A."BAN" = B."BAN"
AND A."SUBSCR_NO" = B."SUBSCR_NO"
AND A."CUSTOMER_EFFECTIVE_DT"    = B."CUSTOMER_EFFECTIVE_DT"
SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

    	
--------------------------------------------------------------------------------------------------
	-- Set Overall Status
-------------------------------------------------------------------------------------------------- 
	--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
	--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN
    	OP_STATUS := LC_ERROR_TEXT; 			
    ELSE
  		OP_STATUS := LC_SUCCESS_TEXT;				
	END IF;
		

END;