PROCEDURE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::SP_P77_ACSY_CUSTOMER" 
(OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS 

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_P77_ACSY_CUSTOMER
--
-- Created By      : BC_EY96106(Sandeep Adagal)          Date : 31/05/2017
-- 
-- Procedure Description : It is used to Populate the distinct records from the NDB 
--						   table to ACSY CUSTOMER TABLE
--Project :Bell Canada
--
--
----------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
----------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
----------------------------------------------------------------------
--             |                  | 
---------------|------------------|-----------------------------------
-- Description Of the changes 
----------------------------------------------------------------------
-- Modification Number          :<Assign Some Number> 
-- Description of Changes Made> :<Description of Changes>       
----------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);
DECLARE LC_MAX_UNIQUE_ACC_NO INTEGER;
--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 

   DECLARE CURSOR CUR_ACSY FOR
		SELECT
	       	 "UNIQUE_ACC_NO",
	         "COMPANY_CD",
	         "REV_PROFIT_CTR",
	         "REV_GL_ACT_NUM",
	         "DIST_CHANNEL",
	         "SUB_MERC_CTGRY",
	         "ERROR_STATUS",
	 	     "ERROR_CODE" 
        FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_P77_ACSY_CUSTOMER";
--------------------------------------------------------------------------------------------------
--     Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

       CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION ("COMPANY_CD" NVARCHAR(4), "REV_PROFIT_CTR" NVARCHAR(10),"REV_GL_ACT_NUM" NVARCHAR(10),"DIST_CHANNEL" NVARCHAR(2),"SUB_MERC_CTGRY" NVARCHAR(35));
                     	  
--------------------------------------------------------------------------------------------------
--     Maximum UNIQUE_ACC_NO from the ACSY_CUSTOMER table
 		
 	   SELECT IFNULL(CAST(MAX("UNIQUE_ACC_NO") AS INTEGER),0) INTO LC_MAX_UNIQUE_ACC_NO  FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ACSY_CUSTOMER";
--------------------------------------------------------------------------------------------------  

FOR C_ACSY AS CUR_ACSY DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 	
	   
	-- Do Nothing. Exception Handled to ensure SP does not get terminated 
	
 	  END;
 	  
			     -- Insert record into error table
			   	    INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ACSY_CUSTOMER_EH"
			   	    		   ("UNIQUE_ACC_NO",
	         					"COMPANY_CD",
	         					"REV_PROFIT_CTR",
	         					"REV_GL_ACT_NUM",
	         					"DIST_CHANNEL",
	         					"SUB_MERC_CTGRY", 
								"ERROR_CODE",
								"TECHNICAL_MESSAGE",
								"ERROR_CREATE_TS")
			   	         VALUES( C_ACSY."UNIQUE_ACC_NO",
	         					 C_ACSY."COMPANY_CD",
	         					 C_ACSY."REV_PROFIT_CTR",
	         					 C_ACSY."REV_GL_ACT_NUM",
	         					 C_ACSY."DIST_CHANNEL",
	         					 C_ACSY."SUB_MERC_CTGRY", 
								 ::SQL_ERROR_CODE,
						         ::SQL_ERROR_MESSAGE,
						         LV_CUR_UTC); 

	  			LV_ERROR_FLAG := 'Y';
  		  
  	END;	  
    
	IF C_ACSY.ERROR_STATUS = 1 THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(C_ACSY."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
		 --     Insert into the Error Table
		       	INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ACSY_CUSTOMER_EH"
			   	    		   ("UNIQUE_ACC_NO",
	         					"COMPANY_CD",
	         					"REV_PROFIT_CTR",
	         					"REV_GL_ACT_NUM",
	         					"DIST_CHANNEL",
	         					"SUB_MERC_CTGRY", 
								"ERROR_CODE",
								"ERROR_CREATE_TS")
			   	         VALUES( C_ACSY."UNIQUE_ACC_NO",
	         					 C_ACSY."COMPANY_CD",
	         					 C_ACSY."REV_PROFIT_CTR",
	         					 C_ACSY."REV_GL_ACT_NUM",
	         					 C_ACSY."DIST_CHANNEL",
	         					 C_ACSY."SUB_MERC_CTGRY", 
								 :CURRENT_ERROR,
						         LV_CUR_UTC);
							 
         -- Set Error Flag				        
			LV_ERROR_FLAG := 'Y';
			
		END FOR;


   ELSE
   
 --    Processing for Successful Records 
            
       INSERT INTO	"NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ACSY_CUSTOMER"
            (	
            "UNIQUE_ACC_NO",
	        "COMPANY_CD",
	        "REV_PROFIT_CTR",
	        "REV_GL_ACT_NUM",
	        "DIST_CHANNEL",
	        "SUB_MERC_CTGRY",
	        "INSERT_TS" )
       VALUES(
	       	C_ACSY."UNIQUE_ACC_NO" + :LC_MAX_UNIQUE_ACC_NO,
	        C_ACSY."COMPANY_CD",
	        C_ACSY."REV_PROFIT_CTR",
	        C_ACSY."REV_GL_ACT_NUM",
	        C_ACSY."DIST_CHANNEL",
	        C_ACSY."SUB_MERC_CTGRY",
	        LV_CUR_UTC
	        ); 
	        
--      Insert PK of successfully processed Records into Local Temp Tables 
		
		INSERT INTO #UPDATE_EH_DELETION 
					   ("COMPANY_CD",
	        			"REV_PROFIT_CTR",
	        			"REV_GL_ACT_NUM",
	       			    "DIST_CHANNEL",
	        			"SUB_MERC_CTGRY") 
			    VALUES (C_ACSY."COMPANY_CD",
	        			C_ACSY."REV_PROFIT_CTR",
	        			C_ACSY."REV_GL_ACT_NUM",
	       			    C_ACSY."DIST_CHANNEL",
	        			C_ACSY."SUB_MERC_CTGRY");
       
	END IF ;
	
END FOR;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ACSY_CUSTOMER_EH" A
  	FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ACSY_CUSTOMER_EH"  A 
 	INNER JOIN #UPDATE_EH_DELETION B
    ON A."COMPANY_CD" = B."COMPANY_CD" 
    AND A."REV_PROFIT_CTR" = B."REV_PROFIT_CTR" 
    AND A."REV_GL_ACT_NUM" = B."REV_GL_ACT_NUM"
    AND A."DIST_CHANNEL" = B."DIST_CHANNEL"
    AND A."SUB_MERC_CTGRY" = B."SUB_MERC_CTGRY" 
   	SET (DELETE_DATE, DELETED) = (LV_CUR_UTC, 1);					   			    

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT;
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;