PROCEDURE "NDB_HP"."IFRS_R1.HP.NDB_HP::SP_HP_NM1_BAN" 
(IN  IP_CYCL_ID NVARCHAR(3),
 OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_HP_NM1_BAN
-- Created By      : BC_EZ03139(Jamilish)       
-- Create Date     : 08-03-2017
-- Description     : Data Inserted using Calculation View - CA_EDW_HP_BAN
--                   To NDB Table - HP_NM1_BAN_REF Using this stored procedure.		
-- Project         : Bell Canada
-- Release         : R1 / IFRS-
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);
DECLARE LV_PREV_DAY         DATE;
  
--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
  
 DECLARE CURSOR C_BAN FOR
      SELECT "ACCT_GRP",
			 "ACCT_SUB_TY",
			 "ACCT_TY",
			 "ADR_PROV",
			 "ADR_PSTL",
			 "BAN",
			 "BAN_ST",
			 "BILL_CYCL",
			 "BL_BILL_METH",
			 "BL_NX_CYCL",
			 "BL_NX_CYC_EFF_DT",
			 "BRND",
			 "BUS_ENTT",
			 "CONSO_BAN_ID",
			 "CONSO_END_DT",
			 "CONSO_ST",
			 "CONSO_STRT_DT",
			 "CORP_ID",
			 "CRNCY_CD",
			 "CS_CORP_TY",
			 "FRST_NM",
			 "HIER_ID",
			 "LAST_BUSN_NM",
			 "LGL_ENTT",
			 "MKT_SEG",
			 "NAG_ID",
			 "ONE_BILL_IND",
			 "PREPD_IND",
			 "PRM_SUBMKT",
			 "RTL_WHLSL_IND",
			 "SAP_CUST_ID",
			 "SI_OWN",
			 "SL_DIV",
			 "STRT_SERV_DT",
			 "ST_ACTV_CD",
			 "ST_ACTV_RSN_CD",
			 "ST_LAST_DT",
			 "TOP_UP_METH",
			 "TRANS_DT",
			 "TRDG_PTNR",
			 "ODS_SYST_CD",
			 "CYCL_ID",
			 "EXPY_DT",
			 "EFF_DT",
			 "FLAG_EXISTING_RECORD" 
		FROM "_SYS_BIC"."IFRS_R1.HP.NDB_HP/CA_EDW_HP_BAN"
	         (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID );

--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
--------------------------------------------------------------------------------------------------  

CREATE LOCAL TEMPORARY TABLE #UPDATE_NM1_EDW_BAN(BAN NVARCHAR(9), TRANS_DT DATE );
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION(BAN NVARCHAR(9), TRANS_DT DATE);	

--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 
FOR CURR_BAN AS C_BAN DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 

--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 
	
      -- Do Nothing. Exception Handled to ensure SP does not get terminated
	
	  END; 

   -- Insert into the Error Table
      INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_BAN_REF_EH"(
				  "ACCT_GRP", 
		 		  "ACCT_SUB_TY",
		 		  "ACCT_TY",
				  "ADR_PROV",
				  "ADR_PSTL",
				  "BAN",
				  "BAN_ST",
				  "BILL_CYCL",
				  "BL_BILL_METH",
				  "BL_NX_CYCL",
				  "BL_NX_CYC_EFF_DT",
				  "BRND",
				  "BUS_ENTT",
				  "CONSO_BAN_ID",
				  "CONSO_END_DT",
				  "CONSO_ST",
				  "CONSO_STRT_DT",
				  "CORP_ID",
				  "CRNCY_CD",
				  "CS_CORP_TY",
				  "FRST_NM",
				  "HIER_ID",
				  "LAST_BUSN_NM",
				  "LGL_ENTT",
				  "MKT_SEG",
				  "NAG_ID",
				  "ONE_BILL_IND",
				  "PREPD_IND",
				  "PRM_SUBMKT",
				  "RTL_WHLSL_IND",
				  "SAP_CUST_ID",
				  "SI_OWN",
				  "SL_DIV",
				  "STRT_SERV_DT",
				  "ST_ACTV_CD",
				  "ST_ACTV_RSN_CD",
				  "ST_LAST_DT",
				  "TOP_UP_METH",
				  "TRANS_DT",
				  "TRDG_PTNR",
				  "ODS_SYST_CD",
				  "CYCL_ID",
				  "EXPY_DT",
				  "EFF_DT",
				  "ERROR_CODE",
		          "TECHNICAL_MESSAGE",
		          "ERROR_CREATE_TS")
		    VALUES (CURR_BAN.ACCT_GRP,
					CURR_BAN.ACCT_SUB_TY,
					CURR_BAN.ACCT_TY,
					CURR_BAN.ADR_PROV,
					CURR_BAN.ADR_PSTL,
					CURR_BAN.BAN,
					CURR_BAN.BAN_ST,
					CURR_BAN.BILL_CYCL,
					CURR_BAN.BL_BILL_METH,
					CURR_BAN.BL_NX_CYCL,
					CURR_BAN.BL_NX_CYC_EFF_DT,
					CURR_BAN.BRND,
					CURR_BAN.BUS_ENTT,
					CURR_BAN.CONSO_BAN_ID,
					CURR_BAN.CONSO_END_DT,
					CURR_BAN.CONSO_ST,
					CURR_BAN.CONSO_STRT_DT,
					CURR_BAN.CORP_ID,
					CURR_BAN.CRNCY_CD,
					CURR_BAN.CS_CORP_TY,
					CURR_BAN.FRST_NM,
					CURR_BAN.HIER_ID,
					CURR_BAN.LAST_BUSN_NM,
					CURR_BAN.LGL_ENTT,
					CURR_BAN.MKT_SEG,
					CURR_BAN.NAG_ID,
					CURR_BAN.ONE_BILL_IND,
					CURR_BAN.PREPD_IND,
					CURR_BAN.PRM_SUBMKT,
					CURR_BAN.RTL_WHLSL_IND,
					CURR_BAN.SAP_CUST_ID,
					CURR_BAN.SI_OWN,
					CURR_BAN.SL_DIV,
					CURR_BAN.STRT_SERV_DT,
					CURR_BAN.ST_ACTV_CD,
					CURR_BAN.ST_ACTV_RSN_CD,
					CURR_BAN.ST_LAST_DT,
					CURR_BAN.TOP_UP_METH,
					CURR_BAN.TRANS_DT,
					CURR_BAN.TRDG_PTNR,
					CURR_BAN.ODS_SYST_CD,
					CURR_BAN.CYCL_ID,
					CURR_BAN.EXPY_DT,
					CURR_BAN.EFF_DT,
				  	::SQL_ERROR_CODE,
		         	::SQL_ERROR_MESSAGE,
					LV_CUR_UTC);
					   
	  	LV_ERROR_FLAG := 'Y';

   END; 
    
--   If Record exists in the Target NDB Table
     IF CURR_BAN.FLAG_EXISTING_RECORD = 'U' THEN
     LV_PREV_DAY := ADD_DAYS(CURR_BAN."EFF_DT", -1);

--     Update the target NDB table     
       UPDATE "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_BAN_REF" AS A 
		  SET ("EXPY_DT",
			  "MODIFIED_TS") =
			  (LV_PREV_DAY,
			   LV_CUR_UTC)
		  WHERE A.BAN     = CURR_BAN.BAN 
		    AND A.EXPY_DT = to_date('99991231');
		  --AND A.TRANS_DT = CURR_BAN.TRANS_DT;
		  
	   INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_BAN_REF"(
		 	  "BAN",
		 	  "TRANS_DT",
		 	  "ACCT_GRP",
	 		  "ACCT_SUB_TY",
	 		  "ACCT_TY",
			  "ADR_PROV",
			  "ADR_PSTL",
			  "BAN_ST",
			  "BILL_CYCL",
			  "BL_BILL_METH",
			  "BL_NX_CYCL",
			  "BL_NX_CYC_EFF_DT",
			  "BRND",
			  "BUS_ENTT",
			  "CONSO_BAN_ID",
			  "CONSO_END_DT",
			  "CONSO_ST",
			  "CONSO_STRT_DT",
			  "CORP_ID",
			  "CRNCY_CD",
			  "CS_CORP_TY",
			  "FRST_NM",
			  "HIER_ID",
			  "LAST_BUSN_NM",
			  "LGL_ENTT",
			  "MKT_SEG",
			  "NAG_ID",
			  "ONE_BILL_IND",
			  "PREPD_IND",
			  "PRM_SUBMKT",
			  "RTL_WHLSL_IND",
			  "SAP_CUST_ID",
			  "SI_OWN",
			  "SL_DIV",
			  "STRT_SERV_DT",
			  "ST_ACTV_CD",
			  "ST_ACTV_RSN_CD",
			  "ST_LAST_DT",
			  "TOP_UP_METH",
			  "TRDG_PTNR",
			  "ODS_SYST_CD",
			  "CYCL_ID",
			  "EXPY_DT",
			  "EFF_DT",
			  "INSERT_TS")
	    VALUES (CURR_BAN.BAN,
	    		CURR_BAN.TRANS_DT,
	    		CURR_BAN.ACCT_GRP,
				CURR_BAN.ACCT_SUB_TY,
				CURR_BAN.ACCT_TY,
				CURR_BAN.ADR_PROV,
				CURR_BAN.ADR_PSTL,
				CURR_BAN.BAN_ST,
				CURR_BAN.BILL_CYCL,
				CURR_BAN.BL_BILL_METH,
				CURR_BAN.BL_NX_CYCL,
				CURR_BAN.BL_NX_CYC_EFF_DT,
				CURR_BAN.BRND,
				CURR_BAN.BUS_ENTT,
				CURR_BAN.CONSO_BAN_ID,
				CURR_BAN.CONSO_END_DT,
				CURR_BAN.CONSO_ST,
				CURR_BAN.CONSO_STRT_DT,
				CURR_BAN.CORP_ID,
				CURR_BAN.CRNCY_CD,
				CURR_BAN.CS_CORP_TY,
				CURR_BAN.FRST_NM,
				CURR_BAN.HIER_ID,
				CURR_BAN.LAST_BUSN_NM,
				CURR_BAN.LGL_ENTT,
				CURR_BAN.MKT_SEG,
				CURR_BAN.NAG_ID,
				CURR_BAN.ONE_BILL_IND,
				CURR_BAN.PREPD_IND,
				CURR_BAN.PRM_SUBMKT,
				CURR_BAN.RTL_WHLSL_IND,
				CURR_BAN.SAP_CUST_ID,
				CURR_BAN.SI_OWN,
				CURR_BAN.SL_DIV,
				CURR_BAN.STRT_SERV_DT,
				CURR_BAN.ST_ACTV_CD,
				CURR_BAN.ST_ACTV_RSN_CD,
				CURR_BAN.ST_LAST_DT,
				CURR_BAN.TOP_UP_METH,
				CURR_BAN.TRDG_PTNR,
				CURR_BAN.ODS_SYST_CD,
				CURR_BAN.CYCL_ID,
				CURR_BAN.EXPY_DT,
				CURR_BAN.EFF_DT,
				LV_CUR_UTC);
	         
		
	         
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records

		   INSERT INTO #UPDATE_NM1_EDW_BAN
		   			   (BAN,
		   			    TRANS_DT)
		   		VALUES (CURR_BAN.BAN,
		   			 	CURR_BAN.TRANS_DT);
		   		
--         Add record to Delete the error from the error table if it exists

			INSERT INTO	#UPDATE_EH_DELETION
		   			   (BAN,
		   			    TRANS_DT)
		   		VALUES (CURR_BAN.BAN,
		   			 	CURR_BAN.TRANS_DT);		
                    	
    ELSE		
    					    
--     Insert Records into the target NDB table.
       INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_BAN_REF"(
		 	  "BAN",
		 	  "TRANS_DT",
		 	  "ACCT_GRP",
	 		  "ACCT_SUB_TY",
	 		  "ACCT_TY",
			  "ADR_PROV",
			  "ADR_PSTL",
			  "BAN_ST",
			  "BILL_CYCL",
			  "BL_BILL_METH",
			  "BL_NX_CYCL",
			  "BL_NX_CYC_EFF_DT",
			  "BRND",
			  "BUS_ENTT",
			  "CONSO_BAN_ID",
			  "CONSO_END_DT",
			  "CONSO_ST",
			  "CONSO_STRT_DT",
			  "CORP_ID",
			  "CRNCY_CD",
			  "CS_CORP_TY",
			  "FRST_NM",
			  "HIER_ID",
			  "LAST_BUSN_NM",
			  "LGL_ENTT",
			  "MKT_SEG",
			  "NAG_ID",
			  "ONE_BILL_IND",
			  "PREPD_IND",
			  "PRM_SUBMKT",
			  "RTL_WHLSL_IND",
			  "SAP_CUST_ID",
			  "SI_OWN",
			  "SL_DIV",
			  "STRT_SERV_DT",
			  "ST_ACTV_CD",
			  "ST_ACTV_RSN_CD",
			  "ST_LAST_DT",
			  "TOP_UP_METH",
			  "TRDG_PTNR",
			  "ODS_SYST_CD",
			  "CYCL_ID",
			  "EXPY_DT",
			  "EFF_DT",
			  "INSERT_TS")
	    VALUES (CURR_BAN.BAN,
	    		CURR_BAN.TRANS_DT,
	    		CURR_BAN.ACCT_GRP,
				CURR_BAN.ACCT_SUB_TY,
				CURR_BAN.ACCT_TY,
				CURR_BAN.ADR_PROV,
				CURR_BAN.ADR_PSTL,
				CURR_BAN.BAN_ST,
				CURR_BAN.BILL_CYCL,
				CURR_BAN.BL_BILL_METH,
				CURR_BAN.BL_NX_CYCL,
				CURR_BAN.BL_NX_CYC_EFF_DT,
				CURR_BAN.BRND,
				CURR_BAN.BUS_ENTT,
				CURR_BAN.CONSO_BAN_ID,
				CURR_BAN.CONSO_END_DT,
				CURR_BAN.CONSO_ST,
				CURR_BAN.CONSO_STRT_DT,
				CURR_BAN.CORP_ID,
				CURR_BAN.CRNCY_CD,
				CURR_BAN.CS_CORP_TY,
				CURR_BAN.FRST_NM,
				CURR_BAN.HIER_ID,
				CURR_BAN.LAST_BUSN_NM,
				CURR_BAN.LGL_ENTT,
				CURR_BAN.MKT_SEG,
				CURR_BAN.NAG_ID,
				CURR_BAN.ONE_BILL_IND,
				CURR_BAN.PREPD_IND,
				CURR_BAN.PRM_SUBMKT,
				CURR_BAN.RTL_WHLSL_IND,
				CURR_BAN.SAP_CUST_ID,
				CURR_BAN.SI_OWN,
				CURR_BAN.SL_DIV,
				CURR_BAN.STRT_SERV_DT,
				CURR_BAN.ST_ACTV_CD,
				CURR_BAN.ST_ACTV_RSN_CD,
				CURR_BAN.ST_LAST_DT,
				CURR_BAN.TOP_UP_METH,
				CURR_BAN.TRDG_PTNR,
				CURR_BAN.ODS_SYST_CD,
				CURR_BAN.CYCL_ID,
				CURR_BAN.EXPY_DT,
				CURR_BAN.EFF_DT,
				LV_CUR_UTC);
	         
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records

		   INSERT INTO #UPDATE_NM1_EDW_BAN
		   			   (BAN,
		   			    TRANS_DT)
		   		VALUES (CURR_BAN.BAN,
		   			 	CURR_BAN.TRANS_DT);
		   		
--         Add record to Delete the error from the error table if it exists

			INSERT INTO	#UPDATE_EH_DELETION
		   			   (BAN,
		   			    TRANS_DT)
		   		VALUES (CURR_BAN.BAN,
		   			 	CURR_BAN.TRANS_DT);		
                    	

		   
   END IF;

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::NM1_EDW_BAN
UPDATE "LAND"."IFRS_R1.LAND::NM1_EDW_BAN" A
  FROM "LAND"."IFRS_R1.LAND::NM1_EDW_BAN" A 
 INNER JOIN #UPDATE_NM1_EDW_BAN B
    ON A.BAN             = B.BAN 
   AND A.EFF_DT          = B.TRANS_DT
   SET SP_HP_NM1_BAN_TS  = LV_CUR_UTC
 WHERE A.SP_HP_NM1_BAN_TS IS NULL;
 
--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------
UPDATE "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_BAN_REF_EH" A
  FROM "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_BAN_REF_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B 
    ON A.BAN            = B.BAN 
   AND A.TRANS_DT       = B.TRANS_DT
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END; 

