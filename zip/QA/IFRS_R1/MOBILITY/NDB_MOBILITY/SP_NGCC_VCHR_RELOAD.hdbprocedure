PROCEDURE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::SP_NGCC_VCHR_RELOAD"
(IN IP_INPUT_DATE DATE,
OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_NGCC_VCHR_RELOAD
-- Created By      : BC_EZ03139 (Mohammad Jamilish)       
-- Create Date     : 10-05-2017
-- Description     : Data Inserted using Calculation View - CA_NGCC_VCHR_RELOAD
--                   To NDB Table - PPD_ORDER Using this stored procedure.
--                   			
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------
DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);
  
--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_NGCC_VCHR_RELOAD FOR
	SELECT	
	 	 "SOURCE_IDENTIFIER",
		 "ORDER_ID",
		 "ORDER_LINE_NUMBER",
		 "ORDER_DATE",
		 "ORDER_TYPE",
		 "CUSTOMER_ID",
		 "MDN",
		 "IMSI",
		 "SERIAL_NO",
		 "SOURCE_CODE",
		 "DEALER_ID",
		 "TRANSACTION_ID",
		 "TRANSACTION_DATE",
		 "ORDER_AMOUNT",
		 "PRODUCT_ID",
		 "VOUCHER_CD",
		 "ANNIVERSARY_DATE",
		 "NEW_STATUS",
		 "MAIN_BAL",
		 "PREV_MAIN_BAL",
		 "KUNNR_SID",
		 "RLDCDR_PRIMARY_KEY",
		  "BRND",
		 "CYCL_ID",
		 "ERROR_STATUS",
		 "ERROR_CODE",
		 "STRT_DT_TM",
		 "PMT_DESC"
	FROM "_SYS_BIC"."IFRS_R1.MOBILITY.NDB_MOBILITY/CA_NGCC_VCHR_RELOAD"
	     (PLACEHOLDER."$$INPUT_DATE$$" => :IP_INPUT_DATE) 
	ORDER BY "ORDER_DATE", "CYCL_ID";

--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 
CREATE LOCAL TEMPORARY TABLE #UPDATE_NGCC_VCHR(BRND NVARCHAR(40), ORDER_LINE_NUMBER NVARCHAR(30), CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_NGCC_RELOAD(ORDER_TYPE NVARCHAR(20), MDN NVARCHAR(24), PMT_CD NVARCHAR(4), PMT_DESC NVARCHAR(40),
AGENT_ID NVARCHAR(40), VCHR_SER_NUM NVARCHAR(15), ORDER_DATE DATE, CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_NGCC_ACCT_ST_CHNG(ORDER_TYPE NVARCHAR(20), MDN NVARCHAR(24),STRT_DT_TM SECONDDATE, CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION(ORDER_ID NVARCHAR(44), ORDER_LINE_NUMBER NVARCHAR(30));
       	  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 
FOR REC_NGCC_VCHR_RELOAD AS C_NGCC_VCHR_RELOAD DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION  
		
      -- Do Nothing. Exception Handled to ensure SP does not get terminated
	
	END;
					
   -- Insert record into error table
   INSERT INTO 	"NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ORDER_EH"(
				"SOURCE_IDENTIFIER",
				"ORDER_ID",
				"ORDER_LINE_NUMBER",
				"ORDER_DATE",
				"ORDER_TYPE",
				"CUSTOMER_ID",
				"MDN",
				"IMSI",
				"SERIAL_NO",
				"SOURCE_CODE",
				"DEALER_ID",
				"TRANSACTION_ID",
				"TRANSACTION_DATE",
				"ORDER_AMOUNT",
				"PRODUCT_ID",
				"VOUCHER_CD",
				"ANNIVERSARY_DATE",
				"NEW_STATUS",
				"MAIN_BAL",
				"PREV_MAIN_BAL",
				"KUNNR_SID",
				"ERROR_CODE",
				"TECHNICAL_MESSAGE",
				"ERROR_CREATE_TS")
		VALUES( REC_NGCC_VCHR_RELOAD."SOURCE_IDENTIFIER",
				REC_NGCC_VCHR_RELOAD."ORDER_ID",
				REC_NGCC_VCHR_RELOAD."ORDER_LINE_NUMBER",
				REC_NGCC_VCHR_RELOAD."ORDER_DATE",
				REC_NGCC_VCHR_RELOAD."ORDER_TYPE",
				REC_NGCC_VCHR_RELOAD."CUSTOMER_ID",
				REC_NGCC_VCHR_RELOAD."MDN",
				REC_NGCC_VCHR_RELOAD."IMSI",
				REC_NGCC_VCHR_RELOAD."SERIAL_NO",
				REC_NGCC_VCHR_RELOAD."SOURCE_CODE",
				REC_NGCC_VCHR_RELOAD."DEALER_ID",
				REC_NGCC_VCHR_RELOAD."TRANSACTION_ID",
				REC_NGCC_VCHR_RELOAD."TRANSACTION_DATE",
				REC_NGCC_VCHR_RELOAD."ORDER_AMOUNT",
				REC_NGCC_VCHR_RELOAD."PRODUCT_ID",
				REC_NGCC_VCHR_RELOAD."VOUCHER_CD",
				REC_NGCC_VCHR_RELOAD."ANNIVERSARY_DATE",
				REC_NGCC_VCHR_RELOAD."NEW_STATUS",
				REC_NGCC_VCHR_RELOAD."MAIN_BAL",
				REC_NGCC_VCHR_RELOAD."PREV_MAIN_BAL",
				REC_NGCC_VCHR_RELOAD."KUNNR_SID",
				::SQL_ERROR_CODE,
				::SQL_ERROR_MESSAGE,
				LV_CUR_UTC);
      
	  	LV_ERROR_FLAG := 'Y';
    
   END ; 

--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF REC_NGCC_VCHR_RELOAD.ERROR_STATUS = 1 THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(REC_NGCC_VCHR_RELOAD."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
		 -- Insert into the Error Table
		    INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ORDER_EH"(
						"SOURCE_IDENTIFIER",
						"ORDER_ID",
						"ORDER_LINE_NUMBER",
						"ORDER_DATE",
						"ORDER_TYPE",
						"CUSTOMER_ID",
						"MDN",
						"IMSI",
						"SERIAL_NO",
						"SOURCE_CODE",
						"DEALER_ID",
						"TRANSACTION_ID",
						"TRANSACTION_DATE",
						"ORDER_AMOUNT",
						"PRODUCT_ID",
						"VOUCHER_CD",
						"ANNIVERSARY_DATE",
						"NEW_STATUS",
						"MAIN_BAL",
						"PREV_MAIN_BAL",
						"KUNNR_SID",				        
						"ERROR_CODE",
				        "ERROR_CREATE_TS") 
				VALUES( REC_NGCC_VCHR_RELOAD."SOURCE_IDENTIFIER",
						REC_NGCC_VCHR_RELOAD."ORDER_ID",
						REC_NGCC_VCHR_RELOAD."ORDER_LINE_NUMBER",
						REC_NGCC_VCHR_RELOAD."ORDER_DATE",
						REC_NGCC_VCHR_RELOAD."ORDER_TYPE",
						REC_NGCC_VCHR_RELOAD."CUSTOMER_ID",
						REC_NGCC_VCHR_RELOAD."MDN",
						REC_NGCC_VCHR_RELOAD."IMSI",
						REC_NGCC_VCHR_RELOAD."SERIAL_NO",
						REC_NGCC_VCHR_RELOAD."SOURCE_CODE",
						REC_NGCC_VCHR_RELOAD."DEALER_ID",
						REC_NGCC_VCHR_RELOAD."TRANSACTION_ID",
						REC_NGCC_VCHR_RELOAD."TRANSACTION_DATE",
						REC_NGCC_VCHR_RELOAD."ORDER_AMOUNT",
						REC_NGCC_VCHR_RELOAD."PRODUCT_ID",
						REC_NGCC_VCHR_RELOAD."VOUCHER_CD",
						REC_NGCC_VCHR_RELOAD."ANNIVERSARY_DATE",
						REC_NGCC_VCHR_RELOAD."NEW_STATUS",
						REC_NGCC_VCHR_RELOAD."MAIN_BAL",
						REC_NGCC_VCHR_RELOAD."PREV_MAIN_BAL",
						REC_NGCC_VCHR_RELOAD."KUNNR_SID",
						:CURRENT_ERROR,
				        LV_CUR_UTC);			         		       	
		END FOR;
		
         -- Set Error Flag				        
			LV_ERROR_FLAG := 'Y';		

-- Processing for Successful Records
   ELSE
    
--     Insert Records into the target NDB table   
		INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ORDER"(
					"SOURCE_IDENTIFIER",
					"ORDER_ID",
					"ORDER_LINE_NUMBER",
					"ORDER_DATE",
					"ORDER_TYPE",
					"CUSTOMER_ID",
					"MDN",
					"IMSI",
					"SERIAL_NO",
					"SOURCE_CODE",
					"DEALER_ID",
					"TRANSACTION_ID",
					"TRANSACTION_DATE",
					"ORDER_AMOUNT",
					"PRODUCT_ID",
					"VOUCHER_CD",
					"ANNIVERSARY_DATE",
					"NEW_STATUS",
					"MAIN_BAL",
					"PREV_MAIN_BAL",
					"KUNNR_SID",
					"INSERT_TS") 
			VALUES( REC_NGCC_VCHR_RELOAD."SOURCE_IDENTIFIER",
					REC_NGCC_VCHR_RELOAD."ORDER_ID",
					REC_NGCC_VCHR_RELOAD."ORDER_LINE_NUMBER",
					REC_NGCC_VCHR_RELOAD."ORDER_DATE",
					REC_NGCC_VCHR_RELOAD."ORDER_TYPE",
					REC_NGCC_VCHR_RELOAD."CUSTOMER_ID",
					REC_NGCC_VCHR_RELOAD."MDN",
					REC_NGCC_VCHR_RELOAD."IMSI",
					REC_NGCC_VCHR_RELOAD."SERIAL_NO",
					REC_NGCC_VCHR_RELOAD."SOURCE_CODE",
					REC_NGCC_VCHR_RELOAD."DEALER_ID",
					REC_NGCC_VCHR_RELOAD."TRANSACTION_ID",
					REC_NGCC_VCHR_RELOAD."TRANSACTION_DATE",
					REC_NGCC_VCHR_RELOAD."ORDER_AMOUNT",
					REC_NGCC_VCHR_RELOAD."PRODUCT_ID",
					REC_NGCC_VCHR_RELOAD."VOUCHER_CD",
					REC_NGCC_VCHR_RELOAD."ANNIVERSARY_DATE",
					REC_NGCC_VCHR_RELOAD."NEW_STATUS",
					REC_NGCC_VCHR_RELOAD."MAIN_BAL",
					REC_NGCC_VCHR_RELOAD."PREV_MAIN_BAL",
					REC_NGCC_VCHR_RELOAD."KUNNR_SID",
					LV_CUR_UTC);

--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO 	#UPDATE_NGCC_VCHR(
		                BRND,
		                ORDER_LINE_NUMBER,
		                CYCL_ID)
		        VALUES (REC_NGCC_VCHR_RELOAD."BRND",
						REC_NGCC_VCHR_RELOAD."ORDER_LINE_NUMBER",
						REC_NGCC_VCHR_RELOAD."CYCL_ID");
		   
		   INSERT INTO 	#UPDATE_NGCC_RELOAD(ORDER_TYPE, MDN, PMT_CD, PMT_DESC, AGENT_ID, VCHR_SER_NUM, ORDER_DATE, CYCL_ID)
		        VALUES (REC_NGCC_VCHR_RELOAD."ORDER_TYPE",
						REC_NGCC_VCHR_RELOAD."MDN",
						REC_NGCC_VCHR_RELOAD."SOURCE_CODE",
						REC_NGCC_VCHR_RELOAD."PMT_DESC",
						REC_NGCC_VCHR_RELOAD."DEALER_ID",
						REC_NGCC_VCHR_RELOAD."VOUCHER_CD",
						REC_NGCC_VCHR_RELOAD."ORDER_DATE",
						REC_NGCC_VCHR_RELOAD."CYCL_ID");
		   
		   INSERT INTO 	#UPDATE_NGCC_ACCT_ST_CHNG(
		                ORDER_TYPE,
		                MDN,
		                STRT_DT_TM,
		                CYCL_ID)
		        VALUES (REC_NGCC_VCHR_RELOAD."ORDER_TYPE",
				        REC_NGCC_VCHR_RELOAD."MDN",
				        REC_NGCC_VCHR_RELOAD."STRT_DT_TM",
						REC_NGCC_VCHR_RELOAD."CYCL_ID");
						
			INSERT INTO	#UPDATE_EH_DELETION(
		                ORDER_ID,
		                ORDER_LINE_NUMBER)
		        VALUES (REC_NGCC_VCHR_RELOAD."ORDER_ID",
						REC_NGCC_VCHR_RELOAD."ORDER_LINE_NUMBER");


    END IF;

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 
 -- Update Landing Table IFRS_R1.LAND::NGCC_VCHR
 UPDATE "LAND"."IFRS_R1.LAND::NGCC_VCHR"  A
   FROM "LAND"."IFRS_R1.LAND::NGCC_VCHR"  A
  INNER JOIN #UPDATE_NGCC_VCHR B
     ON A.BRND = B.BRND
    AND A.SER_NUM = B.ORDER_LINE_NUMBER
    AND A.CYCL_ID = B.CYCL_ID
    SET NDB_TS=LV_CUR_UTC 
  WHERE NDB_TS IS NULL;

 -- Update Landing Table IFRS_R1.LAND::NGCC_RELOAD
-- Update Landing Table IFRS_R1.LAND::NGCC_RELOAD
 UPDATE "LAND"."IFRS_R1.LAND::NGCC_RELOAD"  A
   FROM "LAND"."IFRS_R1.LAND::NGCC_RELOAD" A
  INNER JOIN #UPDATE_NGCC_RELOAD B
     ON A.EVNT_REC_TY = B."ORDER_TYPE"
     AND A.MDN = B."MDN"
     AND A.PMT_CD = B."PMT_CD"  
     AND IFNULL (A.PMT_DESC, 'Y') = IFNULL (B.PMT_DESC, 'Y')
     AND IFNULL (A.AGENT_ID, 'Y') = IFNULL (B.AGENT_ID, 'Y')
     AND IFNULL (A.VCHR_SER_NUM, 'Y') = IFNULL (B.VCHR_SER_NUM, 'Y')
     AND CAST(A.STRT_DT_TM AS DATE) = B.ORDER_DATE    
     AND A.CYCL_ID = B."CYCL_ID"    
      SET NDB_TS=LV_CUR_UTC 
  WHERE NDB_TS IS NULL; 
  
  
           
 -- Update Landing Table IFRS_R1.LAND::NGCC_ACCT_ST_CHNG
 UPDATE "LAND"."IFRS_R1.LAND::NGCC_ACCT_ST_CHNG"  A
   FROM "LAND"."IFRS_R1.LAND::NGCC_ACCT_ST_CHNG" A
  INNER JOIN #UPDATE_NGCC_ACCT_ST_CHNG B
     ON A.EVNT_REC_TY  = B.ORDER_TYPE 
    AND A.MDN = B.MDN
    AND A.STRT_DT_TM = B.STRT_DT_TM
    AND A.CYCL_ID = B.CYCL_ID
    SET NDB_TS=LV_CUR_UTC 
  WHERE NDB_TS IS NULL ;
    
    
-- Update Error Table
UPDATE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ORDER_EH" A
  FROM "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ORDER_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A.ORDER_ID = B.ORDER_ID 
   AND A.ORDER_LINE_NUMBER = B.ORDER_LINE_NUMBER
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;

