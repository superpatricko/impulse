PROCEDURE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::SP_PPD_ACSY_CUSTOMER"
( OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_PPD_ACSY_CUSTOMER
-- Created By      : BC_EZ03139 (Mohammad Jamilish)       
-- Create Date     : 10-09-2016
-- Description     : Data Inserted using Calculation View - CA_PPD_BILLING
--                   To NDB Table - PPD_ACSY_CUSTOMER Using this stored procedure.		
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);
DECLARE LV_PREV_DAY         DATE;
  
--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_PPD_ACSY_CUSTOMER FOR

 	SELECT
 	 "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::SEQ_PPD_ACSY_SEQ_NO".nextval AS "UNIQUE_ACC_NO",
	 "REV_PROFIT_CTR",
	 "REV_GL_ACT_NUM",
	 "COMPANY_CD" 
FROM "_SYS_BIC"."IFRS_R1.MOBILITY.NDB_MOBILITY/CA_PPD_BILLING";

--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
--------------------------------------------------------------------------------------------------  

CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION("UNIQUE_ACC_NO" NVARCHAR(16));

--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 

FOR REC_PPD_ACSY_CUSTOMER AS C_PPD_ACSY_CUSTOMER DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 

--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 
	
      -- Do Nothing. Exception Handled to ensure SP does not get terminated
	
	  END; 

   -- Insert into the Error Table
   INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ACSY_CUSTOMER_EH"(
		"UNIQUE_ACC_NO",
		"COMPANY_CD",
		"REV_PROFIT_CTR",
		"REV_GL_ACT_NUM",
		"INSERT_TS",
		"ERROR_CODE",
		"TECHNICAL_MESSAGE",
		"ERROR_CREATE_TS")
	VALUES(
		REC_PPD_ACSY_CUSTOMER."UNIQUE_ACC_NO",
		REC_PPD_ACSY_CUSTOMER."COMPANY_CD",
		REC_PPD_ACSY_CUSTOMER."REV_PROFIT_CTR",
		REC_PPD_ACSY_CUSTOMER."REV_GL_ACT_NUM",
	 	LV_CUR_UTC,
		::SQL_ERROR_CODE,
		::SQL_ERROR_MESSAGE,
		LV_CUR_UTC);   
   
	  	LV_ERROR_FLAG := 'Y';
    
   END; 
   
-- Processing for Successful Records
--      Insert Records into the target NDB table  
		INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ACSY_CUSTOMER"(
				"UNIQUE_ACC_NO",
				"COMPANY_CD",
				"REV_PROFIT_CTR",
				"REV_GL_ACT_NUM",
				"INSERT_TS")
		VALUES( REC_PPD_ACSY_CUSTOMER."UNIQUE_ACC_NO",
				REC_PPD_ACSY_CUSTOMER."COMPANY_CD",
				REC_PPD_ACSY_CUSTOMER."REV_PROFIT_CTR",
				REC_PPD_ACSY_CUSTOMER."REV_GL_ACT_NUM",
			 	LV_CUR_UTC); 
						   	 
--         Add record to Delete the error from the error table if it exists

			INSERT INTO	#UPDATE_EH_DELETION(
				 	 	"UNIQUE_ACC_NO")
				 VALUES(REC_PPD_ACSY_CUSTOMER."UNIQUE_ACC_NO");
				 
END FOR;
 
--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------
UPDATE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ACSY_CUSTOMER_EH" A
  FROM "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_ACSY_CUSTOMER_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B 
	ON A.UNIQUE_ACC_NO      = B.UNIQUE_ACC_NO
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;

