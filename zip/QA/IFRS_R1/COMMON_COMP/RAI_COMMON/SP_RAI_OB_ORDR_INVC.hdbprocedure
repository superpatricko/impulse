PROCEDURE "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::SP_RAI_OB_ORDR_INVC"
(IN IP_DATE DATE, 
IN IP_BAN NVARCHAR(1000),
OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	AS
BEGIN  
----------------------------------------------------------------------------------------------------
-- Procedure Title : IFRS_R1.COMMON_COMP.RAI_COMMON::SP_OB_ORDR_INVC
----------------------------------------------------------------------------------------------------
-- Created By      : BC_EY94104(Siloni Bhagi)          Date :02/06/2017
----------------------------------------------------------------------------------------------------
-- Procedure Description : 
--   This Procedure will create Order and Invoice RAI items based on 
--	 One Bill NDB Billing table if one of the following conditions is satisfied:
--   1. Bundle Discount Indicator is checked
--	 2. Employ Discount Indicator is checked
--   3. For One Time Charges: FTR_REVENUE_CODE is 'O' AND DISCOUNT_CODE is Blank
                           
-- This Procedure has one parameter:
--   1. The  OT_STATUS parameter : This parameter give the status of the 
--        procedure whether it is success or failure.

-- ERROR_LOG Table : will be used to trace the system error like transaction failed

-- FREQUENCY OF PROCEDURE EXECUTION: Daily

-- Track Error/Process Control Table: This table will be used to tract the start 
--      and end time of the execution
----------------------------------------------------------------------------------------------------
-- Release :R1/IFRS
----------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
----------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
-- 08/08/2017  | BC_EZ23103       | CR 283 - Update to process the records based on input parameter as IP_BAN 
----------------------------------------------------------------------------------------------------
-- 
----------------------------------------------------------------------------------------------------
-- Description Of the changes 
----------------------------------------------------------------------------------------------------
-- Modification Number          :
-- Description of Changes Made :
----------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------


DECLARE LV_BATCH_ID           INTEGER;
DECLARE LV_COUNT_ORDR         INTEGER;
DECLARE LV_COUNT_INVC         INTEGER;
DECLARE LV_ERROR_FLAG 		  NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC            TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE LC_SQL_ERROR            NVARCHAR(40) DEFAULT 'SQL_EXCEPTION : SIBLING ERROR';  
DECLARE LC_SQL_ERROR_TEXT       NVARCHAR(40) DEFAULT 'SQL_EXCEPTION : SECOND LEVEL';                                
DECLARE LC_ERROR_TEXT 		    NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	    NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE i					    INTEGER;
DECLARE IP_BAN_LIST             NVARCHAR(1000);
DECLARE CURRENT_ERROR		    NVARCHAR(100);
DECLARE ERROR_TAB 			    TABLE (ERROR_CODE NVARCHAR(100));
DECLARE RECORD_COUNT		    INTEGER;
DECLARE LC_SET		  			NVARCHAR (1) DEFAULT 'X';	
--------------------------------------------------------------------------------------------------
-- Temporary tables/Variables/Nodes Declaration to hold data from the final CVs
-------------------------------------------------------------------------------------------------- 

	OB_INVC_ORDR_RAI_ITEM_TEMP =
		SELECT
			 "CC_QUANTITY_REL",
			 "CC_INVOICE_TYPE",
			 "AMOUNT",
			 "POST_BILLING_ID",
			 "BAN",
			 "SOC",
			 "FEATURE_CODE",
			 "CYCLE_START_DATE",
			 "CYCLE_END_DATE",
			 "DISCOUNT_CODE",
			 "KUNNR_SID",
			 "BATCH_ID",
			 "REFERENCE_EFFECTIVE_DT",
			 "LOB",
			 "JOURNALIZATION_DATE",
			 "CC_FINAL_INVOICE",
			 "CC_EXCHANGE_RATE",
			 "CC_MAIN_COND_TYPE",
			 "CC_CATEGORY",
			 "CC_X_NEGATIVE_ITEM",
			 "CC_QUANTITY_UNIT",
			 "CC_QUANTITY",
			 "CC_REF_ID",
			 "CC_CONTR_SEQ",
			 "DISC_FROM_AMT",
			 "CC_TMP_SRCDOC_ID",
			 "FTR_REVENUE_CODE",
			 "EMP_DISCOUNT_IND",
			 "BUNDLE_DISCOUNT_IND",
			 "GL_ACCOUNT_NUMBER",
			 "INSERT_TS",
			 "PROVINCE_CODE",
			 "ADJ_REASON_CODE",
			 "ZZ_BLDAT",
			 "ZZ_BUDAT",
			 "ZZ_BUKRS",
			 "ZZ_BKTXT_INVC",
			 "ZZ_BKTXT_ORDR",
			 "ZZ_LEGACY",
			 "ZZ_SGTXT",
			 "ZZ_ZUONR",
			 "ZZ_VBUND",
			 "ZZ_XBLNR",
			 "CC_TXJCD",
			 "ZZ_MWSKZ",
			 "ZZ_ADJ_RSN_CD",
			 "ZZ_ALLOCATE",
			 "ZZ_BILLER",
			 "ZZ_BRANDACT",
			 "ZZ_CATRANSFER",
			 "ZZ_BU_VIEW",
			 "ZZ_CONVERSION",
			 "ZZ_MINPRICE",
			 "ZZ_MOD_TYPE",
			 "ZZ_PAOBJNR",
			 "ZZ_PRE_POST",
			 "ZZ_UPFFLG",
			 "NEWACCT",
			 "ZZ_ICHKONT",
			 "CC_GL_ERROR",
			 "CC_PL_ACCOUNT",
			 "ZZ_KOSTL",
			 "ZZ_AUFNR",
			 "BILL_DATE",
			 "CC_ITEM_ID_RAI",
			 "CC_SRCDOC_ID",
			 "SRCDOC_COMP",
			 "SRCDOC_LOGSYS",
			 "SRCDOC_TYPE",
			 "REFERENCE_TYPE",
			 "WAERS",
			 "RECEIV_ACCOUNT",
			 "ORIGDOC_COMP",
			 "ORIGDOC_LOGSYS",
			 "ORIGDOC_TYPE",
			 "CC_TIME_IND",
			 "CC_BUKRS",
			 "ERROR_STATUS",
			 "ERROR_CODE",
			 "IS_SIBLING_ERROR",
			 "ZZ_XREF1",
			 "ZZ_XREF2",
			 "CHARGE_TYPE",
			 "POB_TYPE",
			 "VALUE_RELEVANT",
			 "CC_SSP",
			 "CC_TP",
			 "SRCDOC_TYPE_INV",
			 to_decimal(to_char("JOURNALIZATION_DATE",'YYYYMMDD')||substr(to_char(current_timestamp,'YYYYMMDDHHMISS'),9,6),15,0) "JRNL_DT"
		FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.RAI_COMMON/CA_OB_ORDR_INVC_SIBLING_CHECK"
		(PLACEHOLDER."$$IP_BILL_DAY$$" => :IP_DATE);
	-------------------------------------------------------------------------------------------------
	-- FILTER BANS as per CR_283
	--------------------------------------------------------------------------------------------------

	IF IP_BAN IS NULL THEN
	 	IP_BAN_LIST := '1=1';
	ELSE
	 IP_BAN_LIST := 'BAN IN('||:IP_BAN||')';
	END IF;
	
	OB_INVC_ORDR_RAI_ITEM = APPLY_FILTER (:OB_INVC_ORDR_RAI_ITEM_TEMP,:IP_BAN_LIST);	
	
	BEGIN
	-------------------------------------------------------------------------------------------------
	-- Cursors Declaration for Invoice Order and Invoice
	--------------------------------------------------------------------------------------------------
	
	DECLARE CURSOR C_RAI_INVC_ORDR FOR SELECT * FROM :OB_INVC_ORDR_RAI_ITEM;
		  
	DECLARE CURSOR C_RAI_INVC_ORDR_PARENT FOR 
	        SELECT "BAN" 
	        FROM :OB_INVC_ORDR_RAI_ITEM 
	        WHERE "IS_SIBLING_ERROR" = '0' 
	        AND "ERROR_STATUS" = '0'
	        GROUP BY "BAN";
	
	--------------------------------------------------------------------------------------------------
	-- Batch ID creation for RAI processing
	-------------------------------------------------------------------------------------------------- 	
	
	SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI_BATCH_ID".NEXTVAL INTO LV_BATCH_ID 
    FROM DUMMY;	
	
	--------------------------------------------------------------------------------------------------
	-- Local Temporary Tables Declaration
	-------------------------------------------------------------------------------------------------- 			 
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_MAIN_OB (SRCDOC_ID NVARCHAR(35));
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_COND_OB (SRCDOC_ID NVARCHAR(35));
	
	    CREATE LOCAL TEMPORARY TABLE #UPDATE_OB_INVC(
        SRCDOC_ID                NVARCHAR(35),
	    REFERENCE_ID             NVARCHAR(30),
	    RAI_ITEM_ID              NVARCHAR(15),
	    BATCH_ID                 INTEGER,
	    HEADER_ID				 NVARCHAR(20),
	    POST_BILLING_ID			 NVARCHAR(25));
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_MAIN_INVC_OB (SRCDOC_ID NVARCHAR(35));
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_COND_INVC_OB (SRCDOC_ID NVARCHAR(35));
	
	
	--------------------------------------------------------------------------------------------------
	-- Cursors Loop
	-------------------------------------------------------------------------------------------------- 
	
	FOR CUR_ORDER AS C_RAI_INVC_ORDR DO
	
	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
	
	  --  Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION	
		
	  --    Do Nothing. Exception Handled to ensure SP does not get terminated			 			     
	      END;
	
	    --  Insert record into ORDER main error table
		   INSERT INTO  "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2",
						"ERROR_CODE",
						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS"
						) 
				VALUES (CUR_ORDER.SRCDOC_COMP,
	                    CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."BAN",
						CUR_ORDER."CC_ITEM_ID_RAI",
						CUR_ORDER."REFERENCE_TYPE",
						CUR_ORDER."CC_REF_ID",
						CUR_ORDER."KUNNR_SID",
						CUR_ORDER."CYCLE_START_DATE",
						CUR_ORDER."CYCLE_END_DATE",
						CUR_ORDER."CC_BUKRS",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_QUANTITY",
						CUR_ORDER."CC_QUANTITY_UNIT",
						CUR_ORDER."RECEIV_ACCOUNT",
						CUR_ORDER."CYCLE_START_DATE",
						CUR_ORDER."CC_X_NEGATIVE_ITEM",
						CUR_ORDER."ZZ_ALLOCATE",
						CUR_ORDER."ZZ_AUFNR",
						CUR_ORDER."ZZ_ADJ_RSN_CD",
						 LV_BATCH_ID,
						CUR_ORDER."ZZ_BILLER",
						CUR_ORDER."ZZ_BKTXT_ORDR",
						 CUR_ORDER."ZZ_BRANDACT",
						CUR_ORDER."ZZ_BUKRS",
						CUR_ORDER."ZZ_BU_VIEW",
						CUR_ORDER."ZZ_CATRANSFER",
						CUR_ORDER."ZZ_CONVERSION",
						CUR_ORDER."ZZ_KOSTL",
						CUR_ORDER."ZZ_LEGACY",
						CUR_ORDER."CHARGE_TYPE",
						CUR_ORDER."POB_TYPE",
						CUR_ORDER."ZZ_MINPRICE",
						CUR_ORDER."ZZ_MOD_TYPE",
						CUR_ORDER."ZZ_MWSKZ",
						CUR_ORDER."ZZ_PAOBJNR",
						CUR_ORDER."ZZ_PRE_POST",
						CUR_ORDER."ZZ_SGTXT",
						CUR_ORDER."CC_TXJCD",
						CUR_ORDER."ZZ_UPFFLG",
						CUR_ORDER."ZZ_VBUND",
						CUR_ORDER."ZZ_XBLNR",
						CUR_ORDER."ZZ_ZUONR",
						CUR_ORDER."ZZ_XREF1",
						CUR_ORDER."ZZ_XREF2",
						::SQL_ERROR_CODE,
						::SQL_ERROR_MESSAGE,
						LV_CUR_UTC);
				 
		--  Insert record into ORDER Condition error table for SSP(Standalone Selling Price)           
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH" 
					(	"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
				        "BATCH_ID",
				        "ERROR_CODE",
						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS")
					 VALUES(CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."JRNL_DT",
							CUR_ORDER."CC_SSP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
					        LV_BATCH_ID,
					        ::SQL_ERROR_CODE,
							::SQL_ERROR_MESSAGE,
							LV_CUR_UTC);
		        			
	    --  Insert record into ORDER Condition error table for TP(Transaction Price)
	        INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH"(
		   	            "SRCDOC_COMP",
                        "SRCDOC_LOGSYS",
				        "SRCDOC_TYPE",
				        "SRCDOC_ID",
				        "TIMESTAMP_UTC",
				        "CONDITION_TYPE",
				        "PL_ACCOUNT",				
				        "BETRW",
				        "WAERS",				
				        "CATEGORY",
				        "MAIN_COND_TYPE",
				        "BATCH_ID",
				        "ERROR_CODE",
						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS")
				 VALUES(CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."CC_TP",
						CUR_ORDER."CC_PL_ACCOUNT",
						CUR_ORDER."AMOUNT",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_CATEGORY",
						CUR_ORDER."CC_MAIN_COND_TYPE",
				        LV_BATCH_ID,
				        ::SQL_ERROR_CODE,
						::SQL_ERROR_MESSAGE,
						LV_CUR_UTC);
			 
	INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_EH"(
					    "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"INVOICE_TYPE",
						"EXCHANGE_RATE",
						"ZZ_AUFNR",
			            "ZZ_BATCH_ID",
			            "ZZ_BKTXT",
			            "ZZ_BLDAT",
			            "ZZ_BUDAT",
			            "ZZ_BUKRS",
			            "ZZ_ICHKONT",
			            "ZZ_KOSTL",
			            "ZZ_LEGACY",
			            "ZZ_MWSKZ",
			            "ZZ_SGTXT",
			            "ZZ_TXJCD",
			            "ZZ_VBUND",
			            "ZZ_XBLNR",
			            "ZZ_ZUONR",
			            "ZZ_XREF1",
			            "ZZ_XREF2",	
			            "BUKRS",
			            "WAERS",
			            "HWAER",			            
					    "ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")						
				VALUES( CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE_INV",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."BAN",
						CUR_ORDER."CC_ITEM_ID_RAI",
						CUR_ORDER."KUNNR_SID",
						CUR_ORDER."CC_QUANTITY",
						CUR_ORDER."CC_QUANTITY_UNIT",
						CUR_ORDER."ORIGDOC_COMP",
			            CUR_ORDER."ORIGDOC_LOGSYS",
			            CUR_ORDER."ORIGDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."BILL_DATE",
						CUR_ORDER."CC_FINAL_INVOICE",
						CUR_ORDER."CC_QUANTITY_REL",
						CUR_ORDER."BILL_DATE",
						CUR_ORDER."CC_INVOICE_TYPE",
			            CUR_ORDER."CC_EXCHANGE_RATE",
			            CUR_ORDER."ZZ_AUFNR",
			            LV_BATCH_ID,
			            CUR_ORDER."ZZ_BKTXT_INVC",
			            CUR_ORDER."ZZ_BLDAT",
			            CUR_ORDER."ZZ_BUDAT",
			            CUR_ORDER."ZZ_BUKRS",
			            CUR_ORDER."ZZ_ICHKONT",
			            CUR_ORDER."ZZ_KOSTL",
			            CUR_ORDER."ZZ_LEGACY",
			            CUR_ORDER."ZZ_MWSKZ",
			            CUR_ORDER."ZZ_SGTXT",
			            CUR_ORDER."CC_TXJCD",
			            CUR_ORDER."ZZ_VBUND",
			            CUR_ORDER."ZZ_XBLNR",
			            CUR_ORDER."ZZ_ZUONR",
			            CUR_ORDER."ZZ_XREF1",
			            CUR_ORDER."ZZ_XREF2",
			            CUR_ORDER."CC_BUKRS",
	                    CUR_ORDER."WAERS",
                        CUR_ORDER."WAERS",
					   ::SQL_ERROR_CODE,
			    	    ::SQL_ERROR_MESSAGE,
			            LV_CUR_UTC);				
			
		--  Insert record into OB ORDER Condition error table for Amount (TRANS_PRC)           
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",
						"BETRW",
						"BETRH",
						"WAERS",
						"HWAER",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS",
					    "BATCH_ID")
				VALUES( CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE_INV",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."CC_TP",
						CUR_ORDER."CC_PL_ACCOUNT",
						CUR_ORDER."AMOUNT",
						CUR_ORDER."AMOUNT",
						CUR_ORDER."WAERS",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_CATEGORY",
						CUR_ORDER."CC_MAIN_COND_TYPE",
						::SQL_ERROR_CODE,
			    	    ::SQL_ERROR_MESSAGE,
			            LV_CUR_UTC,
			            LV_BATCH_ID);
			 
		    LV_ERROR_FLAG := 'Y';
	
	    END;
	
	--  Check the Error Status of the Record. 
	--  If Record is with Error or the sibling is with Error, then send to Error Table
		IF CUR_ORDER.IS_SIBLING_ERROR 	 = '1' 
		OR CUR_ORDER.ERROR_STATUS        = '1' 
		THEN
		
	    --  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
			CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_ORDER."ERROR_CODE", 
																		   ERROR_TAB, 
				                                                           RECORD_COUNT);	
	   
	    -- 	Loop through the Error Records
			FOR i IN 1 .. :RECORD_COUNT DO
				
	        --  Fetch the Error Code
				CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
				
	        --  All erroneous records are inserted into Order Main EH table 
				INSERT INTO  "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2",
						"ERROR_CODE",
						"ERROR_CREATE_TS") 
				VALUES (CUR_ORDER.SRCDOC_COMP,
	                    CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."BAN",
						CUR_ORDER."CC_ITEM_ID_RAI",
						CUR_ORDER."REFERENCE_TYPE",
						CUR_ORDER."CC_REF_ID",
						CUR_ORDER."KUNNR_SID",
						CUR_ORDER."CYCLE_START_DATE",
						CUR_ORDER."CYCLE_END_DATE",
						CUR_ORDER."CC_BUKRS",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_QUANTITY",
						CUR_ORDER."CC_QUANTITY_UNIT",
						CUR_ORDER."RECEIV_ACCOUNT",
						CUR_ORDER."CYCLE_START_DATE",
						CUR_ORDER."CC_X_NEGATIVE_ITEM",
						CUR_ORDER."ZZ_ALLOCATE",
						CUR_ORDER."ZZ_AUFNR",
						CUR_ORDER."ZZ_ADJ_RSN_CD",
						 LV_BATCH_ID,
						CUR_ORDER."ZZ_BILLER",
						CUR_ORDER."ZZ_BKTXT_ORDR",
						 CUR_ORDER."ZZ_BRANDACT",
						CUR_ORDER."ZZ_BUKRS",
						CUR_ORDER."ZZ_BU_VIEW",
						CUR_ORDER."ZZ_CATRANSFER",
						CUR_ORDER."ZZ_CONVERSION",
						CUR_ORDER."ZZ_KOSTL",
						CUR_ORDER."ZZ_LEGACY",
						CUR_ORDER."CHARGE_TYPE",
						CUR_ORDER."POB_TYPE",
						CUR_ORDER."ZZ_MINPRICE",
						CUR_ORDER."ZZ_MOD_TYPE",
						CUR_ORDER."ZZ_MWSKZ",
						CUR_ORDER."ZZ_PAOBJNR",
						CUR_ORDER."ZZ_PRE_POST",
						CUR_ORDER."ZZ_SGTXT",
						CUR_ORDER."CC_TXJCD",
						CUR_ORDER."ZZ_UPFFLG",
						CUR_ORDER."ZZ_VBUND",
						CUR_ORDER."ZZ_XBLNR",
						CUR_ORDER."ZZ_ZUONR",
						CUR_ORDER."ZZ_XREF1",
						CUR_ORDER."ZZ_XREF2",
						:CURRENT_ERROR,
						LV_CUR_UTC);

	        --  All erroneous records are inserted into Order Condition EH Table for SSP(Standalone Selling Price)
			    INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH"(
		   	           "SRCDOC_COMP",
                        "SRCDOC_LOGSYS",
				        "SRCDOC_TYPE",
				        "SRCDOC_ID",
				        "TIMESTAMP_UTC",
				        "CONDITION_TYPE",
				        "PL_ACCOUNT",				
				        "BETRW",
				        "WAERS",				
				        "CATEGORY",
				        "MAIN_COND_TYPE",
				        "BATCH_ID",
				        "ERROR_CODE",
						"ERROR_CREATE_TS")
					 VALUES(CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."JRNL_DT",
							CUR_ORDER."CC_SSP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
					        LV_BATCH_ID,
					        :CURRENT_ERROR,
							LV_CUR_UTC);		
				
	        --  All erroneous records are inserted into Order Condition EH Table for TP(Transaction Price)
		        INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH"(
		   	            "SRCDOC_COMP",
                        "SRCDOC_LOGSYS",
				        "SRCDOC_TYPE",
				        "SRCDOC_ID",
				        "TIMESTAMP_UTC",
				        "CONDITION_TYPE",
				        "PL_ACCOUNT",				
				        "BETRW",
				        "WAERS",				
				        "CATEGORY",
				        "MAIN_COND_TYPE",
				        "BATCH_ID",
				        "ERROR_CODE",
						"ERROR_CREATE_TS")
				  VALUES(CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."CC_TP",
						CUR_ORDER."CC_PL_ACCOUNT",
						CUR_ORDER."AMOUNT",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_CATEGORY",
						CUR_ORDER."CC_MAIN_COND_TYPE",
				        LV_BATCH_ID,
				        :CURRENT_ERROR,
						LV_CUR_UTC);
						
			    INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_EH"(
					    "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"INVOICE_TYPE",
						"EXCHANGE_RATE",
						"ZZ_AUFNR",
			            "ZZ_BATCH_ID",
			            "ZZ_BKTXT",
			            "ZZ_BLDAT",
			            "ZZ_BUDAT",
			            "ZZ_BUKRS",
			            "ZZ_ICHKONT",
			            "ZZ_KOSTL",
			            "ZZ_LEGACY",
			            "ZZ_MWSKZ",
			            "ZZ_SGTXT",
			            "ZZ_TXJCD",
			            "ZZ_VBUND",
			            "ZZ_XBLNR",
			            "ZZ_ZUONR",	
			            "BUKRS",
			            "WAERS",
			            "HWAER",			            
					    "ERROR_CODE",
					    "ERROR_CREATE_TS")						
				VALUES(CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE_INV",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."BAN",
						CUR_ORDER."CC_ITEM_ID_RAI",
						CUR_ORDER."KUNNR_SID",
						CUR_ORDER."CC_QUANTITY",
						CUR_ORDER."CC_QUANTITY_UNIT",
						CUR_ORDER."ORIGDOC_COMP",
			            CUR_ORDER."ORIGDOC_LOGSYS",
			            CUR_ORDER."ORIGDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."BILL_DATE",
						CUR_ORDER."CC_FINAL_INVOICE",
						CUR_ORDER."CC_QUANTITY_REL",
						CUR_ORDER."BILL_DATE",
						CUR_ORDER."CC_INVOICE_TYPE",
			            CUR_ORDER."CC_EXCHANGE_RATE",
			            CUR_ORDER."ZZ_AUFNR",
			            LV_BATCH_ID,
			            CUR_ORDER."ZZ_BKTXT_INVC",
			            CUR_ORDER."ZZ_BLDAT",
			            CUR_ORDER."ZZ_BUDAT",
			            CUR_ORDER."ZZ_BUKRS",
			            CUR_ORDER."ZZ_ICHKONT",
			            CUR_ORDER."ZZ_KOSTL",
			            CUR_ORDER."ZZ_LEGACY",
			            CUR_ORDER."ZZ_MWSKZ",
			            CUR_ORDER."ZZ_SGTXT",
			            CUR_ORDER."CC_TXJCD",
			            CUR_ORDER."ZZ_VBUND",
			            CUR_ORDER."ZZ_XBLNR",
			            CUR_ORDER."ZZ_ZUONR",
			            CUR_ORDER."CC_BUKRS",
	                    CUR_ORDER."WAERS",
                        CUR_ORDER."WAERS",			            
					    :CURRENT_ERROR,
			            LV_CUR_UTC);
			 			
			--  All erroneous records are inserted into Invoice Condition EH Table for TP( Transaction Price)
		   	 	INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
							"BETRW",
							"BETRH",
							"WAERS",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",					    	
					    	"ERROR_CREATE_TS", 
					    	"BATCH_ID"
					    	)
					VALUES( CUR_ORDER."SRCDOC_COMP",
						    CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE_INV",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."JRNL_DT",
							CUR_ORDER."CC_TP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."WAERS",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
 			 				:CURRENT_ERROR,
			            	LV_CUR_UTC,
			            	LV_BATCH_ID);
			
	        --  Set Error Flag				        
		        LV_ERROR_FLAG := 'Y';
					
			END FOR;		
			
	--  Processing for Successful Records
		ELSEIF CUR_ORDER.IS_SIBLING_ERROR = '0' 
		   AND CUR_ORDER.ERROR_STATUS        = '0' 
		  THEN
			BEGIN AUTONOMOUS TRANSACTION

	        --  All valid records are inserted into Order Main Temp table 
			  INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_TT"(
						    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"START_DATE",
							"END_DATE",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"XNEGATIVE_ITEM",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_ADJ_RSN_CD",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_CONVERSION",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MINPRICE",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"ZZ_XREF1",
							"ZZ_XREF2")
					VALUES(CUR_ORDER.SRCDOC_COMP,
	                    CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."BAN",
						CUR_ORDER."CC_ITEM_ID_RAI",
						CUR_ORDER."REFERENCE_TYPE",
						CUR_ORDER."CC_REF_ID",
						CUR_ORDER."KUNNR_SID",
						CUR_ORDER."CYCLE_START_DATE",
						CUR_ORDER."CYCLE_END_DATE",
						CUR_ORDER."CC_BUKRS",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_QUANTITY",
						CUR_ORDER."CC_QUANTITY_UNIT",
						CUR_ORDER."RECEIV_ACCOUNT",
						CUR_ORDER."CYCLE_START_DATE",
						CUR_ORDER."CC_X_NEGATIVE_ITEM",
						CUR_ORDER."ZZ_ALLOCATE",
						CUR_ORDER."ZZ_AUFNR",
						CUR_ORDER."ZZ_ADJ_RSN_CD",
						 LV_BATCH_ID,
						CUR_ORDER."ZZ_BILLER",
						CUR_ORDER."ZZ_BKTXT_ORDR",
						 CUR_ORDER."ZZ_BRANDACT",
						CUR_ORDER."ZZ_BUKRS",
						CUR_ORDER."ZZ_BU_VIEW",
						CUR_ORDER."ZZ_CATRANSFER",
						CUR_ORDER."ZZ_CONVERSION",
						CUR_ORDER."ZZ_KOSTL",
						CUR_ORDER."ZZ_LEGACY",
						CUR_ORDER."CHARGE_TYPE",
						CUR_ORDER."POB_TYPE",
						CUR_ORDER."ZZ_MINPRICE",
						CUR_ORDER."ZZ_MOD_TYPE",
						CUR_ORDER."ZZ_MWSKZ",
						CUR_ORDER."ZZ_PAOBJNR",
						CUR_ORDER."ZZ_PRE_POST",
						CUR_ORDER."ZZ_SGTXT",
						CUR_ORDER."CC_TXJCD",
						CUR_ORDER."ZZ_UPFFLG",
						CUR_ORDER."ZZ_VBUND",
						CUR_ORDER."ZZ_XBLNR",
						CUR_ORDER."ZZ_ZUONR",
						CUR_ORDER."ZZ_XREF1",
						CUR_ORDER."ZZ_XREF2");
					 
	        --  All valid records are inserted ORDER Condition table for SSP(Standalone Selling Price)           
				INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_TT"(
						  	"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
				        	"BATCH_ID")
				    VALUES(CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."JRNL_DT",
							CUR_ORDER."CC_SSP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
					        LV_BATCH_ID);		
					 
	        --  All valid records are inserted ORDER Condition table for TP(Transaction Price)
		        INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_TT"(
					      	"SRCDOC_COMP",
                        	"SRCDOC_LOGSYS",
					        "SRCDOC_TYPE",
					        "SRCDOC_ID",
					        "TIMESTAMP_UTC",
					        "CONDITION_TYPE",
					        "PL_ACCOUNT",				
					        "BETRW",
					        "WAERS",				
					        "CATEGORY",
					        "MAIN_COND_TYPE",
				        	"BATCH_ID")
					VALUES (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."JRNL_DT",
							CUR_ORDER."CC_TP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
				        	LV_BATCH_ID);
				      
				      
				  --  All valid records are inserted into Invoice Main Temp table
			  INSERT INTO   "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_TT"(
						    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"KUNNR",
							"QUANTITY",
							"QUANTITY_UNIT",
							"ORIGDOC_COMP",
							"ORIGDOC_LOGSYS",
							"ORIGDOC_TYPE",
							"ORIGDOC_ID",
							"DUE_DATE",
							"FINAL_INVOICE",
							"QUANTITY_REL",
							"POSTING_DATE",
							"INVOICE_TYPE",
							"EXCHANGE_RATE",
							"ZZ_AUFNR",
				            "ZZ_BATCH_ID",
				            "ZZ_BKTXT",
				            "ZZ_BLDAT",
				            "ZZ_BUDAT",
				            "ZZ_BUKRS",
				            "ZZ_ICHKONT",
				            "ZZ_KOSTL",
				            "ZZ_LEGACY",
				            "ZZ_MWSKZ",
				            "ZZ_SGTXT",
				            "ZZ_TXJCD",
				            "ZZ_VBUND",
				            "ZZ_XBLNR",
				            "ZZ_ZUONR",
			                "BUKRS",
			                "WAERS",
			                "HWAER" )							
					VALUES( CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE_INV",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."JRNL_DT",
						CUR_ORDER."BAN",
						CUR_ORDER."CC_ITEM_ID_RAI",
						CUR_ORDER."KUNNR_SID",
						CUR_ORDER."CC_QUANTITY",
						CUR_ORDER."CC_QUANTITY_UNIT",
						CUR_ORDER."ORIGDOC_COMP",
			            CUR_ORDER."ORIGDOC_LOGSYS",
			            CUR_ORDER."ORIGDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						CUR_ORDER."BILL_DATE",
						CUR_ORDER."CC_FINAL_INVOICE",
						CUR_ORDER."CC_QUANTITY_REL",
						CUR_ORDER."BILL_DATE",
						CUR_ORDER."CC_INVOICE_TYPE",
			            CUR_ORDER."CC_EXCHANGE_RATE",
			            CUR_ORDER."ZZ_AUFNR",
			            LV_BATCH_ID,
			            CUR_ORDER."ZZ_BKTXT_INVC",
			            CUR_ORDER."ZZ_BLDAT",
			            CUR_ORDER."ZZ_BUDAT",
			            CUR_ORDER."ZZ_BUKRS",
			            CUR_ORDER."ZZ_ICHKONT",
			            CUR_ORDER."ZZ_KOSTL",
			            CUR_ORDER."ZZ_LEGACY",
			            CUR_ORDER."ZZ_MWSKZ",
			            CUR_ORDER."ZZ_SGTXT",
			            CUR_ORDER."CC_TXJCD",
			            CUR_ORDER."ZZ_VBUND",
			            CUR_ORDER."ZZ_XBLNR",
			            CUR_ORDER."ZZ_ZUONR",
			            CUR_ORDER."CC_BUKRS",
	                    CUR_ORDER."WAERS",
                        CUR_ORDER."WAERS");					
	
          --  All valid records are inserted into Invoice Main Temp table for TP(Transaction Price)
			  INSERT INTO   "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_TT"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
							"BETRW",
							"BETRH",
							"WAERS",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE",
					    	"BATCH_ID")				
					VALUES( CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE_INV",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."JRNL_DT",
							CUR_ORDER."CC_TP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."AMOUNT",
							CUR_ORDER."WAERS",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
						 	LV_BATCH_ID);
				   
							
	        END;
	        
		END IF;
		
	END FOR;
	
	FOR CUR_ORDER_PARENT AS C_RAI_INVC_ORDR_PARENT DO
	
	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
	
	  --  Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION 
		
	  --  Do Nothing. Exception Handled to ensure SP does not get terminated
	      
	      END;
	      
	    --  All records of the corresponding parent is inserted into ORDER main error table	      
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2",
						"ERROR_CODE",
						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS")
				 SELECT "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2",
                 		::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC	      	        		
                   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_TT" AS TT
                  WHERE TT."HEADER_ID" = CUR_ORDER_PARENT."BAN"
                    AND "ZZ_BATCH_ID" = LV_BATCH_ID;

		--  All records of the corresponding parent is inserted into Order Condition EH Table for 
		--  SSP(Standalone Selling Price) and TP(Transaction Price)
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH"(
						"SRCDOC_COMP",
                        "SRCDOC_LOGSYS",
				        "SRCDOC_TYPE",
				        "SRCDOC_ID",
				        "TIMESTAMP_UTC",
				        "CONDITION_TYPE",
				        "PL_ACCOUNT",				
				        "BETRW",
				        "WAERS",				
				        "CATEGORY",
				        "ERROR_CODE",
						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS")
				 SELECT COND."SRCDOC_COMP",
                        COND."SRCDOC_LOGSYS",
				        COND."SRCDOC_TYPE",
				        COND."SRCDOC_ID",
				        COND."TIMESTAMP_UTC",
				        COND."CONDITION_TYPE",
				        COND."PL_ACCOUNT",				
				        COND."BETRW",
				        COND."WAERS",				
				        COND."CATEGORY",
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_TT"
				          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_TT" 
					      WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
			
			--	All erraneous records of the corresponding parent is inserted into INVC main error table	
            INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_EH"(
				        "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"INVOICE_TYPE",
						"EXCHANGE_RATE",
						"ZZ_AUFNR",
			            "ZZ_BATCH_ID",
			            "ZZ_BKTXT",
			            "ZZ_BLDAT",
			            "ZZ_BUDAT",
			            "ZZ_BUKRS",
			            "ZZ_ICHKONT",
			            "ZZ_KOSTL",
			            "ZZ_LEGACY",
			            "ZZ_MWSKZ",
			            "ZZ_SGTXT",
			            "ZZ_TXJCD",
			            "ZZ_VBUND",
			            "ZZ_XBLNR",
			            "ZZ_ZUONR",
			            "ZZ_XREF1",
			            "ZZ_XREF2",
			            "BUKRS",
			            "WAERS",
			            "HWAER",			            
			            "ERROR_CODE",
			            "TECHNICAL_MESSAGE",	    
			            "ERROR_CREATE_TS")
			     SELECT "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"INVOICE_TYPE",
						"EXCHANGE_RATE",
						"ZZ_AUFNR",
			            "ZZ_BATCH_ID",
			            "ZZ_BKTXT",
			            "ZZ_BLDAT",
			            "ZZ_BUDAT",
			            "ZZ_BUKRS",
			            "ZZ_ICHKONT",
			            "ZZ_KOSTL",
			            "ZZ_LEGACY",
			            "ZZ_MWSKZ",
			            "ZZ_SGTXT",
			            "ZZ_TXJCD",
			            "ZZ_VBUND",
			            "ZZ_XBLNR",
			            "ZZ_ZUONR",
			            "ZZ_XREF1",
			            "ZZ_XREF2",
			            "BUKRS",
	                    "WAERS",
                        "HWAER",			            
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC
                   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_TT" 
                  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
                    AND "ZZ_BATCH_ID" = LV_BATCH_ID;		
                  
		--	All erraneous records of the corresponding parent is inserted into INVC cond error table
		--  SSP(Standalone Selling Price) and TP(Transaction Price)          
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",
						"BETRW",
						"BETRH",
						"WAERS",
						"HWAER",
						"CATEGORY",
						"MAIN_COND_TYPE",
					    "BATCH_ID",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
				SELECT  COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",
						COND."TIMESTAMP_UTC",
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",
						COND."BETRW",
						COND."BETRH",
						COND."WAERS",
						COND."WAERS",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE",
					    COND."BATCH_ID", 
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_TT"
				          WHERE"BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM  "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_TT"
					      WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
			
					
			LV_ERROR_FLAG := 'Y';
	    
	    END;

    --  Check if any siblings of the parent is in ORDR MAIN Error table.
    --  If Yes move the entire dataset of the corresponding parent into MAIN error and COND error tables.
		SELECT COUNT(*) INTO LV_COUNT_ORDR 
		  FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_EH"
	      WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
	      AND "ZZ_BATCH_ID" = LV_BATCH_ID;
		
		    SELECT COUNT(*) INTO LV_COUNT_INVC 
	      FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_EH"
	     WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
	       AND "ZZ_BATCH_ID" = LV_BATCH_ID;
		
		IF LV_COUNT_ORDR > 0 OR LV_COUNT_INVC > 0 THEN

		--  All records of the corresponding parent is inserted into Order Main error table 
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2",
						"ERROR_CODE",
						"ERROR_CREATE_TS")
				 SELECT "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2",
						LC_SQL_ERROR,
						LV_CUR_UTC
				   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_TT"
				  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
		
		--  All records of the corresponding parent is inserted into Order Condition error Table for 
		--  SSP(Standalone Selling Price) and TP(Transaction price)
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
				        "BATCH_ID",
						"ERROR_CODE",
						"ERROR_CREATE_TS")
				 SELECT COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",
						COND."TIMESTAMP_UTC",
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",
						COND."BETRW",
						COND."WAERS",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE",
					    COND."BATCH_ID",
						LC_SQL_ERROR,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_TT"
				          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_TT"
					      WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
		--  All records of the corresponding parent is inserted into INVC Main error table 
            INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_EH"(
					     "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"INVOICE_TYPE",
						"EXCHANGE_RATE",
						"ZZ_AUFNR",
			            "ZZ_BATCH_ID",
			            "ZZ_BKTXT",
			            "ZZ_BLDAT",
			            "ZZ_BUDAT",
			            "ZZ_BUKRS",
			            "ZZ_ICHKONT",
			            "ZZ_KOSTL",
			            "ZZ_LEGACY",
			            "ZZ_MWSKZ",
			            "ZZ_SGTXT",
			            "ZZ_TXJCD",
			            "ZZ_VBUND",
			            "ZZ_XBLNR",
			            "ZZ_ZUONR",
			            "ZZ_XREF1",
			            "ZZ_XREF2",	
			            "BUKRS",
			            "WAERS",
			            "HWAER",			            
			            "ERROR_CODE",
			            "ERROR_CREATE_TS")
			     SELECT  "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"INVOICE_TYPE",
						"EXCHANGE_RATE",
						"ZZ_AUFNR",
			            "ZZ_BATCH_ID",
			            "ZZ_BKTXT",
			            "ZZ_BLDAT",
			            "ZZ_BUDAT",
			            "ZZ_BUKRS",
			            "ZZ_ICHKONT",
			            "ZZ_KOSTL",
			            "ZZ_LEGACY",
			            "ZZ_MWSKZ",
			            "ZZ_SGTXT",
			            "ZZ_TXJCD",
			            "ZZ_VBUND",
			            "ZZ_XBLNR",
			            "ZZ_ZUONR",
			            "ZZ_XREF1",
			            "ZZ_XREF2",	
			            "BUKRS",
			            "WAERS",
			            "HWAER",			            
						LC_SQL_ERROR,
						LV_CUR_UTC
                   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_TT" 
                  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
                    AND "ZZ_BATCH_ID" = LV_BATCH_ID;			
                  
		--	All erraneous records of the corresponding parent is inserted into INVC cond error table
		--  SSP(Standalone Selling Price) and TP(Transaction Price)          
			INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_EH" (
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",
						"BETRW",
						"BETRH",
						"WAERS",
						"HWAER",
						"CATEGORY",
						"MAIN_COND_TYPE",
					    "BATCH_ID",
						"ERROR_CODE",
					    "ERROR_CREATE_TS")
				SELECT  COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",
						COND."TIMESTAMP_UTC",
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",
						COND."BETRW",
						COND."BETRH",
						COND."WAERS",
						COND."WAERS",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE",
					    COND."BATCH_ID", 
						:LC_SQL_ERROR,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_TT"
				          WHERE"BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM  "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_TT"
					      WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
			  
		--  Set Error Flag				        
			LV_ERROR_FLAG := 'Y';	  
	
	--	Processing of successful records(none of the siblings of a corresponding parent are in error)
		ELSEIF LV_COUNT_ORDR = 0 AND LV_COUNT_INVC = 0 THEN

			BEGIN AUTONOMOUS TRANSACTION
			
			--  All valid records are inserted into Order Main table 
				INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2")
				 SELECT "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"START_DATE",
						"END_DATE",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"XNEGATIVE_ITEM",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_ADJ_RSN_CD",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_CONVERSION",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ZZ_XREF1",
						"ZZ_XREF2"
				   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_TT"
				  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;

			--  All valid records are inserted ORDER Condition table for SSP(Standalone Selling Price) and TP(Transaction Price)         
				INSERT INTO "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE"
				        )
				 SELECT COND."SRCDOC_COMP",
                        COND."SRCDOC_LOGSYS",
				        COND."SRCDOC_TYPE",
				        COND."SRCDOC_ID",
				        COND."TIMESTAMP_UTC",
				        COND."CONDITION_TYPE",
				        COND."PL_ACCOUNT",				
				        COND."BETRW",
				        COND."WAERS",				
				        COND."CATEGORY",
				        COND."MAIN_COND_TYPE"
				   FROM (SELECT * 
				           FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_TT"
				          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_TT"
					      WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
				    
		
            --  All valid records are inserted into Invoice Main table
			  INSERT INTO   "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN" (
						     "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"KUNNR",
							"QUANTITY",
							"QUANTITY_UNIT",
							"ORIGDOC_COMP",
							"ORIGDOC_LOGSYS",
							"ORIGDOC_TYPE",
							"ORIGDOC_ID",
							"DUE_DATE",
							"FINAL_INVOICE",
							"QUANTITY_REL",
							"POSTING_DATE",
							"INVOICE_TYPE",
							"EXCHANGE_RATE",
							"ZZ_AUFNR",
				            "ZZ_BATCH_ID",
				            "ZZ_BKTXT",
				            "ZZ_BLDAT",
				            "ZZ_BUDAT",
				            "ZZ_BUKRS",
				            "ZZ_ICHKONT",
				            "ZZ_KOSTL",
				            "ZZ_LEGACY",
				            "ZZ_MWSKZ",
				            "ZZ_SGTXT",
				            "ZZ_TXJCD",
				            "ZZ_VBUND",
				            "ZZ_XBLNR",
				            "ZZ_ZUONR",
				            "ZZ_XREF1",
				            "ZZ_XREF2",
			                "BUKRS",
			                "WAERS",
			                "HWAER")
			     	SELECT 	"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"KUNNR",
							"QUANTITY",
							"QUANTITY_UNIT",
							"ORIGDOC_COMP",
							"ORIGDOC_LOGSYS",
							"ORIGDOC_TYPE",
							"ORIGDOC_ID",
							"DUE_DATE",
							"FINAL_INVOICE",
							"QUANTITY_REL",
							"POSTING_DATE",
							"INVOICE_TYPE",
							"EXCHANGE_RATE",
							"ZZ_AUFNR",
				            "ZZ_BATCH_ID",
				            "ZZ_BKTXT",
				            "ZZ_BLDAT",
				            "ZZ_BUDAT",
				            "ZZ_BUKRS",
				            "ZZ_ICHKONT",
				            "ZZ_KOSTL",
				            "ZZ_LEGACY",
				            "ZZ_MWSKZ",
				            "ZZ_SGTXT",
				            "ZZ_TXJCD",
				            "ZZ_VBUND",
				            "ZZ_XBLNR",
				            "ZZ_ZUONR",
				            "ZZ_XREF1",
				            "ZZ_XREF2",
			                "BUKRS",
			                "WAERS",
			                "HWAER"				            
                   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_TT" 
                  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
                    AND "ZZ_BATCH_ID" = LV_BATCH_ID;

            --  All valid records are inserted into Invoice Cond table 
            --  for SSP(Standalone Selling Price) and TP(Transaction Price)
	 		  INSERT INTO   "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND"(
				 		    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
							"BETRW",
							"BETRH",
							"WAERS",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE")					  
					 SELECT COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",
						COND."TIMESTAMP_UTC",
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",
						COND."BETRW",
						COND."BETRH",
						COND."WAERS",
						COND."WAERS",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE"
					   FROM (SELECT * 
					           FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_TT"
					          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					        (SELECT "SRCDOC_ID" 
					           FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_TT"
					          WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
					            AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				      WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
		
		    END;
                  				
	--      Insert PK of successfully processed Records into Local Temp Tables 
	--      for Updating the deleted flag in corresponding Error Tables records
				   		      
			INSERT INTO	#UPDATE_EH_DELETION_ORDR_MAIN_OB (SRCDOC_ID) 
				 SELECT "SRCDOC_ID" 
				   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN"
				  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
			   		
			INSERT INTO	#UPDATE_EH_DELETION_ORDR_COND_OB (SRCDOC_ID) 
				 SELECT COND."SRCDOC_ID" 
				   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND" COND,
	                	(SELECT "SRCDOC_ID" 
	                	   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN" 
					  	  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN") MAIN 
				  WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
			
			INSERT INTO #UPDATE_OB_INVC(
			   		    SRCDOC_ID,                
			   		    REFERENCE_ID,
			   		    RAI_ITEM_ID,   
			   		    BATCH_ID,          
			   		    HEADER_ID,
			   		    POST_BILLING_ID
			   		    )	   			    
			     SELECT A.CC_SRCDOC_ID,                
			   		    A.CC_REF_ID,
			   		    A.CC_ITEM_ID_RAI,   
			   		    B."ZZ_BATCH_ID"	,          
			   		    A.BAN,
			   		    A.POST_BILLING_ID       		        		   		        
		   		  FROM :OB_INVC_ORDR_RAI_ITEM  A, 
   		    	       (SELECT "HEADER_ID","ZZ_BATCH_ID" 
   		    	          FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN"
   		    	         WHERE "HEADER_ID" =  CUR_ORDER_PARENT."BAN"
   		    	           AND "ZZ_BATCH_ID" = LV_BATCH_ID) B 
		          WHERE B."HEADER_ID" = A."BAN";
			   		        
	        INSERT INTO	#UPDATE_EH_DELETION_ORDR_MAIN_INVC_OB (SRCDOC_ID) 
	        	 SELECT "SRCDOC_ID" 
	        	   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN"
				  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
			   		
			INSERT INTO	 #UPDATE_EH_DELETION_ORDR_COND_INVC_OB (SRCDOC_ID)				
			     SELECT COND."SRCDOC_ID" 
			       FROM  "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND" COND,
	                	(SELECT "SRCDOC_ID" 
	                	   FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN"
					  	  WHERE "HEADER_ID" = CUR_ORDER_PARENT."BAN"
					  	    AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
			
							          												 		   		        		   	   
		END IF;
	
	END FOR;		    
		 
--  Update Order Main Error Table

    UPDATE "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_EH" A
   	  FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_MAIN_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_MAIN_OB B
	    ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 

--  Update Order Cond Error Table

    UPDATE "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH" A
      FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_ORDR_COND_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_COND_OB B
	    ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);


--------------------------------------------------------------------------------------------------
	-- Update NDB Tables
-------------------------------------------------------------------------------------------------- 
			
	--  Updating the Source document Id, Reference Id, Header Id, RAI Item ID,Batch id 
	--  and RAI Timestamp in NDB INVOICE table for M2M Contracts
	
	UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_POSTBILLING" A
	  FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_POSTBILLING" A
     INNER JOIN #UPDATE_OB_INVC B
	    ON A."BAN"        	  = B."HEADER_ID"
       AND A."POST_BILLING_ID"        = B."POST_BILLING_ID"
	   SET "SRCDOC_ID"     = B."SRCDOC_ID",
		   "REFERENCE_ID"  = B."REFERENCE_ID",			
		   "HEADER_ID"     = B."HEADER_ID",			
		   "RAI_ITEM_ID"   = B."RAI_ITEM_ID",
		   "BATCH_ID"      = B."BATCH_ID",			
		   "RAI_TS"        = LV_CUR_UTC
	 WHERE A."RAI_TS" IS NULL;
									 
	--  Update INVOICE Main Error Table
	
	UPDATE "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_EH" A
	  FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_MAIN_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_MAIN_INVC_OB B
	    ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 

	--  Update Order Cond Error Table
	
	UPDATE "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_EH" A
	  FROM "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::OB_INVC_COND_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_COND_INVC_OB B
		ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 		   		    										           
	
	-------------------------------------------------------------------------------------------------
	--  Set Overall Status
	-------------------------------------------------------------------------------------------------- 
	
	--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
	--  executed successfully
	    IF(LV_ERROR_FLAG = 'Y') THEN		
	
	     OP_STATUS := LC_ERROR_TEXT; 
				
	    ELSE
	
	  	 OP_STATUS := LC_SUCCESS_TEXT; 	
					
		END IF;
		
	END;
	
END;
