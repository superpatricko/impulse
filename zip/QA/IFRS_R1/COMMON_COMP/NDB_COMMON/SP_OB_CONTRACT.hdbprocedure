PROCEDURE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::SP_OB_CONTRACT"
(IN IP_EFF_DT DATE,
OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_OB_CONTRACT
-- Created By      : BC_EY94118 (Prakhar)       
-- Create Date     : 08-05-2017
-- Description     : Data Inserted using Calculation View - CA_IFRS_OB_CONTRACT
--                   to NDB Table - OB_CUSTOMER Using this stored procedure.
--                   OneBill Customer includes data from landing table IFRS_OB_CONTRACT.		
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number>
-- Description of Changes Made> : <Description of Changes>
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);
DECLARE LV_LOOP_ERROR_FLAG  INTEGER := 0;
DECLARE LV_PREV_RECORD  	NVARCHAR(100) := NULL;


--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_CONTR FOR
	       SELECT
				 "CUSTOMER_ID",
				 "SUBSCRIBER_NO",
				 "BUSINESS_ID",
				 "REFERENCE_EFFECTIVE_DT",
				 "INIT_ACTIVATION_DATE",
				 "PRODUCT_TYPE",
				 "SUB_STATUS_RSN_CODE",
				 "REFERENCE_EXPIRY_DT",
				 "EFFECTIVE_DATE",
				 "PRV_BAN",
				 "SUB_STATUS",
				 "SUB_STATUS_DATE",
				 "SUB_STATUS_LAST_ACT",
				 "SUB_STS_ISSUE_DATE",
				 "NEXT_BAN",
				 "BILL_CYCLE",
				 "BAN_STATUS",
				 "STATUS_LAST_DATE",
				 "START_SERVICE_DATE",
				 "ACCOUNT_TYPE",
				 "ACCOUNT_SUB_TYPE",
				 "ADR_PROVINCE",
				 "DEFAULT_SUB_MARKET",
				 "RELATED_MARKET",
				 "ADR_POSTAL",
				 "FIRST_NAME",
				 "LAST_BUSINESS_NAME",
				 "STATUS_ACTV_CODE",
				 "STATUS_ACTV_RSN_CODE",
				 "TAX_PROVINCE",
				 "KUNNR_SID",
				 "EFFECTIVE_DATE_PREV_DAY",
				 "FLAG_EXISTING_RECORD",
				 "ERROR_CODE",
	 	         "ERROR_STATUS",
	 	         "CONCAT_PK"
			FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_IFRS_OB_CONTRACT"
			     (PLACEHOLDER."$$IP_EFF_DT$$" => :IP_EFF_DT)
	    ORDER BY "CUSTOMER_ID", "SUBSCRIBER_NO", "REFERENCE_EFFECTIVE_DT";
    
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_IFRS_OB_CONTRACT(CUSTOMER_ID NVARCHAR(9),"EFF_DT" DATE);
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (CUSTOMER_ID NVARCHAR(100), SUBSCRIBER_NO NVARCHAR(100),"REFERENCE_EFFECTIVE_DT" NVARCHAR(100));

--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------
FOR CUR_CONTR AS C_CONTR DO

	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
		
	--    Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION
		  BEGIN AUTONOMOUS TRANSACTION 	
		   
		-- Do Nothing. Exception Handled to ensure SP does not get terminated 
		
	 	  END;
 	  			
			     -- Insert record into error table
			   	    INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER_EH"(
			   	  		        "CUSTOMER_ID",
								"SUBSCRIBER_NO",
								"BUSINESS_ID",
								"EFFECTIVE_DATE",
								"INIT_ACTIVATION_DATE",
								"PRODUCT_TYPE",
								"SUB_STATUS_RSN_CODE",
								"BILL_CYCLE",
								"BAN_STATUS",
								"STATUS_LAST_DATE",
								"START_SERVICE_DATE",
								"ACCOUNT_TYPE",
								"ACCOUNT_SUB_TYPE",
								"ADR_PROVINCE",
								"DEFAULT_SUB_MARKET",
								"RELATED_MARKET",
								"ADR_POSTAL",
								"FIRST_NAME",
								"LAST_BUSINESS_NAME",
								"PRV_BAN",
								"STATUS_ACTV_CODE",
								"STATUS_ACTV_RSN_CODE",
								"SUB_STATUS_DATE",
								"SUB_STATUS",
								"SUB_STATUS_LAST_ACT",
								"SUB_STS_ISSUE_DATE",
								"TAX_PROVINCE",
								"REFERENCE_EFFECTIVE_DT",
								"REFERENCE_EXPIRY_DT",
								"NEXT_BAN",
								"KUNNR_SID",
								"INSERT_TS",
                                "ERROR_CODE",
					            "TECHNICAL_MESSAGE",
					            "ERROR_CREATE_TS")
				        VALUES (CUR_CONTR."CUSTOMER_ID",
							    CUR_CONTR."SUBSCRIBER_NO",
							    CUR_CONTR."BUSINESS_ID",
						        CUR_CONTR."EFFECTIVE_DATE",
							    CUR_CONTR."INIT_ACTIVATION_DATE",
							    CUR_CONTR."PRODUCT_TYPE",
							    CUR_CONTR."SUB_STATUS_RSN_CODE",
							    CUR_CONTR."BILL_CYCLE",
							    CUR_CONTR."BAN_STATUS",
							    CUR_CONTR."STATUS_LAST_DATE",
							    CUR_CONTR."START_SERVICE_DATE",
							    CUR_CONTR."ACCOUNT_TYPE",
							    CUR_CONTR."ACCOUNT_SUB_TYPE",
							    CUR_CONTR."ADR_PROVINCE",
							    CUR_CONTR."DEFAULT_SUB_MARKET",
							    CUR_CONTR."RELATED_MARKET",
						        CUR_CONTR."ADR_POSTAL", 
							    CUR_CONTR."FIRST_NAME",
								CUR_CONTR."LAST_BUSINESS_NAME",
								CUR_CONTR."PRV_BAN",
								CUR_CONTR."STATUS_ACTV_CODE",
								CUR_CONTR."STATUS_ACTV_RSN_CODE",
								CUR_CONTR."SUB_STATUS_DATE",
								CUR_CONTR."SUB_STATUS",
								CUR_CONTR."SUB_STATUS_LAST_ACT",
								CUR_CONTR."SUB_STS_ISSUE_DATE",
								CUR_CONTR."TAX_PROVINCE",
								CUR_CONTR."REFERENCE_EFFECTIVE_DT",
								CUR_CONTR."REFERENCE_EXPIRY_DT",
								CUR_CONTR."NEXT_BAN",
								CUR_CONTR."KUNNR_SID",
								LV_CUR_UTC,
							    ::SQL_ERROR_CODE,
					            ::SQL_ERROR_MESSAGE,
					            LV_CUR_UTC);
		          
              LV_ERROR_FLAG := 'Y';
     	      LV_LOOP_ERROR_FLAG := 1;    
   END; 
 -----------------------------------------------------------------------------------------------   
    
-- FOR CLEARING THE VARIABLES

	IF ((LV_PREV_RECORD IS NULL) OR (CUR_CONTR."CONCAT_PK" != LV_PREV_RECORD)) THEN

		LV_LOOP_ERROR_FLAG := 0;
		LV_PREV_RECORD := "CUR_CONTR"."CONCAT_PK";
		
  END IF;

-----------------------------------------------------------------------------------------------

   --  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF CUR_CONTR.ERROR_STATUS = '1' THEN
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_CONTR."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
		   -- Insert into the Error Table
		      		INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER_EH"(
				   	  	        "CUSTOMER_ID",
								"SUBSCRIBER_NO",
								"BUSINESS_ID",
								"EFFECTIVE_DATE",
								"INIT_ACTIVATION_DATE",
								"PRODUCT_TYPE",
								"SUB_STATUS_RSN_CODE",
								"BILL_CYCLE",
								"BAN_STATUS",
								"STATUS_LAST_DATE",
								"START_SERVICE_DATE",
								"ACCOUNT_TYPE",
								"ACCOUNT_SUB_TYPE",
								"ADR_PROVINCE",
								"DEFAULT_SUB_MARKET",
								"RELATED_MARKET",
								"ADR_POSTAL",
								"FIRST_NAME",
								"LAST_BUSINESS_NAME",
								"PRV_BAN",
								"STATUS_ACTV_CODE",
								"STATUS_ACTV_RSN_CODE",
								"SUB_STATUS_DATE",
								"SUB_STATUS",
								"SUB_STATUS_LAST_ACT",
								"SUB_STS_ISSUE_DATE",
								"TAX_PROVINCE",
								"REFERENCE_EFFECTIVE_DT",
								"REFERENCE_EXPIRY_DT",
								"NEXT_BAN",
								"KUNNR_SID",
								"INSERT_TS",
                                "ERROR_CODE",
					            "ERROR_CREATE_TS"
						       )
				        VALUES (CUR_CONTR."CUSTOMER_ID",
							    CUR_CONTR."SUBSCRIBER_NO",
							    CUR_CONTR."BUSINESS_ID",
						        CUR_CONTR."EFFECTIVE_DATE",
							    CUR_CONTR."INIT_ACTIVATION_DATE",
							    CUR_CONTR."PRODUCT_TYPE",
							    CUR_CONTR."SUB_STATUS_RSN_CODE",
							    CUR_CONTR."BILL_CYCLE",
							    CUR_CONTR."BAN_STATUS",
							    CUR_CONTR."STATUS_LAST_DATE",
							    CUR_CONTR."START_SERVICE_DATE",
							    CUR_CONTR."ACCOUNT_TYPE",
							    CUR_CONTR."ACCOUNT_SUB_TYPE",
							    CUR_CONTR."ADR_PROVINCE",
							    CUR_CONTR."DEFAULT_SUB_MARKET",
							    CUR_CONTR."RELATED_MARKET",
						        CUR_CONTR."ADR_POSTAL", 
							    CUR_CONTR."FIRST_NAME",
								CUR_CONTR."LAST_BUSINESS_NAME",
								CUR_CONTR."PRV_BAN",
								CUR_CONTR."STATUS_ACTV_CODE",
								CUR_CONTR."STATUS_ACTV_RSN_CODE",
								CUR_CONTR."SUB_STATUS_DATE",
								CUR_CONTR."SUB_STATUS",
								CUR_CONTR."SUB_STATUS_LAST_ACT",
								CUR_CONTR."SUB_STS_ISSUE_DATE",
								CUR_CONTR."TAX_PROVINCE",
								CUR_CONTR."REFERENCE_EFFECTIVE_DT",
								CUR_CONTR."REFERENCE_EXPIRY_DT",
								CUR_CONTR."NEXT_BAN",
								CUR_CONTR."KUNNR_SID",
								LV_CUR_UTC,
					            :CURRENT_ERROR,
					            LV_CUR_UTC);
	
		END FOR;
								     
         -- Set Error Flag				        
			LV_ERROR_FLAG := 'Y';
			LV_LOOP_ERROR_FLAG := 1;
		    		    
-- Processing for Successful Records
   ELSE 
         IF CUR_CONTR.ERROR_STATUS = '0' THEN
	    
	        IF LV_LOOP_ERROR_FLAG = 1 THEN
		 
		INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER_EH"(
				   	  	        "CUSTOMER_ID",
								"SUBSCRIBER_NO",
								"BUSINESS_ID",
								"EFFECTIVE_DATE",
								"INIT_ACTIVATION_DATE",
								"PRODUCT_TYPE",
								"SUB_STATUS_RSN_CODE",
								"BILL_CYCLE",
								"BAN_STATUS",
								"STATUS_LAST_DATE",
								"START_SERVICE_DATE",
								"ACCOUNT_TYPE",
								"ACCOUNT_SUB_TYPE",
								"ADR_PROVINCE",
								"DEFAULT_SUB_MARKET",
								"RELATED_MARKET",
								"ADR_POSTAL",
								"FIRST_NAME",
								"LAST_BUSINESS_NAME",
								"PRV_BAN",
								"STATUS_ACTV_CODE",
								"STATUS_ACTV_RSN_CODE",
								"SUB_STATUS_DATE",
								"SUB_STATUS",
								"SUB_STATUS_LAST_ACT",
								"SUB_STS_ISSUE_DATE",
								"TAX_PROVINCE",
								"REFERENCE_EFFECTIVE_DT",
								"REFERENCE_EXPIRY_DT",
								"NEXT_BAN",
								"KUNNR_SID",
								"INSERT_TS",
                                "ERROR_CODE",
					            "ERROR_CREATE_TS"
						       )
				        VALUES (CUR_CONTR."CUSTOMER_ID",
							    CUR_CONTR."SUBSCRIBER_NO",
							    CUR_CONTR."BUSINESS_ID",
						        CUR_CONTR."EFFECTIVE_DATE",
							    CUR_CONTR."INIT_ACTIVATION_DATE",
							    CUR_CONTR."PRODUCT_TYPE",
							    CUR_CONTR."SUB_STATUS_RSN_CODE",
							    CUR_CONTR."BILL_CYCLE",
							    CUR_CONTR."BAN_STATUS",
							    CUR_CONTR."STATUS_LAST_DATE",
							    CUR_CONTR."START_SERVICE_DATE",
							    CUR_CONTR."ACCOUNT_TYPE",
							    CUR_CONTR."ACCOUNT_SUB_TYPE",
							    CUR_CONTR."ADR_PROVINCE",
							    CUR_CONTR."DEFAULT_SUB_MARKET",
							    CUR_CONTR."RELATED_MARKET",
						        CUR_CONTR."ADR_POSTAL", 
							    CUR_CONTR."FIRST_NAME",
								CUR_CONTR."LAST_BUSINESS_NAME",
								CUR_CONTR."PRV_BAN",
								CUR_CONTR."STATUS_ACTV_CODE",
								CUR_CONTR."STATUS_ACTV_RSN_CODE",
								CUR_CONTR."SUB_STATUS_DATE",
								CUR_CONTR."SUB_STATUS",
								CUR_CONTR."SUB_STATUS_LAST_ACT",
								CUR_CONTR."SUB_STS_ISSUE_DATE",
								CUR_CONTR."TAX_PROVINCE",
								CUR_CONTR."REFERENCE_EFFECTIVE_DT",
								CUR_CONTR."REFERENCE_EXPIRY_DT",
								CUR_CONTR."NEXT_BAN",
								CUR_CONTR."KUNNR_SID",
								LV_CUR_UTC,
					            'PREVIOUS VERSION IN ERROR',
					            LV_CUR_UTC);	
ELSE
  
 --   If Record exists in the Target NDB Table
      IF CUR_CONTR.FLAG_EXISTING_RECORD = 'U' THEN
      --	BEGIN AUTONOMOUS TRANSACTION
	    
	--     Update the target NDB table
		   UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER" NDB 
			  SET NDB.REFERENCE_EXPIRY_DT   = CUR_CONTR.EFFECTIVE_DATE_PREV_DAY,
		 		  NDB.MODIFIED_TS           = LV_CUR_UTC 
			WHERE CUR_CONTR."CUSTOMER_ID"   = NDB."CUSTOMER_ID"  
			--  AND CUR_CONTR."SUBSCRIBER_NO" = NDB."SUBSCRIBER_NO"  
			  AND NDB.REFERENCE_EXPIRY_DT   = '99991231';
   	  
			  --    Insert the Incoming new record
				    INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER"(
			   	  		        "CUSTOMER_ID",
								"SUBSCRIBER_NO",
								"BUSINESS_ID",
								"EFFECTIVE_DATE",
								"INIT_ACTIVATION_DATE",
								"PRODUCT_TYPE",
								"SUB_STATUS_RSN_CODE",
								"BILL_CYCLE",
								"BAN_STATUS",
								"STATUS_LAST_DATE",
								"START_SERVICE_DATE",
								"ACCOUNT_TYPE",
								"ACCOUNT_SUB_TYPE",
								"ADR_PROVINCE",
								"DEFAULT_SUB_MARKET",
								"RELATED_MARKET",
								"ADR_POSTAL",
								"FIRST_NAME",
								"LAST_BUSINESS_NAME",
								"PRV_BAN",
								"STATUS_ACTV_CODE",
								"STATUS_ACTV_RSN_CODE",
								"SUB_STATUS_DATE",
								"SUB_STATUS",
								"SUB_STATUS_LAST_ACT",
								"SUB_STS_ISSUE_DATE",
								"TAX_PROVINCE",
								"REFERENCE_EFFECTIVE_DT",
								"REFERENCE_EXPIRY_DT",
								"NEXT_BAN",
								"KUNNR_SID",
								"INSERT_TS")
				        VALUES (CUR_CONTR."CUSTOMER_ID",
							    CUR_CONTR."SUBSCRIBER_NO",
							    CUR_CONTR."BUSINESS_ID",
						        CUR_CONTR."EFFECTIVE_DATE",
							    CUR_CONTR."INIT_ACTIVATION_DATE",
							    CUR_CONTR."PRODUCT_TYPE",
							    CUR_CONTR."SUB_STATUS_RSN_CODE",
							    CUR_CONTR."BILL_CYCLE",
							    CUR_CONTR."BAN_STATUS",
							    CUR_CONTR."STATUS_LAST_DATE",
							    CUR_CONTR."START_SERVICE_DATE",
							    CUR_CONTR."ACCOUNT_TYPE",
							    CUR_CONTR."ACCOUNT_SUB_TYPE",
							    CUR_CONTR."ADR_PROVINCE",
							    CUR_CONTR."DEFAULT_SUB_MARKET",
							    CUR_CONTR."RELATED_MARKET",
						        CUR_CONTR."ADR_POSTAL", 
							    CUR_CONTR."FIRST_NAME",
								CUR_CONTR."LAST_BUSINESS_NAME",
								CUR_CONTR."PRV_BAN",
								CUR_CONTR."STATUS_ACTV_CODE",
								CUR_CONTR."STATUS_ACTV_RSN_CODE",
								CUR_CONTR."SUB_STATUS_DATE",
								CUR_CONTR."SUB_STATUS",
								CUR_CONTR."SUB_STATUS_LAST_ACT",
								CUR_CONTR."SUB_STS_ISSUE_DATE",
								CUR_CONTR."TAX_PROVINCE",
								CUR_CONTR."REFERENCE_EFFECTIVE_DT",
								CUR_CONTR."REFERENCE_EXPIRY_DT",
								CUR_CONTR."NEXT_BAN",
								CUR_CONTR."KUNNR_SID",
							    LV_CUR_UTC);						     
					          
		--	END;		          
		          
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_IFRS_OB_CONTRACT
					   ("CUSTOMER_ID",
					    "EFF_DT")
			    VALUES (CUR_CONTR."CUSTOMER_ID",
			    		CUR_CONTR."REFERENCE_EFFECTIVE_DT");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("CUSTOMER_ID",
					    "SUBSCRIBER_NO",
					    "REFERENCE_EFFECTIVE_DT")
			    VALUES (CUR_CONTR."CUSTOMER_ID",
				 		CUR_CONTR."SUBSCRIBER_NO",
				 		CUR_CONTR."REFERENCE_EFFECTIVE_DT");
                    	
    ELSEIF CUR_CONTR.FLAG_EXISTING_RECORD = 'I' THEN  
    		          
  -- Insert One Bill Contract details for existing Customers(BAN) into the target NDB table 
	 UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER" NDB
		SET  NDB."BILL_CYCLE"           = CUR_CONTR."BILL_CYCLE",
		     NDB."BAN_STATUS"           = CUR_CONTR."BAN_STATUS",
			 NDB."STATUS_LAST_DATE"     = CUR_CONTR."STATUS_LAST_DATE",
			 NDB."START_SERVICE_DATE"   = CUR_CONTR."START_SERVICE_DATE",
			 NDB."ACCOUNT_TYPE"         = CUR_CONTR."ACCOUNT_TYPE",
			 NDB."ACCOUNT_SUB_TYPE"     = CUR_CONTR."ACCOUNT_SUB_TYPE",
			 NDB."ADR_PROVINCE"         = CUR_CONTR."ADR_PROVINCE",
			 NDB."DEFAULT_SUB_MARKET"   = CUR_CONTR."DEFAULT_SUB_MARKET",
			 NDB."FIRST_NAME"           = CUR_CONTR."FIRST_NAME",
			 NDB."LAST_BUSINESS_NAME"   = CUR_CONTR."LAST_BUSINESS_NAME",
			 NDB."ADR_POSTAL"           = CUR_CONTR."ADR_POSTAL",
			 NDB."STATUS_ACTV_CODE"     = CUR_CONTR."STATUS_ACTV_CODE",
			 NDB."STATUS_ACTV_RSN_CODE" = CUR_CONTR."STATUS_ACTV_RSN_CODE",
			 NDB."TAX_PROVINCE"         = CUR_CONTR."TAX_PROVINCE",
			 NDB."INSERT_TS"            = LV_CUR_UTC
	   WHERE NDB."CUSTOMER_ID"          = CUR_CONTR."CUSTOMER_ID"	
	     AND NDB. "SUBSCRIBER_NO"       = CUR_CONTR."SUBSCRIBER_NO"  
		 AND NDB.REFERENCE_EXPIRY_DT   = '99991231';
					             	  
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_IFRS_OB_CONTRACT
					   ("CUSTOMER_ID",
					    "EFF_DT")
			    VALUES (CUR_CONTR."CUSTOMER_ID",
			    		CUR_CONTR."REFERENCE_EFFECTIVE_DT");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("CUSTOMER_ID",
					    "SUBSCRIBER_NO",
					    "REFERENCE_EFFECTIVE_DT")
			    VALUES (CUR_CONTR."CUSTOMER_ID",
				 		CUR_CONTR."SUBSCRIBER_NO",
				 		CUR_CONTR."REFERENCE_EFFECTIVE_DT");
					   	
     END IF;
     
    END IF;
    
   END IF;
   
  END IF;     

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::IFRS_OB_CONTRACT
UPDATE "LAND"."IFRS_R1.LAND::IFRS_OB_CONTRACT" A
  FROM "LAND"."IFRS_R1.LAND::IFRS_OB_CONTRACT" A
 INNER JOIN #UPDATE_IFRS_OB_CONTRACT B
    ON A."CUSTOMER_ID"   = B."CUSTOMER_ID"
   AND A.EFF_DT		     = B."EFF_DT"
   SET NDB_TS            = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER_EH" A
  FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::OB_CUSTOMER_EH" A
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."CUSTOMER_ID"            = B."CUSTOMER_ID"
   AND A."SUBSCRIBER_NO"          = B."SUBSCRIBER_NO"
   AND A."REFERENCE_EFFECTIVE_DT" = B."REFERENCE_EFFECTIVE_DT"
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;