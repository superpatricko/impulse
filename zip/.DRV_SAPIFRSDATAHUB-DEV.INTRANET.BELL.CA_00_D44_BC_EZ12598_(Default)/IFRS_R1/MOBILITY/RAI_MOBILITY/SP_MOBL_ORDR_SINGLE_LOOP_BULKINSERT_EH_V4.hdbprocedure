PROCEDURE "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::SP_MOBL_ORDR_SINGLE_LOOP_BULKINSERT_EH_V4" (IN IP_DATE DATE,
IN IP_BAN NVARCHAR(1000),
OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	AS
BEGIN
----------------------------------------------------------------------------------------------------
-- Procedure Title : IFRS_R1.MOBILITY.RAI_MOBILITY::SP_RAI_MOBL_ORDR
----------------------------------------------------------------------------------------------------
-- Created By      : BC_EY44387(Gunjan Joshi)          Date :10/09/2016
----------------------------------------------------------------------------------------------------
-- Procedure Description : 
--   This Procedure will create the RAI order Items based on
--	 Mobility NDB order data for both term and M2M contract types
--   If the Batch ID is blank in the NDB order, then it will create 
--   RAI item at T0.
--   Based on the Bill Cycle, it will create RAI item for T1... T24. 
--   If the time indicator in NDB is T0, then it will create RAI for T1.
--   If the time indicator in NDB is T1, then it will create RAI for T2.
--  This procedure will cover both order creation and order modifcation
--  for term contract, STNDLN_SELL_PRC and TRANS_PRC will be calcualted for the entire contract period
--  if the contracts gets modified in between the billing cycle, the STNDLN_SELL_PRC and TRANS_PRC for the contract
--  modifiction will be calculated based on the pro-rated.
                           
--    This Procedure has three parameters:
--	   	1. The date parameter 'IP_DATE': Using this date paramter,
--	   	   RAI item	can be created for past records(if it is required).
--	   	2. The error parameter 'IP_ERROR': If this parameter is not null, 
--	   	   the data will be inserted into staging table from Error Table 
--	   	   for re-processing of Errored records. 
--      3. The  OT_STATUS parametere : This parameter give the status of the Procedure whether it is 
--         success or failure

-- ERROR_LOG Table : will be used to trace the system error like transaction failed

-- Track Error/Process Control Table: This table will be used to tract the start and end
--  time of the execution
----------------------------------------------------------------------------------------------------
-- Release :R1/IFRS
----------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
----------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
----------------------------------------------------------------------------------------------------
-- 06/10/2016  | BC_EY94137       | Updated after unit testing
-- 01/08/2017  | BC_EZ18725       | Defect#2812 - EH table update of deleted flag has been 
--                                  modified to be based on REFERENCE_ID 
-- 08/08/2017  | BC_EZ23103       | CR 283 - SP Updated to process the records based on input parameter as IP_BAN 
----------------------------------------------------------------------------------------------------
-- Description Of the changes 
----------------------------------------------------------------------------------------------------
-- Modification Number          :<Assign Some Number> 
-- Description of Changes Made> :<Updated the logic of RAI_TS write back>       
----------------------------------------------------------------------------------------------------


/* Declaring Local Variables */

DECLARE LV_BATCH_ID       		INTEGER;
DECLARE LV_COUNT                INTEGER;
DECLARE LV_ERROR_FLAG 		    NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 				TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE LC_SQL_ERROR            NVARCHAR(40) DEFAULT 'SQL_EXCEPTION : SIBLING ERROR';  
DECLARE LC_SQL_ERROR_TEXT       NVARCHAR(40) DEFAULT 'SQL_EXCEPTION : SECOND LEVEL';                                
DECLARE LC_ERROR_TEXT 		    NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	    NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE i					    INTEGER;
DECLARE IP_BAN_LIST             NVARCHAR(1000);
DECLARE CURRENT_ERROR		    NVARCHAR(100);
DECLARE ERROR_TAB 			    TABLE (ERROR_CODE NVARCHAR(100));
DECLARE RECORD_COUNT		    INTEGER;
DECLARE LC_SET		  			NVARCHAR (1) DEFAULT 'X';
DECLARE QUERY_STATEMENT_MAIN VARCHAR(200000);
DECLARE QUERY_STATEMENT_COND_SSP VARCHAR(200000);
DECLARE QUERY_STATEMENT_COND_TP VARCHAR(200000);
DECLARE QUERY_STATEMENT_MAIN_FINAL VARCHAR(200000);
DECLARE QUERY_STATEMENT_COND_SSP_FINAL VARCHAR(200000);
DECLARE QUERY_STATEMENT_COND_TP_FINAL VARCHAR(200000);
DECLARE CNT INTEGER := 1; 
DECLARE MAX_CNT INTEGER;

--------------------------------------------------------------------------------------------------
-- Temporary table/Variable/Node Declaration to hold data from the final CVs
-------------------------------------------------------------------------------------------------- 
BEGIN AUTONOMOUS TRANSACTION
INSERT INTO "BC_EZ27159"."SP_ORDER_LOAD_TIMES" (SELECT 'START_TIME',CURRENT_TIMESTAMP FROM DUMMY);
END;




	MOBL_ORDR_RAI_ITEM_TEMP1 = 
                   SELECT
                           'SSP' AS "LC_SSP",
                           'PR00' AS "LC_TP",
                           "CC_CATEGORY" AS "CATEGORY",
                           "CC_MAIN_COND_TYPE" AS "MAIN_COND_TYPE",
                           "CC_QUANTITY" AS "QUANTITY",
                           "CC_QUANTITY_UNIT" AS "QUANTITY_UNIT",
                           "CC_BILREL" AS "BILREL",
                           "CC_SRCDOCID_MODIF" AS "SRCDOC_ID_MODIF",     -- Added in Mobility Modification scenarios
                           "CC_SRCDOC_ID" AS "SRCDOC_ID",
                           "CC_SRCDOC_ID_TERM" AS "SRCDOC_ID_TERM",
                           "BAN",
                           "SUBSCR_NO",
                           "STNDLN_SELL_PRC",
                           "TRANS_PRC",
                           "ITEM_TRANS_DT",
                           "ITEM_SUB_ID",
                           "TIME_IND",
                           "RAI_ITEM_ID",
                           "KUNNR_SID",
                           "CONTR_STRT_DT",
                           "TRX_SEQ_NO",
                           "CONTR_TRANS_DT",
                           "ITEM_STRT_DT",
                           "CC_BILL_DAY" AS "BILL_DAY",
                           "CC_REF_ID" AS "REF_ID",
                           "ITEM_ID",
                           "CC_END_DT" AS "END_DT",
                           "CC_START_DT" AS "START_DT",
                           "X_NEGATIVE_ITEM",
                           "BUKRS",
                           "CC_ZZ_SGTXT" AS "ZZ_SGTXT",
                           "KOSTL",
                           "CC_ZZ_BKTXT" AS "ZZ_BKTXT",
                           "CC_ZZ_XBLNR" AS "ZZ_XBLNR",
                           "CC_ZZ_ZUONR" AS "ZZ_ZUONR",
                           "CC_ZZ_LEGACY" AS "ZZ_LEGACY",
                           "CC_ZZ_VBUND" AS "ZZ_VBUND",
                           "CC_ZZ_CATRANSFER" AS "ZZ_CATRANSFER",
                           "CC_ZZ_AUFNR" AS "ZZ_AUFNR",
                           "CC_ZZ_UPPFLAG" AS "ZZ_UPPFLAG",
                           "CC_ZZ_ADJ_RSN_CD" AS "ZZ_ADJ_RSN_CD",
                           "CC_ZZ_ALLOCATE" AS "ZZ_ALLOCATE",
                           "CC_ZZ_BILLER" AS "ZZ_BILLER",
                           "CC_ZZ_BRANDACT" AS "ZZ_BRANDACT",
                           "CC_ZZ_BU_VIEW" AS "ZZ_BU_VIEW",
                           "CC_ZZ_CONVERSION" AS "ZZ_CONVERSION",
                           "CC_ZZ_MOD_TYPE" AS "ZZ_MOD_TYPE",
                           "CC_ZZ_PAOBJNR" AS "ZZ_PAOBJNR",
                           "CC_ZZ_PRE_POST" AS "ZZ_PRE_POST",
                           "CC_ZZ_KOSTL" AS "ZZ_KOSTL",
                           "CC_ZZ_BUKRS" AS "ZZ_BUKRS",
                           "CC_ZZ_ICHKONT" AS "ZZ_ICHKONT",
                           "CC_ZZ_MWSKZ" AS "ZZ_MWSKZ",
                           "CC_ZZ_TXJCD" AS "ZZ_TXJCD",
                           "SRCDOC_COMP",
                           "SRCDOC_LOGSYS",
                           "SRCDOC_TYPE",
                           "REFERENCE_TYPE",
                           "WAERS",
                           "RECEIV_ACCOUNT",
                           "CC_TERM_POB_IND" AS "TERM_POB_IND",
                           "CC_PL_ACCOUNT" AS "PL_ACCOUNT",
                           "CC_VALUE_RELEVANT" AS "VALUE_RELEVANT",
                           "CC_CHARGE_TYPE" AS "ZZ_MATNR",
                           "POB_TYPE" AS "ZZ_MATNR_GRP",
                           "ERROR_STATUS",
                           "CC_ZZ_BLDAT" AS "ZZ_BLDAT",
                           "CC_ZZ_BUDAT" AS "ZZ_BUDAT",
                           --'0' AS "IS_SIBLING_ERROR",
                           "ERROR_CODE",
                           "CC_MOD_IND_ONLY",
                           "CC_NEW_PLAN_REC",
                           "CC_MODIF_IND",
                           "CC_TERM_SUSP_IND",
                           to_decimal(CC_TIMESTAMP,15,0)TIMESTAMP_DT,
                            "IS_30400101",
							 "IS_30400102",
							 "IS_30400201",
							 "IS_30400202",
							 "IS_30400203",
							 "IS_30400303",
							 "IS_30400401",
							 "IS_30400402",
							 "IS_30400406",
							 "IS_30400407",
							 "IS_30400408",
							 "IS_30400409",
							 "IS_30400410",
							 "IS_30400411",
							 "IS_30400412",
							 "IS_30400413",
							 "IS_30400414",
							 "IS_30400415",
							 "IS_30400416",
							 "IS_30400417",
							 "IS_30400418",
							 "IS_30400420",
							 "IS_30400421",
							 "IS_30400422",
							 "IS_30400423",
							 "IS_30400424",
							 "IS_30400425",
							 "IS_30400426",
							 "IS_30400427",
							 "IS_30400501",
							 "IS_30400601",
							 "IS_30400602",
							 "IS_30400603",
							 "IS_30400801",
							 "IS_30400802",
							 "IS_30400803",
							 "IS_30400902",
							 "IS_30400903",
							 "IS_30400904",
							 "IS_30400905",
							 "IS_30400906",
							 "IS_30400907",
							 "IS_30400910",
							 "IS_30400911",
							 "IS_30400901",
							 "IS_30400912",
							 "IS_30400913",
							 "IS_30400914",
							 "IS_30400915",
							 "IS_30400916",
							 "IS_30400918",
							 "IS_30400919",
							 "IS_30401001",
							 "IS_30400908",
							 "IS_30400909",
							 "IS_30400917",
							 "IS_30400204",
							 "IS_30400205",
							 "IS_30400701",
							 "IS_30400702",
							 "IS_30400704",
							 "IS_30400703",
							 "IS_30401002",
							 "IS_30401003",
							 "IS_30401009",
							 "IS_30401008",
							 "IS_30401007",
							 "IS_30401006",
							 "IS_30401005",
							 "IS_30401004",
							 "IS_30401010",
							 "IS_30400804",
							 "IS_30400428",
							 "IS_30401011" 
                     FROM "_SYS_BIC"."IFRS_R1.MOBILITY.RAI_MOBILITY/CA_MOBL_ORDR_RAI_ITEM" 
                            (PLACEHOLDER."$$IP_BILL_DAY$$" => :IP_DATE);
             
                            
BEGIN AUTONOMOUS TRANSACTION
INSERT INTO "BC_EZ27159"."SP_ORDER_LOAD_TIMES" (SELECT 'READ_COMPLETED_FROM VIEW',CURRENT_TIMESTAMP FROM DUMMY);
END;                            
                            
  MOBL_ORDR_RAI_ITEM_TEMP =  SELECT
  									"LC_SSP",
									"LC_TP",
									"CATEGORY",
									"MAIN_COND_TYPE",
									"QUANTITY",
									"QUANTITY_UNIT",
									"BILREL",
									"SRCDOC_ID_MODIF",     -- Added in Mobility Modification scenarios
									"SRCDOC_ID",
									"SRCDOC_ID_TERM",
									"BAN",
									"SUBSCR_NO",
									"STNDLN_SELL_PRC",
									"TRANS_PRC",
									"ITEM_TRANS_DT",
									"ITEM_SUB_ID",
									"TIME_IND",
									"RAI_ITEM_ID",
									"KUNNR_SID",
									"CONTR_STRT_DT",
									"TRX_SEQ_NO",
									"CONTR_TRANS_DT",
									"ITEM_STRT_DT",
									"BILL_DAY",
									A."REF_ID" AS "REF_ID",
									"ITEM_ID",
									"END_DT",
									"START_DT",
									"X_NEGATIVE_ITEM",
									"BUKRS",
									"ZZ_SGTXT",
									"KOSTL",
									"ZZ_BKTXT",
									"ZZ_XBLNR",
									"ZZ_ZUONR",
									"ZZ_LEGACY",
									"ZZ_VBUND",
									"ZZ_CATRANSFER",
									"ZZ_AUFNR",
									"ZZ_UPPFLAG",
									"ZZ_ADJ_RSN_CD",
									"ZZ_ALLOCATE",
									"ZZ_BILLER",
									"ZZ_BRANDACT",
									"ZZ_BU_VIEW",
									"ZZ_CONVERSION",
									"ZZ_MOD_TYPE",
									"ZZ_PAOBJNR",
									"ZZ_PRE_POST",
									"ZZ_KOSTL",
									"ZZ_BUKRS",
									"ZZ_ICHKONT",
									"ZZ_MWSKZ",
									"ZZ_TXJCD",
									"SRCDOC_COMP",
									"SRCDOC_LOGSYS",
									"SRCDOC_TYPE",
									"REFERENCE_TYPE",
									"WAERS",
									"RECEIV_ACCOUNT",
									"TERM_POB_IND",
									"PL_ACCOUNT",
									"VALUE_RELEVANT",
									"ZZ_MATNR",
									"ZZ_MATNR_GRP",
									0 AS "ERROR_STATUS",
									"ZZ_BLDAT",
									"ZZ_BUDAT",
									--CASE WHEN B."REF_ID" IS NULL AND A.ERROR_STATUS = 0 THEN 1 ELSE 0 END AS "IS_SIBLING_ERROR",
									0 AS "IS_SIBLING_ERROR",
									CASE WHEN B."REF_ID" IS NULL AND A.ERROR_STATUS = 0 THEN 'SIBLING_ERROR||' ELSE A."ERROR_CODE" END AS "ERROR_CODE",
									"CC_MOD_IND_ONLY",
									"CC_NEW_PLAN_REC",
									"CC_MODIF_IND",
									"CC_TERM_SUSP_IND",
									TIMESTAMP_DT,
									"IS_30400101",
									 "IS_30400102",
									 "IS_30400201",
									 "IS_30400202",
									 "IS_30400203",
									 "IS_30400303",
									 "IS_30400401",
									 "IS_30400402",
									 "IS_30400406",
									 "IS_30400407",
									 "IS_30400408",
									 "IS_30400409",
									 "IS_30400410",
									 "IS_30400411",
									 "IS_30400412",
									 "IS_30400413",
									 "IS_30400414",
									 "IS_30400415",
									 "IS_30400416",
									 "IS_30400417",
									 "IS_30400418",
									 "IS_30400420",
									 "IS_30400421",
									 "IS_30400422",
									 "IS_30400423",
									 "IS_30400424",
									 "IS_30400425",
									 "IS_30400426",
									 "IS_30400427",
									 "IS_30400501",
									 "IS_30400601",
									 "IS_30400602",
									 "IS_30400603",
									 "IS_30400801",
									 "IS_30400802",
									 "IS_30400803",
									 "IS_30400902",
									 "IS_30400903",
									 "IS_30400904",
									 "IS_30400905",
									 "IS_30400906",
									 "IS_30400907",
									 "IS_30400910",
									 "IS_30400911",
									 "IS_30400901",
									 "IS_30400912",
									 "IS_30400913",
									 "IS_30400914",
									 "IS_30400915",
									 "IS_30400916",
									 "IS_30400918",
									 "IS_30400919",
									 "IS_30401001",
									 "IS_30400908",
									 "IS_30400909",
									 "IS_30400917",
									 "IS_30400204",
									 "IS_30400205",
									 "IS_30400701",
									 "IS_30400702",
									 "IS_30400704",
									 "IS_30400703",
									 "IS_30401002",
									 "IS_30401003",
									 "IS_30401009",
									 "IS_30401008",
									 "IS_30401007",
									 "IS_30401006",
									 "IS_30401005",
									 "IS_30401004",
									 "IS_30401010",
									 "IS_30400804",
									 "IS_30400428",
									 "IS_30401011" 
  							 FROM :MOBL_ORDR_RAI_ITEM_TEMP1 A
  							 LEFT OUTER JOIN 
  							 (SELECT REF_ID FROM :MOBL_ORDR_RAI_ITEM_TEMP1 WHERE ERROR_STATUS = 1 GROUP BY REF_ID) B
  							 ON A.REF_ID = B.REF_ID;	
	   			 
BEGIN AUTONOMOUS TRANSACTION
INSERT INTO "BC_EZ27159"."SP_ORDER_LOAD_TIMES" (SELECT 'SIBLING_ERROR_CALCULATED',CURRENT_TIMESTAMP FROM DUMMY);
END;  	   			 
 --------------------------------------------------------------------------------------------------
-- FILTER BANs as per CR 283
--------------------------------------------------------------------------------------------------
	
IF IP_BAN IS NULL THEN
 	IP_BAN_LIST := '1=1';
ELSE
 IP_BAN_LIST := 'BAN IN('||:IP_BAN||')';
END IF;

MOBL_ORDR_RAI_ITEM = APPLY_FILTER (:MOBL_ORDR_RAI_ITEM_TEMP,:IP_BAN_LIST);	     

	   			 


  BEGIN    
	--------------------------------------------------------------------------------------------------
	-- Cursors Declaration
	-------------------------------------------------------------------------------------------------- 
	  
	DECLARE CURSOR C_RAI_ORDR_PARENT FOR 
	    SELECT "REF_ID" 
	      FROM :MOBL_ORDR_RAI_ITEM 
	     WHERE "CC_MOD_IND_ONLY" IS NULL
	     AND ERROR_STATUS = 0 
		 AND IS_SIBLING_ERROR = 0
    GROUP BY "REF_ID";
    
     DECLARE CURSOR C_LIST_COLS FOR 
	    (SELECT DISTINCT COLUMN_NAME AS COL_NAME
	      FROM VIEW_COLUMNS
	     WHERE VIEW_NAME = 'IFRS_R1.MOBILITY.RAI_MOBILITY/CA_MOBL_ORDR_RAI_ITEM'
	     AND COLUMN_NAME LIKE 'IS_%'
	     UNION ALL
	     SELECT 'IS_SIBLING_ERROR' AS COL_NAME FROM DUMMY);
    
	--------------------------------------------------------------------------------------------------
	-- Batch ID creation for RAI processing
	-------------------------------------------------------------------------------------------------- 			 
	
	SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI_BATCH_ID".NEXTVAL 
	  INTO LV_BATCH_ID 
	  FROM DUMMY;	
		 
	--------------------------------------------------------------------------------------------------
	-- Local Temporary Tables Declaration
	-------------------------------------------------------------------------------------------------- 			 	   	   
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_MOBL_ORDER(
	    BAN    						NVARCHAR(16),
	    SUBSCR_NO 					NVARCHAR(30),
		ITEM_ID                     NVARCHAR(20),
		ITEM_SUB_ID                 NVARCHAR(6),
		SRCDOC_ID                   NVARCHAR(35),
		SRCDOC_ID_TERM				NVARCHAR(35),
		REFERENCE_ID                NVARCHAR(30),
		RAI_ITEM_ID                 NVARCHAR(15),
		BILL_DATE                   DATE,
		TIME_IND                    NVARCHAR(4),
		ITEM_TRANS_DT 				DATE,
		CONTR_TRANS_DT 				DATE,
		TRX_SEQ_NO 					INTEGER,
		MOD_IND                     NVARCHAR(1),
		BATCH_ID                    INTEGER,
		CC_NEW_PLAN_REC				NVARCHAR(1),
	    TERM_POB_IND                NVARCHAR(1));
	    
	-- Defect#2812 Modification
	    
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_MAIN_MOBL (REFERENCE_ID NVARCHAR(30));
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_COND_MOBL (SRCDOC_ID NVARCHAR(35));
	
	
	
	 /************BULK LOAD INTO EH TABLES. THE LOGIC USES A CURSOR LOOP TO PREPARE THE INSERT STATEMENT TO UNPIVOT THE ERROR CODES RATHER THAN CALLING ANOTHER SP IN RECORD BY RECORD LOOP*****/
	 FOR CURR_COL AS C_LIST_COLS DO
IF CNT = 1 THEN

QUERY_STATEMENT_MAIN =     	'SELECT
				    		SRCDOC_COMP,
							SRCDOC_LOGSYS,
							SRCDOC_TYPE,
							SRCDOC_ID_MODIF,
							TIMESTAMP_DT,
							BAN,
							RAI_ITEM_ID,
							REFERENCE_TYPE,
							REF_ID,
							KUNNR_SID,
							BUKRS,
							WAERS,
							QUANTITY,
							QUANTITY_UNIT,
							BILREL,
							START_DT,
							END_DT,
							X_NEGATIVE_ITEM,
							RECEIV_ACCOUNT,
							CONTR_STRT_DT,
							ZZ_ALLOCATE,
							ZZ_AUFNR,
							:LV_BATCH_ID,
							ZZ_BILLER,
							ZZ_BKTXT,
							ZZ_BRANDACT,
							ZZ_BUKRS,
							ZZ_BU_VIEW,
							ZZ_CATRANSFER,
							ZZ_KOSTL,
							ZZ_LEGACY,
							ZZ_MATNR,
							ZZ_MATNR_GRP,
							ZZ_MOD_TYPE,
							ZZ_MWSKZ,
							ZZ_PAOBJNR,
							ZZ_PRE_POST,
							ZZ_SGTXT,
							ZZ_TXJCD,
							ZZ_UPPFLAG,
							ZZ_VBUND,
							ZZ_XBLNR,
							ZZ_ZUONR,
							VALUE_RELEVANT,'''||'' || CURR_COL.COL_NAME || ''||''',' ||
							':LV_CUR_UTC
	   			  FROM :MOBL_ORDR_RAI_ITEM
				  WHERE' || ' ' || CURR_COL.COL_NAME || '=' || '1';
				  

QUERY_STATEMENT_COND_SSP = 'SELECT 
					    	SRCDOC_COMP,
							SRCDOC_LOGSYS,			
							SRCDOC_TYPE,
							SRCDOC_ID_MODIF,
							TIMESTAMP_DT,
							LC_SSP,
							PL_ACCOUNT,
							STNDLN_SELL_PRC,
							WAERS,
							CATEGORY,
							MAIN_COND_TYPE,'''||'' || CURR_COL.COL_NAME || ''||''',' ||
							':LV_CUR_UTC
							 FROM :MOBL_ORDR_RAI_ITEM
				  WHERE' || ' ' || CURR_COL.COL_NAME || '=' || '1';
				  

QUERY_STATEMENT_COND_TP = 'SELECT 
					    	SRCDOC_COMP,
							SRCDOC_LOGSYS,			
							SRCDOC_TYPE,
							SRCDOC_ID_MODIF,
							TIMESTAMP_DT,
							LC_TP,
							PL_ACCOUNT,
							TRANS_PRC,
							WAERS,
							CATEGORY,
							MAIN_COND_TYPE,'''||'' || CURR_COL.COL_NAME || ''||''',' ||
							':LV_CUR_UTC
							 FROM :MOBL_ORDR_RAI_ITEM
				  WHERE' || ' ' || CURR_COL.COL_NAME || '=' || '1';				  
				  	
				  

ELSE 

 QUERY_STATEMENT_MAIN =     	'SELECT
				    		SRCDOC_COMP,
							SRCDOC_LOGSYS,
							SRCDOC_TYPE,
							SRCDOC_ID_MODIF,
							TIMESTAMP_DT,
							BAN,
							RAI_ITEM_ID,
							REFERENCE_TYPE,
							REF_ID,
							KUNNR_SID,
							BUKRS,
							WAERS,
							QUANTITY,
							QUANTITY_UNIT,
							BILREL,
							START_DT,
							END_DT,
							X_NEGATIVE_ITEM,
							RECEIV_ACCOUNT,
							CONTR_STRT_DT,
							ZZ_ALLOCATE,
							ZZ_AUFNR,
							:LV_BATCH_ID,
							ZZ_BILLER,
							ZZ_BKTXT,
							ZZ_BRANDACT,
							ZZ_BUKRS,
							ZZ_BU_VIEW,
							ZZ_CATRANSFER,
							ZZ_KOSTL,
							ZZ_LEGACY,
							ZZ_MATNR,
							ZZ_MATNR_GRP,
							ZZ_MOD_TYPE,
							ZZ_MWSKZ,
							ZZ_PAOBJNR,
							ZZ_PRE_POST,
							ZZ_SGTXT,
							ZZ_TXJCD,
							ZZ_UPPFLAG,
							ZZ_VBUND,
							ZZ_XBLNR,
							ZZ_ZUONR,
							VALUE_RELEVANT,'''||'' || CURR_COL.COL_NAME || ''||''',' ||
							':LV_CUR_UTC
	   			  FROM :MOBL_ORDR_RAI_ITEM
				  WHERE' || ' ' || CURR_COL.COL_NAME || '=' || '1' || ' ' || 'UNION ALL' || ' ' || :QUERY_STATEMENT_MAIN;
				  
QUERY_STATEMENT_COND_SSP = 'SELECT 
					    	SRCDOC_COMP,
							SRCDOC_LOGSYS,			
							SRCDOC_TYPE,
							SRCDOC_ID_MODIF,
							TIMESTAMP_DT,
							LC_SSP,
							PL_ACCOUNT,
							STNDLN_SELL_PRC,
							WAERS,
							CATEGORY,
							MAIN_COND_TYPE,'''||'' || CURR_COL.COL_NAME || ''||''',' ||
							':LV_CUR_UTC
							FROM :MOBL_ORDR_RAI_ITEM
				  WHERE' || ' ' || CURR_COL.COL_NAME || '=' || '1' || ' ' || 'UNION ALL' || ' ' || :QUERY_STATEMENT_COND_SSP;
				  

QUERY_STATEMENT_COND_TP = 'SELECT 
					    	SRCDOC_COMP,
							SRCDOC_LOGSYS,			
							SRCDOC_TYPE,
							SRCDOC_ID_MODIF,
							TIMESTAMP_DT,
							LC_TP,
							PL_ACCOUNT,
							TRANS_PRC,
							WAERS,
							CATEGORY,
							MAIN_COND_TYPE,'''||'' || CURR_COL.COL_NAME || ''||''',' ||
							':LV_CUR_UTC
							 FROM :MOBL_ORDR_RAI_ITEM
				  WHERE' || ' ' || CURR_COL.COL_NAME || '=' || '1' || ' ' || 'UNION ALL' || ' ' || :QUERY_STATEMENT_COND_TP;			  
		END IF;
				  
		CNT = :CNT +1;
		
		END FOR;
	
	QUERY_STATEMENT_MAIN_FINAL = 'INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_EH"(
							"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
				     (' || :QUERY_STATEMENT_MAIN || ')';
				     

QUERY_STATEMENT_COND_SSP_FINAL = 'INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
				     (' || :QUERY_STATEMENT_COND_SSP || ')';	
			
QUERY_STATEMENT_COND_TP_FINAL = 'INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
				     (' ||	QUERY_STATEMENT_COND_TP || ')';		
		
	 
	 BEGIN 
	   
	   EXECUTE IMMEDIATE :QUERY_STATEMENT_MAIN_FINAL;
	   EXECUTE IMMEDIATE :QUERY_STATEMENT_COND_SSP_FINAL;
	   EXECUTE IMMEDIATE :QUERY_STATEMENT_COND_TP_FINAL;
	   
	   COMMIT;
				  
	END;
				
				
		SELECT COUNT(*) 
		  INTO LV_COUNT 
		  FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_EH"
	     WHERE "ZZ_BATCH_ID" = LV_BATCH_ID; 
	     
	     IF LV_COUNT > 0 THEN 
	     	LV_ERROR_FLAG := 'Y'; 
	     ELSE 
	     LV_ERROR_FLAG := 'N';
	     END IF;			
				  
	BEGIN AUTONOMOUS TRANSACTION
INSERT INTO "BC_EZ27159"."SP_ORDER_LOAD_TIMES" (SELECT 'EH_TABLES_LOADED',CURRENT_TIMESTAMP FROM DUMMY);
END;  

	--------------------------------------------------------------------------------------------------
	-- Cursors Loop
	-------------------------------------------------------------------------------------------------- 
	
	
	
	
	FOR CUR_ORDER_PARENT_TEST AS C_RAI_ORDR_PARENT DO
	
	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
	
	--    Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION 
		
	--      Do Nothing. Exception Handled to ensure SP does not get terminated
	  		LV_ERROR_FLAG := 'E';
	  		
	      END;
	 
	--    Insert record into Mobility ORDER main error table
	
	      
		  INSERT INTO   "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_EH"(
						"SRCDOC_COMP",			
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"BILREL",
						"START_DATE",
						"END_DATE",
						"XNEGATIVE_ITEM",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"VALUE_RELEVANT",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
				 (SELECT
						    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID_MODIF",
							"TIMESTAMP_DT",
							"BAN",
							"RAI_ITEM_ID",
							"REFERENCE_TYPE",
							"REF_ID",
							"KUNNR_SID",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DT",
							"END_DT",
							"X_NEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"CONTR_STRT_DT",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							:LV_BATCH_ID,
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPPFLAG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT",
							::SQL_ERROR_CODE,
							::SQL_ERROR_MESSAGE,
							:LV_CUR_UTC
				  FROM :MOBL_ORDR_RAI_ITEM
				  WHERE "REF_ID" = CUR_ORDER_PARENT_TEST."REF_ID");
			 
	--      Insert record into Mobility ORDER Condition error table for STNDLN_SELL_PRC(Standalone Selling Price)           
			INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
			     (SELECT
			    		"SRCDOC_COMP",
						"SRCDOC_LOGSYS",			
						"SRCDOC_TYPE",
						"SRCDOC_ID_MODIF",
						"TIMESTAMP_DT",
						"LC_SSP",
						"PL_ACCOUNT",
						"STNDLN_SELL_PRC",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
					    LV_CUR_UTC 
	   FROM :MOBL_ORDR_RAI_ITEM
				  WHERE "REF_ID" = CUR_ORDER_PARENT_TEST."REF_ID");		
			 
	--  	Insert record into ORDER Condition error table for TRANS_PRC(Transaction Price)
	        INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
			     (SELECT
			    		"SRCDOC_COMP",
						"SRCDOC_LOGSYS",			
						"SRCDOC_TYPE",
						"SRCDOC_ID_MODIF",
						"TIMESTAMP_DT",
						"LC_TP",
						"PL_ACCOUNT",
						"TRANS_PRC",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
					    LV_CUR_UTC
	   FROM :MOBL_ORDR_RAI_ITEM
	   WHERE "REF_ID" = CUR_ORDER_PARENT_TEST."REF_ID");
			 
			LV_ERROR_FLAG := 'Y';
	    
	    END;
	   
	   				    
				    BEGIN AUTONOMOUS TRANSACTION
	   	    
	--  		All valid records are inserted into Order Main TEMP table which
	--  		would finally move  into the Order Main table if all the
	--  		siblings of the corresponding parent are available in the Temp table
				INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_TT"(
							"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT")
					 (SELECT
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID_MODIF",
							"TIMESTAMP_DT",
							"BAN",
							"RAI_ITEM_ID",
							"REFERENCE_TYPE",
							"REF_ID",
							"KUNNR_SID",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DT",
							"END_DT",
							"X_NEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"CONTR_STRT_DT",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							:LV_BATCH_ID,
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPPFLAG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT"
						    FROM :MOBL_ORDR_RAI_ITEM
				  WHERE "REF_ID" = CUR_ORDER_PARENT_TEST."REF_ID" );
				 
	--  		All valid records are inserted ORDER Condition TEMP table for STNDLN_SELL_PRC(Standalone Selling Price)
	--  		which would finally move into the Order Main table if all the
	--  		siblings of the corresponding parent are available in the Temp table          
				INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_TT"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"BATCH_ID")
				     (SELECT 
				    		"SRCDOC_COMP",
							"SRCDOC_LOGSYS",			
							"SRCDOC_TYPE",
							"SRCDOC_ID_MODIF",
							"TIMESTAMP_DT",
							"LC_SSP",
							"PL_ACCOUNT",
							"STNDLN_SELL_PRC",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							:LV_BATCH_ID
						    FROM :MOBL_ORDR_RAI_ITEM
				  WHERE "REF_ID" = CUR_ORDER_PARENT_TEST."REF_ID");		
				 
	--  		All valid records are inserted ORDER Condition TEMP table for TRANS_PRC(Transaction Price)
    --  		which would finally move  into the Order Main table if all the
	--  		siblings of the corresponding parent are available in the Temp table
		        INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_TT"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"BATCH_ID")
				     (SELECT
				    		"SRCDOC_COMP",
							"SRCDOC_LOGSYS",			
							"SRCDOC_TYPE",
							"SRCDOC_ID_MODIF",
							"TIMESTAMP_DT",
							"LC_TP",
							"PL_ACCOUNT",
							"TRANS_PRC",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							:LV_BATCH_ID
						    FROM :MOBL_ORDR_RAI_ITEM
				  WHERE "REF_ID" = CUR_ORDER_PARENT_TEST."REF_ID");
			  
								
			END;
			
					
			END FOR;
			
BEGIN AUTONOMOUS TRANSACTION
INSERT INTO "BC_EZ27159"."SP_ORDER_LOAD_TIMES" (SELECT 'TT_TABLES_LOADED',CURRENT_TIMESTAMP FROM DUMMY);
END;  			
	   
			BEGIN AUTONOMOUS TRANSACTION
			
	--  		All valid records are inserted into Order Main table 
				INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN"(
							"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",							
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT",
							"RAI_TS")
					SELECT 	"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT",
							:LV_CUR_UTC
					   FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_TT"
					  WHERE "ZZ_BATCH_ID" = LV_BATCH_ID;

	--  		All valid records are inserted ORDER Condition table for STNDLN_SELL_PRC(Standalone Selling Price) and TRANS_PRC(Transaction Price)         
				INSERT INTO "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE")
				     SELECT COND."SRCDOC_COMP",
							COND."SRCDOC_LOGSYS",
							COND."SRCDOC_TYPE",
							COND."SRCDOC_ID",
							"TIMESTAMP_UTC",
							COND."CONDITION_TYPE",
							COND."PL_ACCOUNT",			
							COND."BETRW",
							COND."WAERS",
							COND."CATEGORY",
							COND."MAIN_COND_TYPE"
                       FROM	"RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_TT" COND
                              WHERE "BATCH_ID" = LV_BATCH_ID;
		   
		  END; 
	
BEGIN AUTONOMOUS TRANSACTION
INSERT INTO "BC_EZ27159"."SP_ORDER_LOAD_TIMES" (SELECT 'FINAL_TABLE_LOADED',CURRENT_TIMESTAMP FROM DUMMY);
END;  
   
		--  	for Updating RAI control fields in corresponding NDB Tables records
	 		INSERT INTO #UPDATE_MOBL_ORDER(
	   		 			BAN, 
	   		 			SUBSCR_NO,
						ITEM_ID, 
						ITEM_SUB_ID,
						SRCDOC_ID,
						SRCDOC_ID_TERM,
						REFERENCE_ID,
						RAI_ITEM_ID,
						BILL_DATE,
						TIME_IND,
						ITEM_TRANS_DT,
						CONTR_TRANS_DT,
						TRX_SEQ_NO,
						CC_NEW_PLAN_REC,
						BATCH_ID,
						TERM_POB_IND,
						MOD_IND)
				 SELECT A."BAN",
					    A."SUBSCR_NO",
		   		    	A."ITEM_ID",
		   		    	A."ITEM_SUB_ID",
		   		    	A."SRCDOC_ID",
		   		    	A."SRCDOC_ID_TERM",
		   		    	A."REF_ID",
		   		    	A."RAI_ITEM_ID",
		   		    	A."BILL_DAY",
		   		    	A."TIME_IND",
						A.ITEM_TRANS_DT,
						A.CONTR_TRANS_DT,
						A.TRX_SEQ_NO,
		   		    	A."CC_NEW_PLAN_REC",
		   		    	B."ZZ_BATCH_ID",
		   		    	A."TERM_POB_IND",
		   		    	A."CC_MODIF_IND"
		   		    	FROM :MOBL_ORDR_RAI_ITEM A, 
   		    	        (SELECT "REFERENCE_ID","ZZ_BATCH_ID" 
   		    	           FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN"
   		    	          WHERE "ZZ_BATCH_ID" = LV_BATCH_ID
   		    	          GROUP BY "REFERENCE_ID","ZZ_BATCH_ID") B 
		          WHERE A."REF_ID" = B."REFERENCE_ID";
			
			-- Defect#2812 Modification   		        
			   		        
			INSERT INTO	#UPDATE_EH_DELETION_MAIN_MOBL (REFERENCE_ID) 
				 SELECT A."REFERENCE_ID" 
				   FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_EH" A
				   INNER JOIN (SELECT "REFERENCE_ID" 
				   		FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN"
   		    	          WHERE "ZZ_BATCH_ID" = LV_BATCH_ID
   		    	          GROUP BY "REFERENCE_ID") B
   		    	          ON A."REFERENCE_ID" = B."REFERENCE_ID"
   		    	          WHERE (A.DELETED = 0 OR A.DELETED IS NULL);
   		    	       
   		    	    
   		    	          
				   
			   		
			INSERT INTO	#UPDATE_EH_DELETION_COND_MOBL (SRCDOC_ID) 
				 SELECT COND."SRCDOC_ID" 
				   FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_EH" COND
				   INNER JOIN
	                (SELECT DISTINCT A."SRCDOC_ID" 
	                	   FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND" A
	                	   INNER JOIN "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN" B
	                	   ON A."SRCDOC_ID" = B."SRCDOC_ID"
	                	   WHERE --A."ZZ_BATCH_ID" = LV_BATCH_ID AND
	                	    B."ZZ_BATCH_ID" = LV_BATCH_ID) MAIN_COND
						  ON COND."SRCDOC_ID" = MAIN_COND."SRCDOC_ID";
							          												 		   		        		   	   
			
	
	
	
			--  	for Updating RAI control fields in corresponding NDB Tables records
	 		INSERT INTO #UPDATE_MOBL_ORDER(
	   		 			BAN, 
	   		 			SUBSCR_NO,
						ITEM_ID, 
						ITEM_SUB_ID,
						SRCDOC_ID,
						SRCDOC_ID_TERM,
						REFERENCE_ID,
						RAI_ITEM_ID,
						BILL_DATE,
						TIME_IND,
						ITEM_TRANS_DT,
						CONTR_TRANS_DT,
						TRX_SEQ_NO,
						CC_NEW_PLAN_REC,
						BATCH_ID,
						TERM_POB_IND,
						MOD_IND)
				 SELECT A."BAN",
					    A."SUBSCR_NO",
		   		    	A."ITEM_ID",
		   		    	A."ITEM_SUB_ID",
		   		    	A."SRCDOC_ID",
		   		    	A."SRCDOC_ID_TERM",
		   		    	A."REF_ID",
		   		    	A."RAI_ITEM_ID",
		   		    	A."BILL_DAY",
		   		    	A."TIME_IND",
						A.ITEM_TRANS_DT,
						A.CONTR_TRANS_DT,
						A.TRX_SEQ_NO,
		   		    	A."CC_NEW_PLAN_REC",
		   		    	LV_BATCH_ID,
		   		    	A."TERM_POB_IND",
		   		    	A."CC_MODIF_IND"
		   		    	FROM :MOBL_ORDR_RAI_ITEM A
		   		    	WHERE "CC_MOD_IND_ONLY"='Y';
	

							 
		-- Update Order Main Error Table
		-- Defect#2812 Modification 
		
		UPDATE "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_EH" A
		  FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_MAIN_EH" A
		 INNER JOIN #UPDATE_EH_DELETION_MAIN_MOBL B
		    ON A.REFERENCE_ID=B.REFERENCE_ID
		   SET  (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 
		
		-- Update Order Cond Error Table
		
		UPDATE "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_EH" A
		  FROM "RAI_MOBILITY"."IFRS_R1.MOBILITY.RAI_MOBILITY::MOBL_ORDR_COND_EH" A
		 INNER JOIN #UPDATE_EH_DELETION_COND_MOBL B
		    ON A.SRCDOC_ID=B.SRCDOC_ID
		   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 
					
								
			
	--------------------------------------------------------------------------------------------------
	-- Update NDB Tables
	-------------------------------------------------------------------------------------------------- 
			
	--  Updating the Source document Id, Reference Id, Header Id, Time indicator, RAI Item ID,Batch id 
	--  and RAI Timestamp in in NDB order table for Non-Optional POB in case of Term Contracts*/		 
		UPDATE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_POST_ORDER" A
		  FROM "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_POST_ORDER" A
		 INNER JOIN #UPDATE_MOBL_ORDER B
		    ON  A.BAN         	       = B.BAN
			AND A.SUBSCR_NO            = B.SUBSCR_NO
			AND A.ITEM_SUB_ID          = B.ITEM_SUB_ID
			AND A.ITEM_ID              = B.ITEM_ID
			AND A.ITEM_TRANS_DT        = B.ITEM_TRANS_DT
			AND A.CONTR_TRANS_DT       = B.CONTR_TRANS_DT
			AND A.TRX_SEQ_NO    	   = B.TRX_SEQ_NO
		   	SET A."SRCDOC_ID_TERM"     = B."SRCDOC_ID_TERM",
			    A."REFERENCE_ID"       = B."REFERENCE_ID",	
				A.HEADER_ID 	       = B.BAN,
				A.TIME_IND 			   = B.TIME_IND,
				A.RAI_ITEM_ID 		   = B.RAI_ITEM_ID,				
				A.RAI_TS               = LV_CUR_UTC,
				A.BATCH_ID 			   = LV_BATCH_ID,
				A.BILL_DATE 		   = B.BILL_DATE,
				A.MOD_IND 			   = B.MOD_IND
		  WHERE B.TERM_POB_IND         = LC_SET;
			

/* Updating the Source document Id, Reference Id, Header Id, Time indicator, RAI Item ID and
	Batch id in NDB order table for M2M Contracts as well as Optional POB of Term Contracts */

			UPDATE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_POST_ORDER" A
		  FROM "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::MOBL_POST_ORDER" A
		 INNER JOIN #UPDATE_MOBL_ORDER B
		    ON  A.BAN          	    = B.BAN
			AND A.SUBSCR_NO         = B.SUBSCR_NO
			AND A.ITEM_SUB_ID       = B.ITEM_SUB_ID
			AND A.ITEM_ID           = B.ITEM_ID
			AND A.ITEM_TRANS_DT     = B.ITEM_TRANS_DT
			AND A.CONTR_TRANS_DT    = B.CONTR_TRANS_DT
			AND A.TRX_SEQ_NO    	= B.TRX_SEQ_NO
			SET A."SRCDOC_ID"      	= B."SRCDOC_ID",
			    A."REFERENCE_ID"    = B."REFERENCE_ID",	
				A.HEADER_ID 	    = B.BAN,
				A.TIME_IND 			= B.TIME_IND,
				A.RAI_ITEM_ID 		= B.RAI_ITEM_ID,
				A.BATCH_ID 			= LV_BATCH_ID,
				A.RAI_TS            = LV_CUR_UTC,
				A.BILL_DATE 		= B.BILL_DATE,
				A.MOD_IND 			= B.MOD_IND
		  WHERE (B.TERM_POB_IND IS NULL 
		     OR B.CC_NEW_PLAN_REC = LC_SET);	
		     
	--	END;
	
		BEGIN AUTONOMOUS TRANSACTION
INSERT INTO "BC_EZ27159"."SP_ORDER_LOAD_TIMES" (SELECT 'EH_AND_NDB_TABLE_UPDATED',CURRENT_TIMESTAMP FROM DUMMY);
END;  
	
	/*
		IF(LV_ERROR_FLAG = 'Y') THEN		
	
	     OP_STATUS := LC_ERROR_TEXT; 
				
		ELSE IF(LV_ERROR_FLAG = 'E') THEN		
	
	    		OP_STATUS := LC_SQL_ERROR_TEXT; 
				
		ELSE
	
	  	 OP_STATUS := LC_SUCCESS_TEXT; 	
					
			END IF;
			*/
	END;
	

	END;
