PROCEDURE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::SP_PS_JRNL_AGRMT_TRANS"
(  IN IP_EFF_DATE DATE,
 	OUT OP_STATUS NVARCHAR(1000))
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA 
	AS
BEGIN
--------------------------------------------------------------------------------
-- Procedure Title : IFRS_R1.MOBILITY.NDB_MOBILITY::SP_PS_JRNL_AGRMT_TRANS
--
-- Created By      : BC_EZ07674(Suresh Konidala)          Date :28/11/2016
-- 
-- Procedure Description : 
--  1.We will Update and Insert Prepaid Order Information into NDB layer
--
--Project :Bell Canada
-- 
-- Release :R1/IFRS
--------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------
-- 22-12-2016| BC_EZ07674     | Add field OFFER_ID and changed hand set flag logic
-- 25/01/2017  | BC_EZ07674       | Customer History changes and Added cursor logic
-- 10/02/2017  | BC_EZ07674       | Altered logic for HANDSET_FLAG in PPD_BILLING to exclude SIM 
--			   |	              |     charges identified by ’10-S%’ from ‘Accessories’
-- 13/03/2017  |BC_EZ07674        |cycle id added to PPD_BILLING table
--------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------
-- Modification Number          :<Assign Some Number> 
-- Description of Changes Made> :<Updated the logic of NDB_TS write back>       
--------------------------------------------------------------------------------

	DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
	DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
	DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
	DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
	DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
	DECLARE i					INTEGER;
	DECLARE RECORD_COUNT		INTEGER;
	DECLARE CURRENT_ERROR		NVARCHAR(100);


	DECLARE CURSOR CA_PS_JRNL_AGRMT_TRANS FOR
	SELECT
	 "CUSTOMER_ID",
	 "PRODUCT_ID",
	 "ORDER_ID",
	 "INVOICE_NO",
	 "DOCUMENT_HEADER_TEXT",
	 "DOCUMENT_DATE",
	 "CURRENCY",
	 "COMPANY_CODE",
	 "POSTING_DATE",
	 "FISCAL_YEAR",
	 "POSTING_PERIOD",
	 "AMOUNT",
	 "TAX_JURIS_CODE",
	 "COST_CENTER",
	 "ALLOCATION",
	 "TEXT_LINE_ITEM",
	 "TRADING_PARTNER",
	 "SERVICE_PROVIDER",
	 "REFERENCE_FIELD",
	 "LEGAL_ENTITY",
	 "SUB_MARKET",
	 "SERVICE_TYPE",
	 "START_DATE",
	 "END_DATE",
	 "GL_ACCOUNT",
	 "CREDIT_DEBIT_FLG",
	 "CYCL_ID",
	 "CROSS_REFERENCE_ORDER_ID",
	 "TRANSACTION_ID",
	 "MDN",
	 "TRANSACTION_DATE",
	 "ADJUSTMENT_CODE",
	 "ORDER_TYPE",
	 "ANNIVERSARY_DATE",
	 "REGION",
	 "KUNNR_SID",
	 "SAP_ARTICLE_NO",
	 "HANDSET_SRP_PRICE",	
	 "ERROR_CODE",
	 "ERROR_STATUS",
	 "AWARD_CREDIT",
	 "ACCOUNT_BALANCE",
	 "TERM_INDICATOR",
	 "BRAND",
	 "SOURCE_IDENTIFIER",
	 "RECRNG_CHRG_FROM_DT",
	 "RECRNG_CHRG_TO_DT",
	 "OFFER_ID",
	 "HANDSET_FLAG" ,
	 "TERM",
	 "MODIFIED_TS",
	 "NETWORK_TY",
	 "PRT_ELMNT",
     "IMSI",
     "IMEI"
	 FROM "_SYS_BIC"."IFRS_R1.MOBILITY.NDB_MOBILITY/CA_PS_JRNL_AGRMT_TRANS"
	(PLACEHOLDER."$$IP_EFF_DATE$$"=> :IP_EFF_DATE)
	ORDER BY "POSTING_DATE", "CYCL_ID";
	
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
--------------------------------------------------------------------------------------------------	
 
CREATE LOCAL TEMPORARY TABLE #UPDATE_PS_JRNL_DATA(CUSTOMER_ID NVARCHAR(30), INVOICE_NO NVARCHAR(22), POSTING_DATE DATE, REFERENCE_FIELD NVARCHAR(16),PRODUCT_ID NVARCHAR(18), CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_PS_AGRMT(CUSTOMER_ID NVARCHAR(30), PRODUCT_ID NVARCHAR(20), CYCL_ID NVARCHAR(3) );
CREATE LOCAL TEMPORARY TABLE #UPDATE_PS_TRANS_DATA(TRANSACTION_ID NVARCHAR(50), CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION ("CUSTOMER_ID" NVARCHAR(30),"INVOICE_NO" NVARCHAR(44),"PRODUCT_ID" NVARCHAR(18),"POSTING_DATE" DATE,"REFERENCE_FIELD" NVARCHAR(44));

--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 	

	FOR CUR_JRNL AS CA_PS_JRNL_AGRMT_TRANS DO
		
		-- Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION
			-- Define Exit Handler
			DECLARE EXIT HANDLER FOR SQLEXCEPTION 
			BEGIN AUTONOMOUS TRANSACTION 
			END;
				-- ADD ERROR TABLE INSERT HERE
				/* Insert Order Details into NDB PPD Billing Table */
				INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_BILLING_EH"
				(
					"SOURCE_IDENTIFIER"
					,"CUSTOMER_ID"
					,"GL_ACCOUNT"
					,"CREDIT_DEBIT_FLG"
					,"PRODUCT_ID"
					,"SERVICE_TYPE"
					,"START_DATE"
					,"END_DATE"
					,"TERM"
					,"TERM_INDICATOR"
					,"ORDER_ID"
					,"INVOICE_NO"
					,"DOCUMENT_HEADER_TEXT"
					,"DOCUMENT_DATE"
					,"CURRENCY"
					,"COMPANY_CODE"
					,"POSTING_DATE"
					,"FISCAL_YEAR"
					,"POSTING_PERIOD"
					,"AMOUNT"
					,"TAX_JURIS_CODE"
					,"COST_CENTER"
					,"ALLOCATION"
					,"TEXT_LINE_ITEM"
					,"TRADING_PARTNER"
					,"SERVICE_PROVIDER"
					,"REFERENCE_FIELD"
					,"LEGAL_ENTITY"
					,"SUB_MARKET"
					,"MDN"
					,"TRANSACTION_ID"
					,"TRANSACTION_DATE"
					,"CROSS_REFERENCE_ORDER_ID"
					,"ORDER_TYPE"
					,"ADJUSTMENT_CODE"
					,"AWARD_CREDIT"
					,"ANNIVERSARY_DATE"
					,"REGION"
					,"ACCOUNT_BALANCE"
					,"BRAND"
					,"RECRNG_CHRG_FROM_DT"
					,"RECRNG_CHRG_TO_DT"
					,"HANDSET_FLAG"
					,"KUNNR_SID"
					,"NETWORK_TY"
					,"PRT_ELMNT"
					,"IMSI"
					,"IMEI"
					,"INSERT_TS"
					,"MODIFIED_TS"
					,"OFFER_ID"
					,CYCL_ID
					,"ERROR_CODE"
					,"TECHNICAL_MESSAGE"
					,"ERROR_CREATE_TS"
				
				) VALUES
				(
						CUR_JRNL."SOURCE_IDENTIFIER"
						,CUR_JRNL."CUSTOMER_ID"
						,CUR_JRNL."GL_ACCOUNT"
						,CUR_JRNL."CREDIT_DEBIT_FLG"
						,CUR_JRNL."PRODUCT_ID"
						,CUR_JRNL."SERVICE_TYPE"
						,CUR_JRNL."START_DATE"
						,CUR_JRNL."END_DATE"
						,CUR_JRNL."TERM"
						,CUR_JRNL."TERM_INDICATOR"
						,CUR_JRNL."ORDER_ID"
						,CUR_JRNL."INVOICE_NO"
						,CUR_JRNL."DOCUMENT_HEADER_TEXT"
						,CUR_JRNL."DOCUMENT_DATE"
						,CUR_JRNL."CURRENCY"
						,CUR_JRNL."COMPANY_CODE"
						,CUR_JRNL."POSTING_DATE"
						,CUR_JRNL."FISCAL_YEAR"
						,CUR_JRNL."POSTING_PERIOD"
						,CUR_JRNL."AMOUNT"
						,CUR_JRNL."TAX_JURIS_CODE"
						,CUR_JRNL."COST_CENTER"
						,CUR_JRNL."ALLOCATION"
						,CUR_JRNL."TEXT_LINE_ITEM"
						,CUR_JRNL."TRADING_PARTNER"
						,CUR_JRNL."SERVICE_PROVIDER"
						,CUR_JRNL."REFERENCE_FIELD"
						,CUR_JRNL."LEGAL_ENTITY"
						,CUR_JRNL."SUB_MARKET"
						,CUR_JRNL."MDN"
						,CUR_JRNL."TRANSACTION_ID"
						,CUR_JRNL."TRANSACTION_DATE"
						,CUR_JRNL."CROSS_REFERENCE_ORDER_ID"
						,CUR_JRNL."ORDER_TYPE"
						,CUR_JRNL."ADJUSTMENT_CODE"
						,CUR_JRNL."AWARD_CREDIT"
						,CUR_JRNL."ANNIVERSARY_DATE"
						,CUR_JRNL."REGION"
						,CUR_JRNL."ACCOUNT_BALANCE"
						,CUR_JRNL."BRAND"
						,CUR_JRNL."RECRNG_CHRG_FROM_DT"
						,CUR_JRNL."RECRNG_CHRG_TO_DT"
						,CUR_JRNL."HANDSET_FLAG"
						,CUR_JRNL."KUNNR_SID"
						,CUR_JRNL."NETWORK_TY"
						,CUR_JRNL."PRT_ELMNT"
						,CUR_JRNL."IMSI"
						,CUR_JRNL."IMEI"
						,LV_CUR_UTC
						,CUR_JRNL."MODIFIED_TS"
						,CUR_JRNL."OFFER_ID"
						,CUR_JRNL."CYCL_ID"
						,::SQL_ERROR_CODE
						,::SQL_ERROR_MESSAGE
			  			,LV_CUR_UTC);
				LV_ERROR_FLAG := 'Y';
				--END for AUTONOMOS
		END;
		
		--Check the Error Status of the Record. If Record is with Error, then send to Error Table
			IF CUR_JRNL.ERROR_STATUS = 1 THEN
			--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		    	CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_JRNL."ERROR_CODE", ERROR_TAB, RECORD_COUNT);
		    	FOR i IN 1 .. :RECORD_COUNT DO
		    		CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
		    		/* Insert Order Details into NDB PPD Billing Table */
				INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_BILLING_EH"
				(
					"SOURCE_IDENTIFIER"
					,"CUSTOMER_ID"
					,"GL_ACCOUNT"
					,"CREDIT_DEBIT_FLG"
					,"PRODUCT_ID"
					,"SERVICE_TYPE"
					,"START_DATE"
					,"END_DATE"
					,"TERM"
					,"TERM_INDICATOR"
					,"ORDER_ID"
					,"INVOICE_NO"
					,"DOCUMENT_HEADER_TEXT"
					,"DOCUMENT_DATE"
					,"CURRENCY"
					,"COMPANY_CODE"
					,"POSTING_DATE"
					,"FISCAL_YEAR"
					,"POSTING_PERIOD"
					,"AMOUNT"
					,"TAX_JURIS_CODE"
					,"COST_CENTER"
					,"ALLOCATION"
					,"TEXT_LINE_ITEM"
					,"TRADING_PARTNER"
					,"SERVICE_PROVIDER"
					,"REFERENCE_FIELD"
					,"LEGAL_ENTITY"
					,"SUB_MARKET"
					,"MDN"
					,"TRANSACTION_ID"
					,"TRANSACTION_DATE"
					,"CROSS_REFERENCE_ORDER_ID"
					,"ORDER_TYPE"
					,"ADJUSTMENT_CODE"
					,"AWARD_CREDIT"
					,"ANNIVERSARY_DATE"
					,"REGION"
					,"ACCOUNT_BALANCE"
					,"BRAND"
					,"RECRNG_CHRG_FROM_DT"
					,"RECRNG_CHRG_TO_DT"
					,"HANDSET_FLAG"
					,"KUNNR_SID"
					,"NETWORK_TY"
					,"PRT_ELMNT"
					,"IMSI"
					,"IMEI"
					,"INSERT_TS"
					,"MODIFIED_TS"
					,"OFFER_ID"
					,CYCL_ID
					,"ERROR_CODE"
					,"TECHNICAL_MESSAGE"
					,"ERROR_CREATE_TS"
					
				) VALUES
				(
						CUR_JRNL."SOURCE_IDENTIFIER"
						,CUR_JRNL."CUSTOMER_ID"
						,CUR_JRNL."GL_ACCOUNT"
						,CUR_JRNL."CREDIT_DEBIT_FLG"
						,CUR_JRNL."PRODUCT_ID"
						,CUR_JRNL."SERVICE_TYPE"
						,CUR_JRNL."START_DATE"
						,CUR_JRNL."END_DATE"
						,CUR_JRNL."TERM"
						,CUR_JRNL."TERM_INDICATOR"
						,CUR_JRNL."ORDER_ID"
						,CUR_JRNL."INVOICE_NO"
						,CUR_JRNL."DOCUMENT_HEADER_TEXT"
						,CUR_JRNL."DOCUMENT_DATE"
						,CUR_JRNL."CURRENCY"
						,CUR_JRNL."COMPANY_CODE"
						,CUR_JRNL."POSTING_DATE"
						,CUR_JRNL."FISCAL_YEAR"
						,CUR_JRNL."POSTING_PERIOD"
						,CUR_JRNL."AMOUNT"
						,CUR_JRNL."TAX_JURIS_CODE"
						,CUR_JRNL."COST_CENTER"
						,CUR_JRNL."ALLOCATION"
						,CUR_JRNL."TEXT_LINE_ITEM"
						,CUR_JRNL."TRADING_PARTNER"
						,CUR_JRNL."SERVICE_PROVIDER"
						,CUR_JRNL."REFERENCE_FIELD"
						,CUR_JRNL."LEGAL_ENTITY"
						,CUR_JRNL."SUB_MARKET"
						,CUR_JRNL."MDN"
						,CUR_JRNL."TRANSACTION_ID"
						,CUR_JRNL."TRANSACTION_DATE"
						,CUR_JRNL."CROSS_REFERENCE_ORDER_ID"
						,CUR_JRNL."ORDER_TYPE"
						,CUR_JRNL."ADJUSTMENT_CODE"
						,CUR_JRNL."AWARD_CREDIT"
						,CUR_JRNL."ANNIVERSARY_DATE"
						,CUR_JRNL."REGION"
						,CUR_JRNL."ACCOUNT_BALANCE"
						,CUR_JRNL."BRAND"
						,CUR_JRNL."RECRNG_CHRG_FROM_DT"
						,CUR_JRNL."RECRNG_CHRG_TO_DT"
						,CUR_JRNL."HANDSET_FLAG"
						,CUR_JRNL."KUNNR_SID"
						,CUR_JRNL."NETWORK_TY"
						,CUR_JRNL."PRT_ELMNT"
						,CUR_JRNL."IMSI"
						,CUR_JRNL."IMEI"
						,LV_CUR_UTC
						,CUR_JRNL."MODIFIED_TS"
						,CUR_JRNL."OFFER_ID"
						,CUR_JRNL."CYCL_ID"
						,:CURRENT_ERROR
						,NULL
			  			,LV_CUR_UTC);
		    		
		    		-- ADD ERROR TABLE INSERT HERE
		    		
		    		
		    		LV_ERROR_FLAG := 'Y';
		    	END FOR;
		    ELSE
		    	
		    	/* Insert Order Details into NDB PPD Billing Table */
				INSERT INTO "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_BILLING"
				(
					"SOURCE_IDENTIFIER"
					,"CUSTOMER_ID"
					,"GL_ACCOUNT"
					,"CREDIT_DEBIT_FLG"
					,"PRODUCT_ID"
					,"SERVICE_TYPE"
					,"START_DATE"
					,"END_DATE"
					,"TERM"
					,"TERM_INDICATOR"
					,"ORDER_ID"
					,"INVOICE_NO"
					,"DOCUMENT_HEADER_TEXT"
					,"DOCUMENT_DATE"
					,"CURRENCY"
					,"COMPANY_CODE"
					,"POSTING_DATE"
					,"FISCAL_YEAR"
					,"POSTING_PERIOD"
					,"AMOUNT"
					,"TAX_JURIS_CODE"
					,"COST_CENTER"
					,"ALLOCATION"
					,"TEXT_LINE_ITEM"
					,"TRADING_PARTNER"
					,"SERVICE_PROVIDER"
					,"REFERENCE_FIELD"
					,"LEGAL_ENTITY"
					,"SUB_MARKET"
					,"MDN"
					,"TRANSACTION_ID"
					,"TRANSACTION_DATE"
					,"CROSS_REFERENCE_ORDER_ID"
					,"ORDER_TYPE"
					,"ADJUSTMENT_CODE"
					,"AWARD_CREDIT"
					,"ANNIVERSARY_DATE"
					,"REGION"
					,"ACCOUNT_BALANCE"
					,"BRAND"
					,"RECRNG_CHRG_FROM_DT"
					,"RECRNG_CHRG_TO_DT"
					,"HANDSET_FLAG"
					,"KUNNR_SID"
					,"NETWORK_TY"
					,"PRT_ELMNT"
					,"IMSI"
					,"IMEI"
					,"INSERT_TS"
					,"MODIFIED_TS"
					,"OFFER_ID"
					,CYCL_ID
					
				) VALUES
				(
						CUR_JRNL."SOURCE_IDENTIFIER"
						,CUR_JRNL."CUSTOMER_ID"
						,CUR_JRNL."GL_ACCOUNT"
						,CUR_JRNL."CREDIT_DEBIT_FLG"
						,CUR_JRNL."PRODUCT_ID"
						,CUR_JRNL."SERVICE_TYPE"
						,CUR_JRNL."START_DATE"
						,CUR_JRNL."END_DATE"
						,CUR_JRNL."TERM"
						,CUR_JRNL."TERM_INDICATOR"
						,CUR_JRNL."ORDER_ID"
						,CUR_JRNL."INVOICE_NO"
						,CUR_JRNL."DOCUMENT_HEADER_TEXT"
						,CUR_JRNL."DOCUMENT_DATE"
						,CUR_JRNL."CURRENCY"
						,CUR_JRNL."COMPANY_CODE"
						,CUR_JRNL."POSTING_DATE"
						,CUR_JRNL."FISCAL_YEAR"
						,CUR_JRNL."POSTING_PERIOD"
						,CUR_JRNL."AMOUNT"
						,CUR_JRNL."TAX_JURIS_CODE"
						,CUR_JRNL."COST_CENTER"
						,CUR_JRNL."ALLOCATION"
						,CUR_JRNL."TEXT_LINE_ITEM"
						,CUR_JRNL."TRADING_PARTNER"
						,CUR_JRNL."SERVICE_PROVIDER"
						,CUR_JRNL."REFERENCE_FIELD"
						,CUR_JRNL."LEGAL_ENTITY"
						,CUR_JRNL."SUB_MARKET"
						,CUR_JRNL."MDN"
						,CUR_JRNL."TRANSACTION_ID"
						,CUR_JRNL."TRANSACTION_DATE"
						,CUR_JRNL."CROSS_REFERENCE_ORDER_ID"
						,CUR_JRNL."ORDER_TYPE"
						,CUR_JRNL."ADJUSTMENT_CODE"
						,CUR_JRNL."AWARD_CREDIT"
						,CUR_JRNL."ANNIVERSARY_DATE"
						,CUR_JRNL."REGION"
						,CUR_JRNL."ACCOUNT_BALANCE"
						,CUR_JRNL."BRAND"
						,CUR_JRNL."RECRNG_CHRG_FROM_DT"
						,CUR_JRNL."RECRNG_CHRG_TO_DT"
						,CUR_JRNL."HANDSET_FLAG"
						,CUR_JRNL."KUNNR_SID"
						,CUR_JRNL."NETWORK_TY"
						,CUR_JRNL."PRT_ELMNT"
						,CUR_JRNL."IMSI"
						,CUR_JRNL."IMEI"
						,LV_CUR_UTC
						,CUR_JRNL."MODIFIED_TS"
						,CUR_JRNL."OFFER_ID"
						,CUR_JRNL."CYCL_ID");
						
     				-- Insert PK of successfully processed Records into Local Temp Tables 
					-- For Updating NDB_TS in corresponding Landing Tables records
		    
		    INSERT INTO #UPDATE_PS_JRNL_DATA 
									(CUSTOMER_ID,
								 	INVOICE_NO,
								 	POSTING_DATE,
								 	REFERENCE_FIELD,
								 	PRODUCT_ID,
								 	CYCL_ID) 
									VALUES (
									CUR_JRNL."CUSTOMER_ID",
									CUR_JRNL."INVOICE_NO",
									CUR_JRNL."POSTING_DATE",
									CUR_JRNL."REFERENCE_FIELD",
									CUR_JRNL."PRODUCT_ID",
									CUR_JRNL."CYCL_ID");
		    
		    INSERT INTO #UPDATE_PS_AGRMT 
									(CUSTOMER_ID,
								 	PRODUCT_ID,
								 	CYCL_ID) 
									VALUES (
									CUR_JRNL."CUSTOMER_ID",
									CUR_JRNL."PRODUCT_ID",
									CUR_JRNL."CYCL_ID");
			INSERT INTO #UPDATE_PS_TRANS_DATA 
									(TRANSACTION_ID,
								 	CYCL_ID) 
									VALUES (
									CUR_JRNL."TRANSACTION_ID",
									CUR_JRNL."CYCL_ID");	
									
				--         Add record to Delete the error from the error table if it exists
					INSERT INTO #UPDATE_EH_DELETION ("CUSTOMER_ID", "INVOICE_NO", "PRODUCT_ID","POSTING_DATE","REFERENCE_FIELD") 
			               VALUES (CUR_JRNL."CUSTOMER_ID", CUR_JRNL."INVOICE_NO", CUR_JRNL."PRODUCT_ID",CUR_JRNL."POSTING_DATE",CUR_JRNL."REFERENCE_FIELD"); 
								

		    END IF;	
	END FOR;

		
		UPDATE "LAND"."IFRS_R1.LAND::PS_JRNL_DATA" A
		FROM "LAND"."IFRS_R1.LAND::PS_JRNL_DATA" A
		INNER JOIN #UPDATE_PS_JRNL_DATA B
		ON A."CUST_ID" = B."CUSTOMER_ID"
		AND A."INVC_NO" = B."INVOICE_NO"  
		AND A."POST_DT" = B."POSTING_DATE"
		AND A."REF_FLD" = B."REFERENCE_FIELD"
		AND A."PROD_ID" = B."PRODUCT_ID"
		AND A."CYCL_ID" = B."CYCL_ID"	
		SET A.NDB_TS=LV_CUR_UTC 
		WHERE A.NDB_TS IS NULL;    	

		
		--Update NDB_TS with current_timestamp for the records that has been processed for PS_AGRMT table  
		UPDATE "LAND"."IFRS_R1.LAND::PS_AGRMT" A
		FROM "LAND"."IFRS_R1.LAND::PS_AGRMT" A
		INNER JOIN #UPDATE_PS_AGRMT B
		ON A."CUST_ID" = B."CUSTOMER_ID"
		AND A."PROD" = B."PRODUCT_ID"
		AND A."CYCL_ID" = B."CYCL_ID"
		SET NDB_TS=LV_CUR_UTC 
		WHERE NDB_TS IS NULL;
		
		--Update NDB_TS with current_timestamp for the records that has been processed for PS_TRANS_DATA table   
		UPDATE "LAND"."IFRS_R1.LAND::PS_TRANS_DATA" A
		FROM "LAND"."IFRS_R1.LAND::PS_TRANS_DATA" A
		INNER JOIN #UPDATE_PS_TRANS_DATA B		
		ON A."TRANSID" = B."TRANSACTION_ID"
		AND A."CYCL_ID" = B."CYCL_ID"
		SET NDB_TS=LV_CUR_UTC 
		WHERE NDB_TS IS NULL;
		
--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------
UPDATE "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_BILLING_EH" A
FROM "NDB_MOBILITY"."IFRS_R1.MOBILITY.NDB_MOBILITY::PPD_BILLING_EH" A 
INNER JOIN #UPDATE_EH_DELETION B
ON A."CUSTOMER_ID" = B."CUSTOMER_ID"
AND A."INVOICE_NO" = B."INVOICE_NO"
AND A."PRODUCT_ID"    = B."PRODUCT_ID"
AND A."POSTING_DATE" = B."POSTING_DATE"
AND A."REFERENCE_FIELD"    = B."REFERENCE_FIELD"
SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);		
		
		
--------------------------------------------------------------------------------------------------
	-- Set Overall Status
-------------------------------------------------------------------------------------------------- 
	--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
	--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN
    	OP_STATUS := LC_ERROR_TEXT; 			
    ELSE
  		OP_STATUS := LC_SUCCESS_TEXT;				
	END IF;
	
END;