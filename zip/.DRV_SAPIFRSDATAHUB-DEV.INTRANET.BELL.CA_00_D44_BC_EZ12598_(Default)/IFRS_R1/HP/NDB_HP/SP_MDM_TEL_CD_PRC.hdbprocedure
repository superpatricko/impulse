PROCEDURE "NDB_HP"."IFRS_R1.HP.NDB_HP::SP_MDM_TEL_CD_PRC"
(IN IP_CYCL_ID NVARCHAR(3),
OUT OP_STATUS  NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_MDM_TEL_CD_PRC
-- Created By      : BC_EZ08929 (Shivam)       
-- Create Date     : 03-16-2017
-- Description     : Data Inserted using Calculation View - CA_MDM_TEL_CD_PRC
--                   To NDB Table - HP_MDM_CD_PRC Using this stored procedure.
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE LV_PREV_DAY         DATE;
  
--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------
DECLARE CURSOR C_PRC_CD FOR 
       SELECT    "CD_NM",
			     "PROV",
			     "RT_BND",
			     "REF_EFFC_DATE",
			     "REF_EXP_DATE",
			     "CD_ENG_DESC",
			     "CD_FR_DESC",
			     "CD_TY",
			     "PRC",
			     "CYCL_ID",
			     "FLAG_EXISTING_RECORD",
			     "SEQ_ID",
			     "TEL_CD_PRC_PRIMARY_KEY",
			     "NDB_REF_EFFC_DATE"
			     FROM "_SYS_BIC"."IFRS_R1.HP.NDB_HP/CA_MDM_TEL_CD_PRC"
                 (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID)
                 ORDER BY CYCL_ID, SEQ_ID;

                   
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_MDM_TEL_CD_PRC (TEL_CD_PRC_PRIMARY_KEY NVARCHAR(350));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (CD_NM NVARCHAR(40), PROV NVARCHAR(50));
        	  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 

FOR CUR_PRC_CD AS C_PRC_CD DO

--  Define Exit Handler
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN AUTONOMOUS TRANSACTION 
	
--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 
	
      -- Do Nothing. Exception Handled to ensure SP does not get terminated
	
	  END;
			
   -- Insert record into error table
   	  INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_MDM_CD_PRC_EH"(
			   	  "CD_NM",
				  "PROV",
				  "RT_BND",
				  "REF_EFFC_DATE",
				  "REF_EXP_DATE",
				  "CD_ENG_DESC",
				  "CD_FR_DESC",
				  "CD_TY",
				  "PRC",
			      "ERROR_CODE",
				  "TECHNICAL_MESSAGE",
			      "ERROR_CREATE_TS") 
		   VALUES (CUR_PRC_CD."CD_NM",
			       CUR_PRC_CD."PROV",
			       CUR_PRC_CD."RT_BND",
			       CUR_PRC_CD."REF_EFFC_DATE",
			       CUR_PRC_CD."REF_EXP_DATE",
			       CUR_PRC_CD."CD_ENG_DESC",
			       CUR_PRC_CD."CD_FR_DESC",
			       CUR_PRC_CD."CD_TY",
			       CUR_PRC_CD."PRC",
				   ::SQL_ERROR_CODE,
		           ::SQL_ERROR_MESSAGE,
		           LV_CUR_UTC);   
   
	  	LV_ERROR_FLAG := 'Y';

	END;	  

--  If Record exists in the Target NDB Table
    IF CUR_PRC_CD.FLAG_EXISTING_RECORD = 'U' THEN  
    
    BEGIN AUTONOMOUS TRANSACTION

--    Update the target NDB table
      LV_PREV_DAY := ADD_DAYS(CUR_PRC_CD."REF_EFFC_DATE", -1);
      
--    Update Expiry Date of Current NDB Record to New Record.Effective Date - 1
      UPDATE "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_MDM_CD_PRC" NDB
         SET "REF_EXP_DATE"       = LV_PREV_DAY,
             "MODIFIED_TS"        = LV_CUR_UTC
       WHERE NDB."CD_NM"          = CUR_PRC_CD."CD_NM"
         AND NDB."PROV"           = CUR_PRC_CD."PROV"
         AND NDB."REF_EXP_DATE"   = TO_DATE('99991231','YYYYMMDD');

--    Insert the Incoming new record
   	  INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_MDM_CD_PRC"(
		   	      "CD_NM",
			      "PROV",
			      "RT_BND",
			      "REF_EFFC_DATE",
			      "REF_EXP_DATE",
			      "CD_ENG_DESC",
			      "CD_FR_DESC",
			      "CD_TY",
			      "PRC",
			      "INSERT_TS")
		   VALUES (CUR_PRC_CD."CD_NM",
			       CUR_PRC_CD."PROV",
			       CUR_PRC_CD."RT_BND",
			       CUR_PRC_CD."REF_EFFC_DATE",
			       CUR_PRC_CD."REF_EXP_DATE",
			       CUR_PRC_CD."CD_ENG_DESC",
			       CUR_PRC_CD."CD_FR_DESC",
			       CUR_PRC_CD."CD_TY",
			       CUR_PRC_CD."PRC",
			       LV_CUR_UTC);  
	 END ;
            
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_MDM_TEL_CD_PRC
		   			   (TEL_CD_PRC_PRIMARY_KEY) 
		   		VALUES (CUR_PRC_CD."TEL_CD_PRC_PRIMARY_KEY");
		   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
		   			   (CD_NM, 
		   				PROV) 
		   		VALUES (CUR_PRC_CD."CD_NM", 
		   			    CUR_PRC_CD."PROV");           
                    	
    ELSE
    BEGIN AUTONOMOUS TRANSACTION
--    Insert Records into the target NDB table     
   	  INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_MDM_CD_PRC"(
		   	      "CD_NM",
			      "PROV",
			      "RT_BND",
			      "REF_EFFC_DATE",
			      "REF_EXP_DATE",
			      "CD_ENG_DESC",
			      "CD_FR_DESC",
			      "CD_TY",
			      "PRC",
			      "INSERT_TS") 
		   VALUES (CUR_PRC_CD."CD_NM",
			       CUR_PRC_CD."PROV",
			       CUR_PRC_CD."RT_BND",
			       CUR_PRC_CD."NDB_REF_EFFC_DATE",--'19000101'
			       CUR_PRC_CD."REF_EXP_DATE",
			       CUR_PRC_CD."CD_ENG_DESC",
			       CUR_PRC_CD."CD_FR_DESC",
			       CUR_PRC_CD."CD_TY",
			       CUR_PRC_CD."PRC",
			       LV_CUR_UTC);    
		 END;
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_MDM_TEL_CD_PRC
		   			   (TEL_CD_PRC_PRIMARY_KEY) 
		   		VALUES (CUR_PRC_CD."TEL_CD_PRC_PRIMARY_KEY");
		   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
		   			   (CD_NM, 
		   				PROV) 
		   		VALUES (CUR_PRC_CD."CD_NM", 
		   			    CUR_PRC_CD."PROV");
		   
    END IF;

END FOR;

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::MDM_TEL_CD_PRC
UPDATE "LAND"."IFRS_R1.LAND::MDM_TEL_CD_PRC" A
  FROM "LAND"."IFRS_R1.LAND::MDM_TEL_CD_PRC" A 
 INNER JOIN #UPDATE_MDM_TEL_CD_PRC B 
    ON A."TEL_CD_PRC_PRIMARY_KEY"   = B."TEL_CD_PRC_PRIMARY_KEY"
   SET NDB_TS = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_MDM_CD_PRC_EH" A
  FROM "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_MDM_CD_PRC_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."CD_NM"       = B."CD_NM"
   AND A."PROV"        = B."PROV"
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;