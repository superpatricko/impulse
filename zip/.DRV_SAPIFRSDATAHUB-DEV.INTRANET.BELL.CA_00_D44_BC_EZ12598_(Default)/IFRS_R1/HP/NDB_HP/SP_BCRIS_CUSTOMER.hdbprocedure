PROCEDURE "NDB_HP"."IFRS_R1.HP.NDB_HP::SP_BCRIS_CUSTOMER"
	(IN IP_CYCL_ID NVARCHAR(3),
OUT OP_STATUS  NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_BCRIS_CUSTOMER
-- Created By      : BC_EZ08929 (Shivam Prakash)       
-- Create Date     : 05-30-2017
-- Description     : Data Inserted using Calculation View - CA_BCRIS_CUSTOMER
--                   To NDB Table - HP_CUSTOMER Using this stored procedure.
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);
DECLARE LV_PREV_DAY         DATE;
-- New variables for version sequence check
DECLARE LV_LOOP_ERROR_FLAG  INTEGER := 0;
DECLARE LV_PREV_UNIQUE_IDENTIFIER  NVARCHAR(34) := NULL;

DECLARE CURSOR C_BCRIS_CUSTOMER FOR 
      SELECT DISTINCT "CONTRACT_UNIQUE_IDENTIFIER",
              "PRIMARY_TELEPHONE_NUMBER",
              "SUBSCRIBER_NUMBER",
			  "REF_EFFECTIVE_DATE",
			  "REF_EXPIRY_DATE",
			  "CONTRACT_INCEPTION_DT",
			  "CUSTOMER_LOCATION_ID",
		      "CUSTOMER_ADDRESS",
			  "CUSTOMER_FIRST_NAME",
			  "CUSTOMER_LAST_NAME",
			  "SYSTEM_REGION",
		      "TAX_JURISDICTION_CD",
			  "CUSTOMER_SEG_TYP_CD",
			  "CBSS_ACC_STATUS",
			  "TO_BE_REBILL_IND",
			  "BILL_SYS_CODE",
			  "ACC_TYPE",
			  "CBSS_CAN",
			  "TOLL_FREE_CAN",
			  "GIFT_G01",
			  "GIFT_G02",
			  "ONE_BILL_BAN",
			  "NM1_BAN",
			  "NM1_BILLED_INDICATOR",
			  "TERM_M2M_INDICATOR",
			  "TFB_CUST_PROV",
			  "WTN_800_NUMBER",
			  "TFB_ACCOUNT_STATUS",
			  "SUBSCRIBER_ACTION",
			  "KUNNR_SID",
			  "CONVERSION_IND",
			  "CLASS_OF_SERVICE",
			  "CYCL_ID"
			  "FLAG_EXISTING_RECORD",
	          "SEQ_ID",
	          "CYCL_ID",
	          "ERROR_CODE",
	          "ERROR_STATUS",
	          "CNTRT_ONT_PRIMARY_KEY",
	          "CNTRT_QBC_PRIMARY_KEY",
	      	  "CC_CONCAT_PK"  
	          FROM "_SYS_BIC"."IFRS_R1.HP.NDB_HP/CA_BCRIS_CUSTOMER"
               (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID)
               ORDER BY CONTRACT_UNIQUE_IDENTIFIER, SUBSCRIBER_NUMBER, REF_EFFECTIVE_DATE, 
               			SUBSCRIBER_ACTION, 
               			CYCL_ID, SEQ_ID;
               
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_BCRIS_CUST_PROFL_ON (CONTRACT_UNIQUE_IDENTIFIER NVARCHAR(16), --SUBSCRIBER_NUMBER NVARCHAR(14), 
	                                                      PRIME_CONTRACTED_CUSTOMER  NVARCHAR(14), 
														  SUBSCRIBER_ACTION NVARCHAR(1), CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_BCRIS_CUST_PROFL_QC (CONTRACT_UNIQUE_IDENTIFIER NVARCHAR(16), --SUBSCRIBER_NUMBER NVARCHAR(14),
                                                          PRIME_CONTRACTED_CUSTOMER  NVARCHAR(14), 
													      SUBSCRIBER_ACTION NVARCHAR(1), CYCL_ID NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_BCRIS_CONTR_INFO_ON(CNTRT_ONT_PRIMARY_KEY NVARCHAR(120));
CREATE LOCAL TEMPORARY TABLE #UPDATE_BCRIS_CONTR_INFO_QC(CNTRT_QBC_PRIMARY_KEY  NVARCHAR(120));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (CONTRACT_UNIQUE_IDENTIFIER NVARCHAR(16), SUBSCRIBER_NUMBER  NVARCHAR(14), SUBSCRIBER_ACTION NVARCHAR(1));
 
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 

FOR CURR_CUSTOMER AS C_BCRIS_CUSTOMER DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
			
--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 
	
      -- Do Nothing. Exception Handled to ensure SP does not get terminated	
	  END;		
	  
	  -- Insert record into error table
	  
	  INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER_EH"(
		   	      "CONTRACT_UNIQUE_IDENTIFIER",
			      "PRIMARY_TELEPHONE_NUMBER",
			      "SUBSCRIBER_NUMBER",
			      "REF_EFFECTIVE_DATE",
			      "REF_EXPIRY_DATE",
		          "CONTRACT_INCEPTION_DT",
			      "CUSTOMER_LOCATION_ID",
		          "CUSTOMER_ADDRESS",
			      "CUSTOMER_FIRST_NAME",
			      "CUSTOMER_LAST_NAME",
			      "SYSTEM_REGION",
		          "TAX_JURISDICTION_CD",
			      "CUSTOMER_SEG_TYP_CD",
			      "CBSS_ACC_STATUS",
			      "TO_BE_REBILL_IND",
			      "BILL_SYS_CODE",
			      "ACC_TYPE",
			      "CBSS_CAN",
			      "TOLL_FREE_CAN",
			      "GIFT_G01",
			      "GIFT_G02",
			      "ONE_BILL_BAN",
			      "NM1_BAN",
			      "NM1_BILLED_INDICATOR",
			      "TERM_M2M_INDICATOR",
			      "TFB_CUST_PROV",
			      "WTN_800_NUMBER",
			      "TFB_ACCOUNT_STATUS",
			      "SUBSCRIBER_ACTION",
			      "KUNNR_SID",
			      "CONVERSION_IND",
	              "CLASS_OF_SERVICE",
				  "ERROR_CODE",
				  "TECHNICAL_MESSAGE",
			      "ERROR_CREATE_TS") 
		   VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER",
			       CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
			       CURR_CUSTOMER."SUBSCRIBER_NUMBER",
			       CURR_CUSTOMER."REF_EFFECTIVE_DATE",
			       CURR_CUSTOMER."REF_EXPIRY_DATE",
		           CURR_CUSTOMER."CONTRACT_INCEPTION_DT",
			       CURR_CUSTOMER."CUSTOMER_LOCATION_ID",
		           CURR_CUSTOMER."CUSTOMER_ADDRESS",
			       CURR_CUSTOMER."CUSTOMER_FIRST_NAME",
			       CURR_CUSTOMER."CUSTOMER_LAST_NAME",
			       CURR_CUSTOMER."SYSTEM_REGION",
		           CURR_CUSTOMER."TAX_JURISDICTION_CD",
			       CURR_CUSTOMER."CUSTOMER_SEG_TYP_CD",
			       CURR_CUSTOMER."CBSS_ACC_STATUS",
			       CURR_CUSTOMER."TO_BE_REBILL_IND",
			       CURR_CUSTOMER."BILL_SYS_CODE",
			       CURR_CUSTOMER."ACC_TYPE",
			       CURR_CUSTOMER."CBSS_CAN",
			       CURR_CUSTOMER."TOLL_FREE_CAN",
			       CURR_CUSTOMER."GIFT_G01",
			       CURR_CUSTOMER."GIFT_G02",
			       CURR_CUSTOMER."ONE_BILL_BAN",
			       CURR_CUSTOMER."NM1_BAN",
			       CURR_CUSTOMER."NM1_BILLED_INDICATOR",
			       CURR_CUSTOMER."TERM_M2M_INDICATOR",
			       CURR_CUSTOMER."TFB_CUST_PROV",
			       CURR_CUSTOMER."WTN_800_NUMBER",
			       CURR_CUSTOMER."TFB_ACCOUNT_STATUS",
			       CURR_CUSTOMER."SUBSCRIBER_ACTION",
			       CURR_CUSTOMER."KUNNR_SID",
			       CURR_CUSTOMER."CONVERSION_IND",
	               CURR_CUSTOMER."CLASS_OF_SERVICE",
				   ::SQL_ERROR_CODE,
		           ::SQL_ERROR_MESSAGE,
		           LV_CUR_UTC);   
   
	  	LV_ERROR_FLAG := 'Y';
    	LV_LOOP_ERROR_FLAG := 1;
    END ; 
    	
	--------------------------------------------------------------------------------------------------------	
	-- FOR CLEARING THE VARIABLES
	IF (LV_PREV_UNIQUE_IDENTIFIER IS NULL OR CURR_CUSTOMER."CC_CONCAT_PK" != LV_PREV_UNIQUE_IDENTIFIER) THEN
		LV_LOOP_ERROR_FLAG := 0;
		LV_PREV_UNIQUE_IDENTIFIER := CURR_CUSTOMER."CC_CONCAT_PK";			 	   
    END IF;    
	--------------------------------------------------------------------------------------------------------   

--  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF CURR_CUSTOMER.ERROR_STATUS = '1' THEN
	 
	 --  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CURR_CUSTOMER."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
		
		-- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];

        INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER_EH"(
		   	      "CONTRACT_UNIQUE_IDENTIFIER",
			      "PRIMARY_TELEPHONE_NUMBER",
			      "SUBSCRIBER_NUMBER",
			      "REF_EFFECTIVE_DATE",
			      "REF_EXPIRY_DATE",
		          "CONTRACT_INCEPTION_DT",
			      "CUSTOMER_LOCATION_ID",
		          "CUSTOMER_ADDRESS",
			      "CUSTOMER_FIRST_NAME",
			      "CUSTOMER_LAST_NAME",
			      "SYSTEM_REGION",
		          "TAX_JURISDICTION_CD",
			      "CUSTOMER_SEG_TYP_CD",
			      "CBSS_ACC_STATUS",
			      "TO_BE_REBILL_IND",
			      "BILL_SYS_CODE",
			      "ACC_TYPE",
			      "CBSS_CAN",
			      "TOLL_FREE_CAN",
			      "GIFT_G01",
			      "GIFT_G02",
			      "ONE_BILL_BAN",
			      "NM1_BAN",
			      "NM1_BILLED_INDICATOR",
			      "TERM_M2M_INDICATOR",
			      "TFB_CUST_PROV",
			      "WTN_800_NUMBER",
			      "TFB_ACCOUNT_STATUS",
			      "SUBSCRIBER_ACTION",
			      "KUNNR_SID",
			      "CONVERSION_IND",
	              "CLASS_OF_SERVICE",
				  "ERROR_CODE",
			      "ERROR_CREATE_TS") 
		   VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER",
			       CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
			       CURR_CUSTOMER."SUBSCRIBER_NUMBER",
			       CURR_CUSTOMER."REF_EFFECTIVE_DATE",
			       CURR_CUSTOMER."REF_EXPIRY_DATE",
		           CURR_CUSTOMER."CONTRACT_INCEPTION_DT",
			       CURR_CUSTOMER."CUSTOMER_LOCATION_ID",
		           CURR_CUSTOMER."CUSTOMER_ADDRESS",
			       CURR_CUSTOMER."CUSTOMER_FIRST_NAME",
			       CURR_CUSTOMER."CUSTOMER_LAST_NAME",
			       CURR_CUSTOMER."SYSTEM_REGION",
		           CURR_CUSTOMER."TAX_JURISDICTION_CD",
			       CURR_CUSTOMER."CUSTOMER_SEG_TYP_CD",
			       CURR_CUSTOMER."CBSS_ACC_STATUS",
			       CURR_CUSTOMER."TO_BE_REBILL_IND",
			       CURR_CUSTOMER."BILL_SYS_CODE",
			       CURR_CUSTOMER."ACC_TYPE",
			       CURR_CUSTOMER."CBSS_CAN",
			       CURR_CUSTOMER."TOLL_FREE_CAN",
			       CURR_CUSTOMER."GIFT_G01",
			       CURR_CUSTOMER."GIFT_G02",
			       CURR_CUSTOMER."ONE_BILL_BAN",
			       CURR_CUSTOMER."NM1_BAN",
			       CURR_CUSTOMER."NM1_BILLED_INDICATOR",
			       CURR_CUSTOMER."TERM_M2M_INDICATOR",
			       CURR_CUSTOMER."TFB_CUST_PROV",
			       CURR_CUSTOMER."WTN_800_NUMBER",
			       CURR_CUSTOMER."TFB_ACCOUNT_STATUS",
			       CURR_CUSTOMER."SUBSCRIBER_ACTION",
			       CURR_CUSTOMER."KUNNR_SID",
			       CURR_CUSTOMER."CONVERSION_IND",
	               CURR_CUSTOMER."CLASS_OF_SERVICE",
				   :CURRENT_ERROR,
		           LV_CUR_UTC);   
		           
		END FOR;
				         		        
     -- Set Error Flag				        
	    LV_ERROR_FLAG := 'Y';
	    LV_LOOP_ERROR_FLAG := 1; 
		    	
-- Processing for Successful Records
   ELSE 
         IF CURR_CUSTOMER.ERROR_STATUS = '0' THEN
	    
	        IF LV_LOOP_ERROR_FLAG = 1 THEN
	        
	            INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER_EH"(
						  "CONTRACT_UNIQUE_IDENTIFIER",
						  "PRIMARY_TELEPHONE_NUMBER",
						  "SUBSCRIBER_NUMBER",
						  "REF_EFFECTIVE_DATE",
						  "REF_EXPIRY_DATE",
						  "CONTRACT_INCEPTION_DT",
						  "CUSTOMER_LOCATION_ID",
						  "CUSTOMER_ADDRESS",
						  "CUSTOMER_FIRST_NAME",
						  "CUSTOMER_LAST_NAME",
						  "SYSTEM_REGION",
						  "TAX_JURISDICTION_CD",
						  "CUSTOMER_SEG_TYP_CD",
						  "CBSS_ACC_STATUS",
						  "TO_BE_REBILL_IND",
						  "BILL_SYS_CODE",
						  "ACC_TYPE",
						  "CBSS_CAN",
						  "TOLL_FREE_CAN",
						  "GIFT_G01",
						  "GIFT_G02",
						  "ONE_BILL_BAN",
						  "NM1_BAN",
						  "NM1_BILLED_INDICATOR",
						  "TERM_M2M_INDICATOR",
						  "TFB_CUST_PROV",
						  "WTN_800_NUMBER",
						  "TFB_ACCOUNT_STATUS",
						  "SUBSCRIBER_ACTION",
						  "KUNNR_SID",
						  "CONVERSION_IND",
						  "CLASS_OF_SERVICE",
						  "ERROR_CODE",
						  "ERROR_CREATE_TS") 
				   VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER",
						   CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
						   CURR_CUSTOMER."SUBSCRIBER_NUMBER",
						   CURR_CUSTOMER."REF_EFFECTIVE_DATE",
						   CURR_CUSTOMER."REF_EXPIRY_DATE",
						   CURR_CUSTOMER."CONTRACT_INCEPTION_DT",
						   CURR_CUSTOMER."CUSTOMER_LOCATION_ID",
						   CURR_CUSTOMER."CUSTOMER_ADDRESS",
						   CURR_CUSTOMER."CUSTOMER_FIRST_NAME",
						   CURR_CUSTOMER."CUSTOMER_LAST_NAME",
						   CURR_CUSTOMER."SYSTEM_REGION",
						   CURR_CUSTOMER."TAX_JURISDICTION_CD",
						   CURR_CUSTOMER."CUSTOMER_SEG_TYP_CD",
						   CURR_CUSTOMER."CBSS_ACC_STATUS",
						   CURR_CUSTOMER."TO_BE_REBILL_IND",
						   CURR_CUSTOMER."BILL_SYS_CODE",
						   CURR_CUSTOMER."ACC_TYPE",
						   CURR_CUSTOMER."CBSS_CAN",
						   CURR_CUSTOMER."TOLL_FREE_CAN",
						   CURR_CUSTOMER."GIFT_G01",
						   CURR_CUSTOMER."GIFT_G02",
						   CURR_CUSTOMER."ONE_BILL_BAN",
						   CURR_CUSTOMER."NM1_BAN",
						   CURR_CUSTOMER."NM1_BILLED_INDICATOR",
						   CURR_CUSTOMER."TERM_M2M_INDICATOR",
						   CURR_CUSTOMER."TFB_CUST_PROV",
						   CURR_CUSTOMER."WTN_800_NUMBER",
						   CURR_CUSTOMER."TFB_ACCOUNT_STATUS",
						   CURR_CUSTOMER."SUBSCRIBER_ACTION",
						   CURR_CUSTOMER."KUNNR_SID",
						   CURR_CUSTOMER."CONVERSION_IND",
						   CURR_CUSTOMER."CLASS_OF_SERVICE",
						   :CURRENT_ERROR,
						   LV_CUR_UTC); 
						   
	    -- Processing for Successful Records
   ELSE

--   If Record exists in the Target NDB Table
     IF CURR_CUSTOMER.FLAG_EXISTING_RECORD = 'U' THEN
     
     BEGIN AUTONOMOUS TRANSACTION
     
     --    Update the target NDB table
    --  LV_PREV_DAY := ADD_DAYS(CURR_CUSTOMER."REF_EFFECTIVE_DATE", -1);
      
--    Update Expiry Date of Current NDB Record to New Record.Effective Date - 1
      UPDATE "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER" NDB
         SET NDB."REF_EXPIRY_DATE"        = ADD_DAYS(CURR_CUSTOMER."REF_EFFECTIVE_DATE", -1),
             NDB."MODIFIED_TS"            = :LV_CUR_UTC
       WHERE NDB."CONTRACT_UNIQUE_IDENTIFIER"       = CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER"
         AND NDB."SUBSCRIBER_NUMBER"                = CURR_CUSTOMER."SUBSCRIBER_NUMBER"
         AND NDB."REF_EXPIRY_DATE"                  = CURR_CUSTOMER."REF_EXPIRY_DATE";
         
       --    Insert the Incoming new record
   	  INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER"(
		   	      "CONTRACT_UNIQUE_IDENTIFIER",
			      "PRIMARY_TELEPHONE_NUMBER",
			      "SUBSCRIBER_NUMBER",
			      "REF_EFFECTIVE_DATE",
			      "REF_EXPIRY_DATE",
		          "CONTRACT_INCEPTION_DT",
			      "CUSTOMER_LOCATION_ID",
		          "CUSTOMER_ADDRESS",
			      "CUSTOMER_FIRST_NAME",
			      "CUSTOMER_LAST_NAME",
			      "SYSTEM_REGION",
		          "TAX_JURISDICTION_CD",
			      "CUSTOMER_SEG_TYP_CD",
			      "CBSS_ACC_STATUS",
			      "TO_BE_REBILL_IND",
			      "BILL_SYS_CODE",
			      "ACC_TYPE",
			      "CBSS_CAN",
			      "TOLL_FREE_CAN",
			      "GIFT_G01",
			      "GIFT_G02",
			      "ONE_BILL_BAN",
			      "NM1_BAN",
			      "NM1_BILLED_INDICATOR",
			      "TERM_M2M_INDICATOR",
			      "TFB_CUST_PROV",
			      "WTN_800_NUMBER",
			      "TFB_ACCOUNT_STATUS",
			      "SUBSCRIBER_ACTION",
			      "KUNNR_SID",
			      "CONVERSION_IND",
	              "CLASS_OF_SERVICE",
			      "INSERT_TS")
		   VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER",
			       CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
			       CURR_CUSTOMER."SUBSCRIBER_NUMBER",
			       CURR_CUSTOMER."REF_EFFECTIVE_DATE",
			       CURR_CUSTOMER."REF_EXPIRY_DATE",
		           CURR_CUSTOMER."CONTRACT_INCEPTION_DT",
			       CURR_CUSTOMER."CUSTOMER_LOCATION_ID",
		           CURR_CUSTOMER."CUSTOMER_ADDRESS",
			       CURR_CUSTOMER."CUSTOMER_FIRST_NAME",
			       CURR_CUSTOMER."CUSTOMER_LAST_NAME",
			       CURR_CUSTOMER."SYSTEM_REGION",
		           CURR_CUSTOMER."TAX_JURISDICTION_CD",
			       CURR_CUSTOMER."CUSTOMER_SEG_TYP_CD",
			       CURR_CUSTOMER."CBSS_ACC_STATUS",
			       CURR_CUSTOMER."TO_BE_REBILL_IND",
			       CURR_CUSTOMER."BILL_SYS_CODE",
			       CURR_CUSTOMER."ACC_TYPE",
			       CURR_CUSTOMER."CBSS_CAN",
			       CURR_CUSTOMER."TOLL_FREE_CAN",
			       CURR_CUSTOMER."GIFT_G01",
			       CURR_CUSTOMER."GIFT_G02",
			       CURR_CUSTOMER."ONE_BILL_BAN",
			       CURR_CUSTOMER."NM1_BAN",
			       CURR_CUSTOMER."NM1_BILLED_INDICATOR",
			       CURR_CUSTOMER."TERM_M2M_INDICATOR",
			       CURR_CUSTOMER."TFB_CUST_PROV",
			       CURR_CUSTOMER."WTN_800_NUMBER",
			       CURR_CUSTOMER."TFB_ACCOUNT_STATUS",
			       CURR_CUSTOMER."SUBSCRIBER_ACTION",
			       CURR_CUSTOMER."KUNNR_SID",
			       CURR_CUSTOMER."CONVERSION_IND",
	               CURR_CUSTOMER."CLASS_OF_SERVICE",
			       LV_CUR_UTC);   
			       		   							       
	     END;-- END AUTONOMOUS TRANSACTION 	
	            
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_BCRIS_CUST_PROFL_ON
		   			   (CONTRACT_UNIQUE_IDENTIFIER, 
		   			    PRIME_CONTRACTED_CUSTOMER,
		   			    SUBSCRIBER_ACTION, 
		   			    CYCL_ID) 
		   		VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER", 
		   				CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
		   				CURR_CUSTOMER."SUBSCRIBER_ACTION",
		   				CURR_CUSTOMER."CYCL_ID");
		   				
		   INSERT INTO #UPDATE_BCRIS_CUST_PROFL_QC
		   			   (CONTRACT_UNIQUE_IDENTIFIER, 
		   			    PRIME_CONTRACTED_CUSTOMER,
		   			    SUBSCRIBER_ACTION, 
		   			    CYCL_ID) 
		   		VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER", 
		   				CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
		   				CURR_CUSTOMER."SUBSCRIBER_ACTION",
		   				CURR_CUSTOMER."CYCL_ID");
		   				
		   	INSERT INTO #UPDATE_BCRIS_CONTR_INFO_ON 
					   (CNTRT_ONT_PRIMARY_KEY) 
				VALUES (CURR_CUSTOMER.CNTRT_ONT_PRIMARY_KEY);
						
			INSERT INTO #UPDATE_BCRIS_CONTR_INFO_QC
					   (CNTRT_QBC_PRIMARY_KEY)
				VALUES (CURR_CUSTOMER.CNTRT_QBC_PRIMARY_KEY);
		   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
		   			   (CONTRACT_UNIQUE_IDENTIFIER, 
		   			    SUBSCRIBER_NUMBER,
		   			    SUBSCRIBER_ACTION) 
		   		VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER", 
		   				CURR_CUSTOMER."SUBSCRIBER_NUMBER", 
		   				CURR_CUSTOMER."SUBSCRIBER_ACTION");
	  
	  ELSE
	  --ELSEIF CURR_CUSTOMER.FLAG_EXISTING_RECORD = 'I' THEN
	  	
    --    Insert Records into the target NDB table   
      BEGIN AUTONOMOUS TRANSACTION
        
      INSERT INTO "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER"(
		   	      "CONTRACT_UNIQUE_IDENTIFIER",
			      "PRIMARY_TELEPHONE_NUMBER",
			      "SUBSCRIBER_NUMBER",
			      "REF_EFFECTIVE_DATE",
			      "REF_EXPIRY_DATE",
		          "CONTRACT_INCEPTION_DT",
			      "CUSTOMER_LOCATION_ID",
		          "CUSTOMER_ADDRESS",
			      "CUSTOMER_FIRST_NAME",
			      "CUSTOMER_LAST_NAME",
			      "SYSTEM_REGION",
		          "TAX_JURISDICTION_CD",
			      "CUSTOMER_SEG_TYP_CD",
			      "CBSS_ACC_STATUS",
			      "TO_BE_REBILL_IND",
			      "BILL_SYS_CODE",
			      "ACC_TYPE",
			      "CBSS_CAN",
			      "TOLL_FREE_CAN",
			      "GIFT_G01",
			      "GIFT_G02",
			      "ONE_BILL_BAN",
			      "NM1_BAN",
			      "NM1_BILLED_INDICATOR",
			      "TERM_M2M_INDICATOR",
			      "TFB_CUST_PROV",
			      "WTN_800_NUMBER",
			      "TFB_ACCOUNT_STATUS",
			      "SUBSCRIBER_ACTION",
			      "KUNNR_SID",
			      "CONVERSION_IND",
	              "CLASS_OF_SERVICE",
			      "INSERT_TS")
		   VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER",
			       CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
			       CURR_CUSTOMER."SUBSCRIBER_NUMBER",
			       CURR_CUSTOMER."REF_EFFECTIVE_DATE",	
			       CURR_CUSTOMER."REF_EXPIRY_DATE",
		           CURR_CUSTOMER."CONTRACT_INCEPTION_DT",
			       CURR_CUSTOMER."CUSTOMER_LOCATION_ID",
		           CURR_CUSTOMER."CUSTOMER_ADDRESS",
			       CURR_CUSTOMER."CUSTOMER_FIRST_NAME",
			       CURR_CUSTOMER."CUSTOMER_LAST_NAME",
			       CURR_CUSTOMER."SYSTEM_REGION",
		           CURR_CUSTOMER."TAX_JURISDICTION_CD",
			       CURR_CUSTOMER."CUSTOMER_SEG_TYP_CD",
			       CURR_CUSTOMER."CBSS_ACC_STATUS",
			       CURR_CUSTOMER."TO_BE_REBILL_IND",
			       CURR_CUSTOMER."BILL_SYS_CODE",
			       CURR_CUSTOMER."ACC_TYPE",
			       CURR_CUSTOMER."CBSS_CAN",
			       CURR_CUSTOMER."TOLL_FREE_CAN",
			       CURR_CUSTOMER."GIFT_G01",
			       CURR_CUSTOMER."GIFT_G02",
			       CURR_CUSTOMER."ONE_BILL_BAN",
			       CURR_CUSTOMER."NM1_BAN",
			       CURR_CUSTOMER."NM1_BILLED_INDICATOR",
			       CURR_CUSTOMER."TERM_M2M_INDICATOR",
			       CURR_CUSTOMER."TFB_CUST_PROV",
			       CURR_CUSTOMER."WTN_800_NUMBER",
			       CURR_CUSTOMER."TFB_ACCOUNT_STATUS",
			       CURR_CUSTOMER."SUBSCRIBER_ACTION",
			       CURR_CUSTOMER."KUNNR_SID",
			       CURR_CUSTOMER."CONVERSION_IND",
	               CURR_CUSTOMER."CLASS_OF_SERVICE",
			       LV_CUR_UTC);
		   END;
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records
		   INSERT INTO #UPDATE_BCRIS_CUST_PROFL_ON
		   			   (CONTRACT_UNIQUE_IDENTIFIER, 
		   			    PRIME_CONTRACTED_CUSTOMER,
		   			    SUBSCRIBER_ACTION, 
		   			    CYCL_ID) 
		   		VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER", 
		   				CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER", 
		   				CURR_CUSTOMER."SUBSCRIBER_ACTION",
		   				CURR_CUSTOMER."CYCL_ID");
		   				
		   INSERT INTO #UPDATE_BCRIS_CUST_PROFL_QC
		   			   (CONTRACT_UNIQUE_IDENTIFIER, 
		   			    PRIME_CONTRACTED_CUSTOMER,
		   			    SUBSCRIBER_ACTION, 
		   			    CYCL_ID) 
		   		VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER", 
		   				CURR_CUSTOMER."PRIMARY_TELEPHONE_NUMBER",
		   				CURR_CUSTOMER."SUBSCRIBER_ACTION",
		   				CURR_CUSTOMER."CYCL_ID");
		   				
		   	INSERT INTO #UPDATE_BCRIS_CONTR_INFO_ON 
					   (CNTRT_ONT_PRIMARY_KEY) 
				VALUES (CURR_CUSTOMER.CNTRT_ONT_PRIMARY_KEY);
						
			INSERT INTO #UPDATE_BCRIS_CONTR_INFO_QC
					   (CNTRT_QBC_PRIMARY_KEY)
				VALUES (CURR_CUSTOMER.CNTRT_QBC_PRIMARY_KEY);
		   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
		   			   (CONTRACT_UNIQUE_IDENTIFIER, 
		   			    SUBSCRIBER_NUMBER,
		   			    SUBSCRIBER_ACTION) 
		   		VALUES (CURR_CUSTOMER."CONTRACT_UNIQUE_IDENTIFIER", 
		   				CURR_CUSTOMER."SUBSCRIBER_NUMBER", 
		   				CURR_CUSTOMER."SUBSCRIBER_ACTION");
		   				
		   		END IF;
    		END IF;		   				    
        END IF;
     END IF;
END FOR;
 
--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::BCRIS_CUST_PROFL_ON
UPDATE "LAND"."IFRS_R1.LAND::BCRIS_CUST_PROFL_ON" A
  FROM "LAND"."IFRS_R1.LAND::BCRIS_CUST_PROFL_ON" A 
 INNER JOIN #UPDATE_BCRIS_CUST_PROFL_ON B 
    ON A."CONTRACT_UNIQUE_IDENTIFIER"        = B."CONTRACT_UNIQUE_IDENTIFIER"
   AND A."PRIME_CONTRACTED_CUSTOMER"         = B."PRIME_CONTRACTED_CUSTOMER"
   AND A."SUBSCRIBER_ACTION"                 = B."SUBSCRIBER_ACTION"
   AND A."CYCL_ID"                           = B."CYCL_ID"
   SET NDB_TS = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;
 
-- Update Landing Table IFRS_R1.LAND::BCRIS_CUST_PROFL_QC
 
 UPDATE "LAND"."IFRS_R1.LAND::BCRIS_CUST_PROFL_QC" A
  FROM "LAND"."IFRS_R1.LAND::BCRIS_CUST_PROFL_QC" A 
 INNER JOIN #UPDATE_BCRIS_CUST_PROFL_QC B 
    ON A."CONTRACT_UNIQUE_IDENTIFIER"        = B."CONTRACT_UNIQUE_IDENTIFIER"
   AND A."PRIME_CONTRACTED_CUSTOMER"         = B."PRIME_CONTRACTED_CUSTOMER"
   AND A."SUBSCRIBER_ACTION"                 = B."SUBSCRIBER_ACTION"
   AND A."CYCL_ID"                           = B."CYCL_ID"
   SET NDB_TS = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--  Update Landing Table IFRS_R1.LAND::BCRIS_CONTR_INFO_ON
UPDATE "LAND"."IFRS_R1.LAND::BCRIS_CONTR_INFO_ON" A
  FROM "LAND"."IFRS_R1.LAND::BCRIS_CONTR_INFO_ON" A 
 INNER JOIN #UPDATE_BCRIS_CONTR_INFO_ON B 
    ON A.CNTRT_ONT_PRIMARY_KEY        = B.CNTRT_ONT_PRIMARY_KEY
   SET A.NDB_TS = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;
 
--  Update Landing Table IFRS_R1.LAND::BCRIS_CONTR_INFO_QC
UPDATE "LAND"."IFRS_R1.LAND::BCRIS_CONTR_INFO_QC" A
  FROM "LAND"."IFRS_R1.LAND::BCRIS_CONTR_INFO_QC" A 
 INNER JOIN #UPDATE_BCRIS_CONTR_INFO_QC B 
    ON A.CNTRT_QBC_PRIMARY_KEY        = B.CNTRT_QBC_PRIMARY_KEY
   SET A.NDB_TS = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;
 
 --------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER_EH" A
  FROM "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_CUSTOMER_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."CONTRACT_UNIQUE_IDENTIFIER"        = B."CONTRACT_UNIQUE_IDENTIFIER"
   AND A."SUBSCRIBER_NUMBER"                 = B."SUBSCRIBER_NUMBER"
   AND A."SUBSCRIBER_ACTION"                 = B."SUBSCRIBER_ACTION"
   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
 END;

 