PROCEDURE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::SP_TV_RAI_INVC" 
(IN IP_EXTR_DT DATE,
OUT OP_STATUS NVARCHAR(1000))  
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER  
	AS
BEGIN

----------------------------------------------------------------------------------------------------
-- Procedure Title : IFRS_R1.BELLTV.RAI_BELLTV::SP_TV_RAI_INVC
----------------------------------------------------------------------------------------------------
-- Created By      : BC_EZ04919(SAHITHI)          Date :22/09/2017
----------------------------------------------------------------------------------------------------
-- Procedure Description : 
--      This Procedure will create the RAI invoice items based on
--	    BELL TV NDB billing data
--	    If the Batch ID is blank in the NDB billing, then it will create 
--	    Invoice RAI item .
                      
--   This Procedure has two parameters:
--	   	1. The date parameter 'IP_EXTR_DT': Using this date parameter,
--	   	   RAI item	can be created for past records(if it is required).
--      2. The  OT_STATUS parametere : This parameter give the status of the Procedure whether it is 
--         success or failure

-- ERROR_LOG Table : Will be used to trace the system error like transaction failed.

-- FREQUENCY OF PROCEDURE EXECUTION: Daily

-- Track Error/Process Control Table: This table will be used to tract the start and end
-- time of the execution

-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- M O D I F I C A T I O N   H I S T O R Y
----------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- Description Of the changes 
----------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>        
----------------------------------------------------------------------------------------------------


/* Declaring Local Variables */

DECLARE LV_BATCH_ID       		INTEGER;
DECLARE LV_COUNT                INTEGER;
DECLARE LV_ERROR_FLAG 		    NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 				TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE LV_CUR_UTC_TIME 		DECIMAL(15,2) 
                                := TO_DECIMAL(TO_CHAR(CURRENT_UTCTIMESTAMP,'YYYYMMDDHHMISS'),15,2);                            
DECLARE LC_ERROR_TEXT 		    NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	    NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE i					    INTEGER;

DECLARE CURRENT_ERROR		    NVARCHAR(100);
DECLARE ERROR_TAB 			    TABLE (ERROR_CODE NVARCHAR(100));
DECLARE RECORD_COUNT		    INTEGER;
DECLARE LC_SET		  			NVARCHAR (1) DEFAULT 'X';

--------------------------------------------------------------------------------------------------
-- Temporary table/Variable/Node Declaration to hold data from the final CVs
-------------------------------------------------------------------------------------------------- 

   DECLARE CURSOR C_RAI_INVC FOR
			SELECT 	 "EXTR_DT",
					 "ACCT_NUM",
					 "PRIN_NUM",
					 "AGNT_NUM",
					 "TRAN_CD",
					 "SERVICE_CD",
					 "ADJ_RSN_CD",
					 "TRANS_DT",
					 "POST_DT",
					 "AUDT_TRL_DT",
					 "CO_CD",
					 "CONTR_END_DT",
					 "CONTR_STRT_DT",
					 "CONTR_TERM",
					 "CONTR_TY",
					 "AMT",
					 "TERM_DISQUALF_IND",
					 "CONTR_TERM_DT",
					 "VTG_ROW_ID",
					 "ADJ_ENTR_REF",
					 "ENTR_REF_NUM",
					 "CYCL_ID",
					 "DUO_TRIO_IND",
					 "DSCT_CD",
					 "DSCT_AMT",
					 "PRE_DSCT_CHRG",
					 "BILL_CYCL",
					 "CUST_ST",
					 "VIRTUAL_IND",
					 "TERM_IND",
					 "PRODUCT_TYPE",
					 "NETWK_TY",
					 "CUST_TY",
					 "BILL_CD",
					 "REVENUE_CD",
					 "KUNNR_SID",
					 "BILL_FROM_DT",
					 "BILL_TO_DT",
					 "FEAT_CD",
					 "INSTALL_NUM",
					 "CNVR_IND",
					 "EXTR_TM",
					 "SYS_NUM",
					 "SRC_TS",
					 "INSERT_TS",
					 "MOD_IND",
					 "RUN_ID_ORD",
					 "RUN_ID_INV",
					 "SRCDOC_ID",
					 "TIME_IND",
					 "HEADER_ID",
					 "REFERENCE_ID",
					 "BATCH_ID_ORD",
					 "BATCH_ID_INV",
					 "RAI_TS_ORD",
					 "RAI_TS_INV",
					 "MODIFIED_TS",
					 to_decimal("TIMESTAMP_UTC",15,0) TIMESTAMP_UTC,
					 "KUNNR",
					 "QUANTITY",
					 "QUANTITY_UNIT",
					 "FINAL_INVOICE",
					 "CATEGORY",
					 "MAIN_CONDITION_TYPE",
					 "CONDITION_TYPE",
					 "DUE_DATE",
					 "QUANTITY_REL",
					 "TP",
					 "POSTING_DATE",
					 "CURRENT_DATE",
					 "CC_EXPIRED_RECORDS",
					 "CC_LOB",
					 "SRCDOC_COMP",
					 "SRCDOC_LOGSYS",
					 "SRCDOC_TYPE",
					 "WAERS",
					 "ORIGDOC_COMP",
					 "ORIGDOC_LOGSYS",
					 "ORIGDOC_TYPE",
					 "HWAER",
					 "BUKRS",
					 "CC_GL_ACCOUNT",
					 "ZZ_LEGACY",
					 "ZZ_ICHKONT",
					 "PL_ACCOUNT",
					 "ZZ_AUFNR",
					 "ZZ_TXJCD",
					 "ZZ_KOSTL",
					 "ZZ_MWSKZ",
					 "ZZ_SGTXT",
					 "ZZ_ZUONR_INV",
					 "ZZ_MATNR",
					 "ZZ_XBLNR",
					 "ZZ_MINPRICE",
					 "ZZ_BILLER",
					 "ZZ_BU_VIEW",
					 "ZZ_ADJ_RSN_CD",
					 "ZZ_CONVERSION",
					 "ZZ_BKTXT",
					 "ZZ_BLDAT",
					 "ZZ_BUDAT",
					 "ERROR_STATUS",
					 "ERROR_CODE",
					 "ITEM_ID",
					 "EXCHANGE_RATE" 
				FROM "_SYS_BIC"."IFRS_R1.BELLTV.RAI_BELLTV/CA_TV_INV_RAI_ITEM"				
				(PLACEHOLDER."$$IP_BILL_DAY$$" => IFNULL(:IP_EXTR_DT,'99991231'));

  BEGIN    

	--------------------------------------------------------------------------------------------------
	-- Batch ID creation for RAI processing
	-------------------------------------------------------------------------------------------------- 			 
	
	SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI_BATCH_ID".NEXTVAL 
	  INTO LV_BATCH_ID 
	  FROM DUMMY;	
		 
	--------------------------------------------------------------------------------------------------
	-- Local Temporary Tables Declaration
	-------------------------------------------------------------------------------------------------- 			 	   	   
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_TV_INVC(
	    ACCT_NUM    				NVARCHAR(16), 
	    SERVICE_CD                  NVARCHAR(15),
		ITEM_ID                     NVARCHAR(20),
		SRCDOC_ID                   NVARCHAR(35),
		RAI_ITEM_ID                 NVARCHAR(15),
		BATCH_ID                    INTEGER,
		RAI_TS						DATE,
		RUN_ID						INTEGER,
		EXTR_DT						DATE,
		VTG_ROW_ID	                NVARCHAR(18),
		PRIN_NUM                    NVARCHAR(4),
		AGNT_NUM	                NVARCHAR(4));
	    
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_MAIN_TV (SRCDOC_ID NVARCHAR(35));
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_COND_TV (SRCDOC_ID NVARCHAR(35));

	--------------------------------------------------------------------------------------------------
	-- Cursors Loop
	-------------------------------------------------------------------------------------------------- 
	FOR CUR_INVC AS C_RAI_INVC DO
	
	--  Check the Error Status of the Record. 
	
		IF CUR_INVC.ERROR_STATUS = '1' 
		THEN
		
    --  	Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_INVC."ERROR_CODE",ERROR_TAB,RECORD_COUNT);
	
    --	    Loop through the Error Records
			FOR i IN 1 .. :RECORD_COUNT DO
				
    --      	Fetch the Error Code
				CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
				
	--  		All erroneous records are inserted into Invoice Main EH table 
				INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"EXCHANGE_RATE",
						"BLDAT",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BKTXT",
						"ZZ_BLDAT",
						"ZZ_BUDAT",
						"ZZ_ICHKONT",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MWSKZ",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"ERROR_CODE",
					    "ERROR_CREATE_TS")
				VALUES (CUR_INVC."SRCDOC_COMP",
						CUR_INVC."SRCDOC_LOGSYS",
						CUR_INVC."SRCDOC_TYPE",
						CUR_INVC."SRCDOC_ID",
						CUR_INVC."TIMESTAMP_UTC",
						CUR_INVC."HEADER_ID",
						CUR_INVC."ITEM_ID",
						CUR_INVC."KUNNR",
						CUR_INVC."BUKRS",
						CUR_INVC."WAERS",
						CUR_INVC."HWAER",
						CUR_INVC."QUANTITY",
						CUR_INVC."QUANTITY_UNIT",
						CUR_INVC."ORIGDOC_COMP",
						CUR_INVC."ORIGDOC_LOGSYS",
						CUR_INVC."ORIGDOC_TYPE",
						CUR_INVC."SRCDOC_ID",
						CUR_INVC."DUE_DATE",
						CUR_INVC."FINAL_INVOICE",
						CUR_INVC."QUANTITY_REL",
						CUR_INVC."POSTING_DATE",
						CUR_INVC."EXCHANGE_RATE",
						CUR_INVC."ZZ_BLDAT",
						CUR_INVC."ZZ_AUFNR",
						LV_BATCH_ID,
						CUR_INVC."ZZ_BKTXT",
						CUR_INVC."ZZ_BLDAT",
						CUR_INVC."ZZ_BUDAT",
						CUR_INVC."ZZ_ICHKONT",
						CUR_INVC."ZZ_KOSTL",
						CUR_INVC."ZZ_LEGACY",
						CUR_INVC."ZZ_MWSKZ",
						CUR_INVC."ZZ_SGTXT",
						CUR_INVC."ZZ_TXJCD",
						CUR_INVC."ZZ_XBLNR",
						CUR_INVC."ZZ_ZUONR_INV",
					    :CURRENT_ERROR,
						LV_CUR_UTC);
			
	--  		All erroneous records are inserted into Invoice Condition EH Table for SSP(Standalone Selling Price)
		   		INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"BETRH",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
				    VALUES (CUR_INVC."SRCDOC_COMP",
							CUR_INVC."SRCDOC_LOGSYS",			
							CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."SRCDOC_ID",
							CUR_INVC."TIMESTAMP_UTC",
							CUR_INVC."CONDITION_TYPE",
							CUR_INVC."PL_ACCOUNT",
							CUR_INVC."TP",
							CUR_INVC."WAERS",
							CUR_INVC."AMT",
							CUR_INVC."HWAER",
							CUR_INVC."CATEGORY",
							CUR_INVC."MAIN_CONDITION_TYPE",
							:CURRENT_ERROR,
						    LV_CUR_UTC);				
		
	--  		Set Error Flag				        
				LV_ERROR_FLAG := 'Y';
				
			END FOR;
 
	
	--	Processing of successful records
		ELSE
		
			BEGIN AUTONOMOUS TRANSACTION
			
	--  		All valid records are inserted into Invoice Main table 
				INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"QUANTITY_REL",
						"POSTING_DATE",
						"EXCHANGE_RATE",
						"BLDAT",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BKTXT",
						"ZZ_BLDAT",
						"ZZ_BUDAT",
						"ZZ_ICHKONT",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MWSKZ",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_XBLNR",
						"ZZ_ZUONR")
				VALUES (CUR_INVC."SRCDOC_COMP",
						CUR_INVC."SRCDOC_LOGSYS",
						CUR_INVC."SRCDOC_TYPE",
						CUR_INVC."SRCDOC_ID",
						CUR_INVC."TIMESTAMP_UTC",
						CUR_INVC."HEADER_ID",
						CUR_INVC."ITEM_ID",
						CUR_INVC."KUNNR",
						CUR_INVC."BUKRS",
						CUR_INVC."WAERS",
						CUR_INVC."HWAER",
						CUR_INVC."QUANTITY",
						CUR_INVC."QUANTITY_UNIT",
						CUR_INVC."ORIGDOC_COMP",
						CUR_INVC."ORIGDOC_LOGSYS",
						CUR_INVC."ORIGDOC_TYPE",
						CUR_INVC."SRCDOC_ID",
						CUR_INVC."DUE_DATE",
						CUR_INVC."FINAL_INVOICE",
						CUR_INVC."QUANTITY_REL",
						CUR_INVC."POSTING_DATE",
						CUR_INVC."EXCHANGE_RATE",
						CUR_INVC."ZZ_BLDAT",
						CUR_INVC."ZZ_AUFNR",
						LV_BATCH_ID,
						CUR_INVC."ZZ_BKTXT",
						CUR_INVC."ZZ_BLDAT",
						CUR_INVC."ZZ_BUDAT",
						CUR_INVC."ZZ_ICHKONT",
						CUR_INVC."ZZ_KOSTL",
						CUR_INVC."ZZ_LEGACY",
						CUR_INVC."ZZ_MWSKZ",
						CUR_INVC."ZZ_SGTXT",
						CUR_INVC."ZZ_TXJCD",
						CUR_INVC."ZZ_XBLNR",
						CUR_INVC."ZZ_ZUONR_INV");

	--  		All valid records are inserted Invoice Condition table for SSP(Standalone Selling Price)         
				INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"BETRH",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE")
				    VALUES (CUR_INVC."SRCDOC_COMP",
							CUR_INVC."SRCDOC_LOGSYS",			
							CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."SRCDOC_ID",
							CUR_INVC."TIMESTAMP_UTC",
							CUR_INVC."CONDITION_TYPE",
							CUR_INVC."PL_ACCOUNT",
							CUR_INVC."TP",
							CUR_INVC."WAERS",
							CUR_INVC."AMT",
						    CUR_INVC."HWAER",
							CUR_INVC."CATEGORY",
							CUR_INVC."MAIN_CONDITION_TYPE");

		    END;
   
	--  	Insert PK of successfully processed Records into Local Temp Tables 
	--  	for Updating NDB_TS in corresponding Landing Tables records
	 		INSERT INTO #UPDATE_TV_INVC(
	   		 			ACCT_NUM,
	   		 			SERVICE_CD, 
						ITEM_ID, 
						SRCDOC_ID,
						RAI_ITEM_ID,
						BATCH_ID,
						EXTR_DT,
						PRIN_NUM,
						AGNT_NUM,
						VTG_ROW_ID
						)
				 VALUES ( CUR_INVC."ACCT_NUM",
		   		    	CUR_INVC."SERVICE_CD",
		   		    	CUR_INVC."ITEM_ID",
		   		    	CUR_INVC."SRCDOC_ID",
		   		    	CUR_INVC."ITEM_ID",
		   		    	:LV_BATCH_ID,
		   		    	CUR_INVC."EXTR_DT",
		   		    	CUR_INVC."PRIN_NUM",
		   		    	CUR_INVC."AGNT_NUM",
		   		    	CUR_INVC."VTG_ROW_ID");

			   		        
			   		        
			INSERT INTO	#UPDATE_EH_DELETION_MAIN_TV (SRCDOC_ID) 
				 SELECT "SRCDOC_ID" 
				   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN"
				  WHERE "HEADER_ID" = CUR_INVC."HEADER_ID"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
			   		
			INSERT INTO	#UPDATE_EH_DELETION_COND_TV (SRCDOC_ID) 
				 SELECT COND."SRCDOC_ID" 
				   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND" COND,
	                	(SELECT "SRCDOC_ID" 
	                	   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN"
					  	  WHERE "HEADER_ID" = CUR_INVC."HEADER_ID"
					  	    AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
							          												 		   		        		   	   
		END IF;
	
	END FOR;
																														   
	--------------------------------------------------------------------------------------------------
	-- Update NDB Tables
	-------------------------------------------------------------------------------------------------- 
			
    --  Updating the Source document Id, Reference Id, Header Id, Time indicator, RAI Item ID,Batch id 
	--  and RAI Timestamp in in NDB Invoice table for Term Contracts */
	  	
	  	 UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_TRANSACTIONS" A
		  FROM "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_TRANSACTIONS" A
		 INNER JOIN #UPDATE_TV_INVC B
		    ON (A.ACCT_NUM   = B.ACCT_NUM
		   AND A.TERM_DISQUALF_IND IS NULL
		   AND VIRTUAL_IND = 'X'
		   AND TERM_IND = 'TERM')
		   OR
		   (A.ACCT_NUM   = B.ACCT_NUM
		   AND A.SERVICE_CD = B.SERVICE_CD 
		   AND A.PRIN_NUM   = B.PRIN_NUM
		   AND A.AGNT_NUM   = B.AGNT_NUM
		   AND A.EXTR_DT    = B.EXTR_DT
		   AND A.VTG_ROW_ID = B.VTG_ROW_ID)
		   SET "BATCH_ID_INV"  = B."BATCH_ID",
			   "RAI_TS_INV"    = LV_CUR_UTC;
 
--   	   AND A.EXTR_DT    = B.EXTR_DT 
--		   AND A.VTG_ROW_ID = B.VTG_ROW_ID			   
			   
	--  Update Invoice Main Error Table
		UPDATE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH" A
		  FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH" A
		 INNER JOIN #UPDATE_EH_DELETION_MAIN_TV B
		    ON A.SRCDOC_ID=B.SRCDOC_ID
		   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 
		
	--  Update Invoice Cond Error Table
		UPDATE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH" A
		  FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH" A
		 INNER JOIN #UPDATE_EH_DELETION_COND_TV B
		    ON A.SRCDOC_ID=B.SRCDOC_ID
		   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 
				
	-------------------------------------------------------------------------------------------------
	-- Set Overall Status
	-------------------------------------------------------------------------------------------------- 
	
	--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
	--  executed successfully
		IF(LV_ERROR_FLAG = 'Y') THEN		
	
	     OP_STATUS := LC_ERROR_TEXT; 
				
		ELSE
	
	  	 OP_STATUS := LC_SUCCESS_TEXT; 	
					
		END IF;
	
	END;

END; 	

 