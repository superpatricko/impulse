PROCEDURE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::SP_COMM_CUST_LOAD"
(IN P_DATE_FROM NVARCHAR(8), IN P_DATE_TO NVARCHAR(8),IN P_LOB NVARCHAR(3), OUT OT_STATUS NVARCHAR(1000))  
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA 
	AS
BEGIN
-- Procedure Title : SP_COMM_CUST_LOAD
--
-- Created By      : BC_EZ07674(Suresh Konidala)          Date :02/12/2016
-- 
-- Procedure Description : 
--						1.Data will be processed for all the LOB customer Common 
--						  Customer data.
--			      		2.This is a stored procedure designed to load data from the 
--						  Harmonization View (Calculation view) CA_COMM_CUSTOMER_VW to 
--                        the NDB table COMM_CUST.
-- Project :Bell Canada
-- 
-- Release :R1/IFRS
--------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------
-- Modification Number          :<Assign Some Number> 
-- Description of Changes Made> :<Description of Changes>       
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------
DECLARE LV_CUR_UTC 				TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE LV_ERROR_FLAG 			NVARCHAR(1) := 'N';
DECLARE LC_ERROR_TEXT 			NVARCHAR(120) 
            					DEFAULT 'OUT STATUS IS 1 : PROCEDURE 
            			IFRS_R1.COMMON_COMP.NDB_COMMON::SP_COMM_CUST_LOAD UPDATE EXECUTION FAILED';
DECLARE LC_SUCCESS_TEXT 		NVARCHAR(120) 
								DEFAULT 'OUT STATUS IS 0 : PROCEDURE 
					IFRS_R1.COMMON_COMP.NDB_COMMON::SP_COMM_CUST_LOAD UPDATE EXECUTION SUCCESSFUL';
					
								
--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_COMM_CUSTOMER FOR
	   SELECT
		 "CUSTOMER_NUMBER",
		 "SUBSCRIBER_NUMBER",
		 "KUNNR_SID",
		 "NAG",
		 "MARKET_SEGMENT",
		 "ONEBILL_NUM",
		 "PORTFOLIO_CUST_FLAG",
		 "LOB",
		 "BILL_SRC_SYSTEM",
		 "CRD",
		 "DDST",
		 "CUSTOMER_NAME",
		 "CUSTOMER_SEGMENT",
		 "CUSTOMER_LOCATION",
		 "CUSTOMER_REGION",
		 "CUSTOMER_COUNTRY",
		 "CUSTOMER_STATUS",
		 "BRAND",
		 "ACC_TYPE",
		 "ACC_SUB_TYPE",
		 "MODIFIED_TS" 
	FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_COMM_CUSTOMER"
		(PLACEHOLDER."$$P_DATE_FROM$$" => :P_DATE_FROM,
		PLACEHOLDER."$$P_DATE_TO$$" => :P_DATE_TO,
		PLACEHOLDER."$$P_LOB$$" => :P_LOB);
		
	
		
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION ("CUSTOMER_NUMBER" NVARCHAR(35), "SUBSCRIBER_NUMBER" NVARCHAR(35), "LOB" NVARCHAR(3));
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------  

FOR COMM_CUST AS C_COMM_CUSTOMER DO
	--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
	  -- Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 	
	   
	     -- Do Nothing. Exception Handled to ensure SP does not get terminated 
	
 	  END;
	
   	  -- Insert record into error table
	  INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::COMM_CUST_EH"
		   	("CUSTOMER_NUMBER",
			 "SUBSCRIBER_NUMBER",
			 --"KUNNR_SID",
			 "NAG",
			 "MARKET_SEGMENT",
			 "ONEBILL_NUM",
			 "PORTFOLIO_CUST_FLAG",
			 "LOB",
			 "BILL_SRC_SYSTEM",
			 "CRD",
			 "DDST",
			 "CUSTOMER_NAME",
			 "CUSTOMER_SEGMENT",
			 "CUSTOMER_LOCATION",
			 "CUSTOMER_REGION",
			 "CUSTOMER_COUNTRY",
			 "CUSTOMER_STATUS",
			 "BRAND",
			 "ACC_TYPE",
			 "ACC_SUB_TYPE",
			 "MODIFIED_TS",
			 "ERROR_CODE",
			 "TECHNICAL_MESSAGE",
			 "ERROR_CREATE_TS")
	  VALUES( COMM_CUST."CUSTOMER_NUMBER",
			  COMM_CUST."SUBSCRIBER_NUMBER",
			  --COMM_CUST."KUNNR_SID",
			  COMM_CUST."NAG",
			  COMM_CUST."MARKET_SEGMENT",
			  COMM_CUST."ONEBILL_NUM",
			  COMM_CUST."PORTFOLIO_CUST_FLAG",
			  COMM_CUST."LOB",
			  COMM_CUST."BILL_SRC_SYSTEM",
			  COMM_CUST."CRD",
			  COMM_CUST."DDST",
			  COMM_CUST."CUSTOMER_NAME",
			  COMM_CUST."CUSTOMER_SEGMENT",
			  COMM_CUST."CUSTOMER_LOCATION",
			  COMM_CUST."CUSTOMER_REGION",
			  COMM_CUST."CUSTOMER_COUNTRY",
			  COMM_CUST."CUSTOMER_STATUS",
			  COMM_CUST."BRAND",
			  COMM_CUST."ACC_TYPE",
			  COMM_CUST."ACC_SUB_TYPE",
			  COMM_CUST."MODIFIED_TS",
			  ::SQL_ERROR_CODE,
			  ::SQL_ERROR_MESSAGE,
			  LV_CUR_UTC); 
			   	    
	  LV_ERROR_FLAG := 'Y';    
	END;
	
	UPSERT "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::COMM_CUST" 
	(
	 "CUSTOMER_NUMBER",
	 "SUBSCRIBER_NUMBER",
	 --"KUNNR_SID",
	 "NAG",
	 "MARKET_SEGMENT",
	 "ONEBILL_NUM",
	 "PORTFOLIO_CUST_FLAG",
	 "LOB",
	 "BILL_SRC_SYSTEM",
	 "CRD",
	 "DDST",
	 "CUSTOMER_NAME",
	 "CUSTOMER_SEGMENT",
	 "CUSTOMER_LOCATION",
	 "CUSTOMER_REGION",
	 "CUSTOMER_COUNTRY",
	 "CUSTOMER_STATUS",
	 "BRAND",
	 "ACC_TYPE",
	 "ACC_SUB_TYPE",
	 "MODIFIED_TS" 
	)
	VALUES( 
	 COMM_CUST."CUSTOMER_NUMBER",
	 COMM_CUST."SUBSCRIBER_NUMBER",
	 --COMM_CUST."KUNNR_SID",
	 COMM_CUST."NAG",
	 COMM_CUST."MARKET_SEGMENT",
	 COMM_CUST."ONEBILL_NUM",
	 COMM_CUST."PORTFOLIO_CUST_FLAG",
	 COMM_CUST."LOB",
	 COMM_CUST."BILL_SRC_SYSTEM",
	 COMM_CUST."CRD",
	 COMM_CUST."DDST",
	 LEFT(COMM_CUST."CUSTOMER_NAME",40),
	 COMM_CUST."CUSTOMER_SEGMENT",
	 COMM_CUST."CUSTOMER_LOCATION",
	 COMM_CUST."CUSTOMER_REGION",
	 COMM_CUST."CUSTOMER_COUNTRY",
	 COMM_CUST."CUSTOMER_STATUS",
	 COMM_CUST."BRAND",
	 COMM_CUST."ACC_TYPE",
	 COMM_CUST."ACC_SUB_TYPE",
	 COMM_CUST."MODIFIED_TS"
	)
	WITH PRIMARY KEY; 
	 
	
	INSERT INTO #UPDATE_EH_DELETION
			      ("CUSTOMER_NUMBER", "SUBSCRIBER_NUMBER", "LOB") 
		   VALUES (COMM_CUST."CUSTOMER_NUMBER", COMM_CUST."SUBSCRIBER_NUMBER", COMM_CUST."LOB");
END FOR ;

--------------------------------------------------------------------------------------------------
--  Update Error Table
--------------------------------------------------------------------------------------------------

	UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::COMM_CUST_EH" A
    FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::COMM_CUST_EH" A 
    INNER JOIN #UPDATE_EH_DELETION B
    ON  A."CUSTOMER_NUMBER"         =   B."CUSTOMER_NUMBER"
    AND A."SUBSCRIBER_NUMBER"		=   B."SUBSCRIBER_NUMBER"
    AND A."LOB"						=   B."LOB"
    SET (DELETE_DATE, DELETED)      =   (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

       OT_STATUS := LC_ERROR_TEXT;
			
    ELSE
 
  	   OT_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;          
END ;  