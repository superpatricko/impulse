PROCEDURE "RAI_HP"."IFRS_R1.HP.RAI_HP::SP_RAI_HP_NM1_ORDR"
(IP_DATE DATE,
IN IP_BAN NVARCHAR(1000),
 OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS
BEGIN 
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_RAI_HP_NM1_ORDR
-- Created By      : BC_EY99601(Alagar)       
-- Create Date     : 28-01-2017
-- Description     : This procedure will create RAI Order Main and Condition Items based on 
--					 NDB Home Phone Order data.
--   				 The Order RAI Items will be created:
--		 			 	1. Every month in case of M2M contracts.
--						2. In case of Modification events which are:
--							a. Price Change
--							b. Plan Change
--							c. Suspension of the services
--							d. Termination of a contract.
				    
--   				 If the Batch ID is blank in the NDB order, then it will create RAI item at T0. 
--   

--   				 Based on the Bill Cycle, it will create RAI item for T1... T24. 
--   				 If the time indicator in NDB is T0, then it will create RAI for T1.
--   				 If the time indicator in NDB is T1, then it will create RAI for T2.
--   				 This procedure will cover both order creation and order modifcation
--   				 for term contract, SSP and TP will be calcualted for the entire contract period
--   				 if the contracts gets modified in between the billing cycle, the SSP and TP 
--					 for the contract  modification will be calculated based on the pro-rated.
                           
--   				 This Procedure has 2 parameters:
--					   	1. The date parameter 'IP_DATE': Using this date paramter,
--					   	   RAI item	can be created for past records(if it is required).
-- 					    2. The  OP_STATUS parametere : This parameter give the status of the 
-- 						   Procedure whether it is  success or failure

-- 					  HP_NM1_ORDR_MAIN_EH and HP_NM1_ORDR_COND_EH Table : Will be used to trace the errors

-- 					  FREQUENCY OF PROCEDURE EXECUTION: Daily
		
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- M O D I F I C A T I O N   H I S T O R Y
----------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
-- 08/08/2017  | BC_EZ23103       | CR 283 - Update to process the records based on input parameter as IP_BAN 
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- Description Of the changes 
----------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>        
----------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

	DECLARE LV_BATCH_ID       		INTEGER;
	DECLARE LV_COUNT                INTEGER;
	DECLARE LV_CUR_UTC 				TIMESTAMP := CURRENT_TIMESTAMP;
--DECLARE LV_CUR_UTC_TIME 		DECIMAL(15,2) 
--	                                := TO_DECIMAL(TO_CHAR(CURRENT_UTCTIMESTAMP,'YYYYMMDDHHMISS'),15,2);
	DECLARE LC_SQL_ERROR            NVARCHAR(40) DEFAULT 'SQL_EXCEPTION : SIBLING ERROR';                                                                
	DECLARE CURRENT_ERROR		    NVARCHAR(100);
	DECLARE ERROR_TAB 			    TABLE (ERROR_CODE NVARCHAR(100));
	DECLARE RECORD_COUNT		    INTEGER;
	DECLARE i					    INTEGER;
	DECLARE IP_BAN_LIST             NVARCHAR(1000);                              
	DECLARE LV_ERROR_FLAG 		    NVARCHAR(1) := 'N';
	DECLARE LC_ERROR_TEXT 		    NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
	DECLARE LC_SUCCESS_TEXT 	    NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';

	
--------------------------------------------------------------------------------------------------
-- 	Cursors Declaration
--------------------------------------------------------------------------------------------------
	TEMP_RAI_TABLE_TEMP = 
	     SELECT "BAN",
				"CC_REF_ID",
				"SUBSCRIBER_NUMBER",
				"SOC_CODE",
				"FEATURE_CODE",
				"TIME_IND",
				"ITEM_RATE",
				"CC_START_DT",
				"POB_EFFV_DATE",
				"CC_BILL_DAY",
				"POB_END_DATE",
				"REFERENCE_ID",
				"SRCDOC_ID",
				"CC_MOD_IND",
				"KUNNR_SID",
				"BILL_DT",
				"CC_TIME_IND",
				"CC_END_DT",
				"CC_RAI_ITEM_ID",
				"CC_SRCDOC_ID",
				"SRCDOC_COMP",
				"SRCDOC_LOGSYS",
				"SRCDOC_TYPE",
				"REFERENCE_TYPE",
				"BUKRS",
				"WAERS",
				"RECEIV_ACCOUNT",
				"CC_X_NEGATIVE",
				"CC_CATEGORY",
				"CC_MAIN_COND_TYPE",
				"CC_QUANTITY",
				"CC_QUANTITY_UNIT",
				"CC_BILREL",
				"ITEM_INCEPTION_DT",
				"CONTRACT_INCEPTION_DT",
				"CC_ZZ_BKTXT",
				"CC_ZZ_XBLNR",
				"GL_ACCOUNT_NUMBER",
				"CC_PL_ACCOUNT",
				"CC_ZZ_MWSKZ",
				"CC_ZZ_AUFNR",
				"CC_ZZ_ZUONR",
				"CC_ZZ_ICHKONT",
				"CC_ZZ_KOSTL",
				"CC_ZZ_SGTXT",
				"CC_ZZ_LEGACY",
				"CC_ZZ_BUKRS",                        	 
				"CC_ZZ_VBUND",
				"CC_ZZ_TXJCD",
				"CC_ZZBILLER",
				"CC_ZZBUVIEW",
				"CC_ZZ_BRANDACT",
				"CHARGE_TYPE",
				"POB_TYPE",
				"VALUE_RELEVANT",                        	 
				"CC_ZZ_PAOBJNR",
				"CC_SSP",
				"CC_TP",
				"ERROR_STATUS",
		        "ERROR_CODE",
		        "SOC_SEQ_NUM",
		        "SERV_FTR_SEQ_NO",
		        "SUBSCRIBER_STATUS",
		        "TRANS_DT",
		        "CC_SIBLING_ERROR",
		        "SSP",
		        "TP",
		        to_decimal("CC_TIMESTAMP",15,0) TIMESTAMP_DT
		   FROM "_SYS_BIC"."IFRS_R1.HP.RAI_HP/CA_HP_NM1_ORDR_SIBLING_CHECK"
	            (PLACEHOLDER."$$IP_BILL_DAY$$" => :IP_DATE);
--------------------------------------------------------------------------------------------------
--      FILTER BANs as per CR_283
--------------------------------------------------------------------------------------------------
	
IF IP_BAN IS NULL THEN
 	IP_BAN_LIST := '1=1';
ELSE
 IP_BAN_LIST := 'BAN IN('||:IP_BAN||')';
END IF;

TEMP_RAI_TABLE = APPLY_FILTER (:TEMP_RAI_TABLE_TEMP,:IP_BAN_LIST);	     

		 
	BEGIN
	
--------------------------------------------------------------------------------------------------
--      Cursors Declaration
--------------------------------------------------------------------------------------------------
	
		DECLARE CURSOR C_RAI_ORDR FOR SELECT * FROM :TEMP_RAI_TABLE;
		
		DECLARE CURSOR C_PARENT_RAI_ORDR FOR 
			SELECT "CC_REF_ID" 
			  FROM :TEMP_RAI_TABLE 
			 WHERE "CC_SIBLING_ERROR" = '0' 
			   AND "ERROR_STATUS"     = '0' 
		  GROUP BY "CC_REF_ID";
--------------------------------------------------------------------------------------------------
--      Create a Batch ID for RAI processing
-------------------------------------------------------------------------------------------------- 
		
	    SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI_BATCH_ID".NEXTVAL INTO LV_BATCH_ID FROM DUMMY;	
		 
--------------------------------------------------------------------------------------------------
--      Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 							 
	
	    CREATE LOCAL TEMPORARY TABLE #UPDATE_HP_NM1_ORDER(
			BAN 	          		NVARCHAR(9), 
			SUBSCRIBER_NUMBER 		NVARCHAR(30), 
			SOC_CODE         		NVARCHAR(20), 
			FEATURE_CODE      		NVARCHAR(6),
			SRCDOC_ID         		NVARCHAR(35),
			REFERENCE_ID      		NVARCHAR(30),
			RAI_ITEM_ID       		NVARCHAR(15),
			BILL_DATE         		DATE,
			TIME_IND          		NVARCHAR(3),
			MOD_IND          		NVARCHAR(1),
			"SOC_SEQ_NUM"			DECIMAL(11,0),
			"SERV_FTR_SEQ_NO" 		DECIMAL(11,0),
			"SUBSCRIBER_STATUS"		VARCHAR(1),
			"TRANS_DT"				DATE,
		    "ITEM_INCEPTION_DT"		DATE,
		    "POB_EFFV_DATE" 		DATE,
			BATCH_ID          		INTEGER,
			TIMESTAMP_UTC           DECIMAL(15,0));
	
	    CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_MAIN (SRCDOC_ID NVARCHAR(35));
	
	    CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_COND (SRCDOC_ID NVARCHAR(35));
	
	
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 
	
	    FOR CUR_ORDER AS C_RAI_ORDR DO
	
--          Define Exit Handler
			DECLARE EXIT HANDLER FOR SQLEXCEPTION 
			BEGIN AUTONOMOUS TRANSACTION 
	
--            	Define Exit Handler
		        DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		        BEGIN AUTONOMOUS TRANSACTION 
		
--                Do Nothing. Exception Handled to ensure SP does not get terminated
	      
	            END;
				
	
--              Insert record into HP NM1 ORDER main error table
			    INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_EH"(
							"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_BATCH_ID",		 			 			 			 
							"XNEGATIVE_ITEM",			 			 		 			 		
							"ZZ_BKTXT",
							"ZZ_XBLNR",			 
							"ZZ_MWSKZ",
							"ZZ_AUFNR",
							"ZZ_ZUONR",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_SGTXT",
							"ZZ_LEGACY",
							"ZZ_BUKRS",			 
							"ZZ_VBUND",
							"ZZ_TXJCD",
							"ZZ_BILLER",
							"ZZ_BU_VIEW",
							"ZZ_BRANDACT",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"VALUE_RELEVANT",			 
							"ZZ_PAOBJNR",
							"ERROR_CODE",
							"TECHNICAL_MESSAGE",
							"ERROR_CREATE_TS",
							"RAR_PROCESSED")  
					VALUES (CUR_ORDER."SRCDOC_COMP",
					 		CUR_ORDER."SRCDOC_LOGSYS",
					 		CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."TIMESTAMP_DT",--"LV_CUR_UTC_TIME",
							CUR_ORDER."BAN",
							CUR_ORDER."CC_RAI_ITEM_ID",
							CUR_ORDER."REFERENCE_TYPE",
							CUR_ORDER."CC_REF_ID",
							CUR_ORDER."KUNNR_SID",
							CUR_ORDER."BUKRS",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_QUANTITY",
							CUR_ORDER."CC_QUANTITY_UNIT",
							CUR_ORDER."CC_BILREL",
							CUR_ORDER."CC_START_DT",
							CUR_ORDER."CC_END_DT",
							CUR_ORDER."RECEIV_ACCOUNT",
							CUR_ORDER."CONTRACT_INCEPTION_DT",
							:LV_BATCH_ID,
							CUR_ORDER."CC_X_NEGATIVE",
							CUR_ORDER."CC_ZZ_BKTXT",
							CUR_ORDER."CC_ZZ_XBLNR",
							CUR_ORDER."CC_ZZ_MWSKZ",
							CUR_ORDER."CC_ZZ_AUFNR",
							CUR_ORDER."CC_ZZ_ZUONR",
							CUR_ORDER."CC_ZZ_ICHKONT",
							CUR_ORDER."CC_ZZ_KOSTL",
							CUR_ORDER."CC_ZZ_SGTXT",
							CUR_ORDER."CC_ZZ_LEGACY",
							CUR_ORDER."CC_ZZ_BUKRS",
							CUR_ORDER."CC_ZZ_VBUND",
							CUR_ORDER."CC_ZZ_TXJCD",
							CUR_ORDER."CC_ZZBILLER",
							CUR_ORDER."CC_ZZBUVIEW",
							CUR_ORDER."CC_ZZ_BRANDACT",
							CUR_ORDER."CHARGE_TYPE",
							CUR_ORDER."POB_TYPE",
							CUR_ORDER."VALUE_RELEVANT",
							CUR_ORDER."CC_ZZ_PAOBJNR",
							::SQL_ERROR_CODE,
							::SQL_ERROR_MESSAGE,
							LV_CUR_UTC,
							'N');
			
			
	--		    Insert into HP NM1 Order Condition error table for SSP(Standalone Saling Price) 
			    INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
				     		"ERROR_CODE",
						    "TECHNICAL_MESSAGE",
						    "ERROR_CREATE_TS",
							"RAR_PROCESSED") 
				   VALUES  (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",			
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
							CUR_ORDER."SSP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."ITEM_RATE",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
							::SQL_ERROR_CODE,
						    ::SQL_ERROR_MESSAGE,
						    :LV_CUR_UTC,
						    'N');		
									
	--		    Insert into HP NM1 Order Condition error Table for TP(Transaction Price)
				INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
				            "ERROR_CODE",
						    "TECHNICAL_MESSAGE",
						    "ERROR_CREATE_TS",
							"RAR_PROCESSED") 
					VALUES( CUR_ORDER."SRCDOC_COMP",
						    CUR_ORDER."SRCDOC_LOGSYS",
						    CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
							CUR_ORDER."TP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."ITEM_RATE",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_COND_TYPE",
							::SQL_ERROR_CODE,
						    ::SQL_ERROR_MESSAGE,
						    :LV_CUR_UTC,
						    'N');
			    
			    LV_ERROR_FLAG := 'Y';
	    
	        END;		    	
	    
	    
--    	    Check the Error Status of the Record. If Record is with Error, then send to Error Table
		    IF CUR_ORDER.CC_SIBLING_ERROR = '1' 
		    OR CUR_ORDER.ERROR_STATUS     = '1' 
		    THEN
	
--          Call the Stored Procedure to split the concatenated Error Messages into Error Rows
			CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_ORDER."ERROR_CODE",
				                                                               ERROR_TAB,
				                                                               RECORD_COUNT);
	
--              Loop through the Error Records
			    FOR i IN 1 .. :RECORD_COUNT DO
				
--		    	    Fetch the Error Code
				    CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
	
--                  All erroneous records are inserted into Order Main EH table
				    INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_EH"(
								"SRCDOC_COMP",			
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"HEADER_ID",
								"ITEM_ID",
								"REFERENCE_TYPE",
								"REFERENCE_ID",
								"KUNNR",
								"BUKRS",
								"WAERS",
								"QUANTITY",
								"QUANTITY_UNIT",
								"BILREL",
								"START_DATE",
								"END_DATE",
								"RECEIV_ACCOUNT",
								"INCEPTION_DATE",
								"ZZ_BATCH_ID",		 			 			 			 
								"XNEGATIVE_ITEM",			 			 		 			 		
								"ZZ_BKTXT",
								"ZZ_XBLNR",			 
								"ZZ_MWSKZ",
								"ZZ_AUFNR",
								"ZZ_ZUONR",
								"ZZ_ICHKONT",
								"ZZ_KOSTL",
								"ZZ_SGTXT",
								"ZZ_LEGACY",
								"ZZ_BUKRS",			 
								"ZZ_VBUND",
								"ZZ_TXJCD",
								"ZZ_BILLER",
								"ZZ_BU_VIEW",
								"ZZ_BRANDACT",
								"ZZ_MATNR",
								"ZZ_MATNR_GRP",
								"VALUE_RELEVANT",			 
								"ZZ_PAOBJNR",
							    "ERROR_CODE",
						        "ERROR_CREATE_TS")   
						VALUES(	CUR_ORDER."SRCDOC_COMP",
								CUR_ORDER."SRCDOC_LOGSYS",
								CUR_ORDER."SRCDOC_TYPE",
								CUR_ORDER."CC_SRCDOC_ID",
								CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
								CUR_ORDER."BAN",
								CUR_ORDER."CC_RAI_ITEM_ID",
								CUR_ORDER."REFERENCE_TYPE",
								CUR_ORDER."CC_REF_ID",
								CUR_ORDER."KUNNR_SID",
								CUR_ORDER."BUKRS",
								CUR_ORDER."WAERS",
								CUR_ORDER."CC_QUANTITY",
								CUR_ORDER."CC_QUANTITY_UNIT",
								CUR_ORDER."CC_BILREL",
								CUR_ORDER."CC_START_DT",
								CUR_ORDER."CC_END_DT",
								CUR_ORDER."RECEIV_ACCOUNT",
								CUR_ORDER."CONTRACT_INCEPTION_DT",
								:LV_BATCH_ID,
								CUR_ORDER."CC_X_NEGATIVE",
								CUR_ORDER."CC_ZZ_BKTXT",
								CUR_ORDER."CC_ZZ_XBLNR",
								CUR_ORDER."CC_ZZ_MWSKZ",
								CUR_ORDER."CC_ZZ_AUFNR",
								CUR_ORDER."CC_ZZ_ZUONR",
								CUR_ORDER."CC_ZZ_ICHKONT",
								CUR_ORDER."CC_ZZ_KOSTL",
								CUR_ORDER."CC_ZZ_SGTXT",
								CUR_ORDER."CC_ZZ_LEGACY",
								CUR_ORDER."CC_ZZ_BUKRS",
								CUR_ORDER."CC_ZZ_VBUND",
								CUR_ORDER."CC_ZZ_TXJCD",
								CUR_ORDER."CC_ZZBILLER",
								CUR_ORDER."CC_ZZBUVIEW",
								CUR_ORDER."CC_ZZ_BRANDACT",
								CUR_ORDER."CHARGE_TYPE",
								CUR_ORDER."POB_TYPE",
								CUR_ORDER."VALUE_RELEVANT",
								CUR_ORDER."CC_ZZ_PAOBJNR",
								:CURRENT_ERROR,
							 	LV_CUR_UTC);
							
--		    	    Insert into HP NM1 Order Condition error table for SSP(Standalone Saling Price) 
				 	INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH"(
								"SRCDOC_COMP",
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"CONDITION_TYPE",
								"PL_ACCOUNT",			
								"BETRW",
								"WAERS",
								"CATEGORY",
								"MAIN_COND_TYPE",
							    "ERROR_CODE",
						        "ERROR_CREATE_TS") 
						VALUES(	CUR_ORDER."SRCDOC_COMP",
								CUR_ORDER."SRCDOC_LOGSYS",			
								CUR_ORDER."SRCDOC_TYPE",
								CUR_ORDER."CC_SRCDOC_ID",
								CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
								CUR_ORDER."SSP",
								CUR_ORDER."CC_PL_ACCOUNT",
								CUR_ORDER."ITEM_RATE",
								CUR_ORDER."WAERS",
								CUR_ORDER."CC_CATEGORY",
								CUR_ORDER."CC_MAIN_COND_TYPE",
								:CURRENT_ERROR,
							 	LV_CUR_UTC);	
									
--		            Insert into HP NM1 Order Condition error Table for TP(Transaction Price)
					INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH"(
								"SRCDOC_COMP",
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"CONDITION_TYPE",
								"PL_ACCOUNT",
								"BETRW",
								"WAERS",
								"CATEGORY",
								"MAIN_COND_TYPE",
							    "ERROR_CODE",
						        "ERROR_CREATE_TS") 
					    VALUES(	CUR_ORDER."SRCDOC_COMP",
							    CUR_ORDER."SRCDOC_LOGSYS",
							    CUR_ORDER."SRCDOC_TYPE",
								CUR_ORDER."CC_SRCDOC_ID",
								CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
								CUR_ORDER."TP",
								CUR_ORDER."CC_PL_ACCOUNT",
								CUR_ORDER."ITEM_RATE",
								CUR_ORDER."WAERS",
								CUR_ORDER."CC_CATEGORY",
								CUR_ORDER."CC_MAIN_COND_TYPE",
								:CURRENT_ERROR,
							 	LV_CUR_UTC);	
	
--	                Set Error Flag				        
				    LV_ERROR_FLAG := 'Y';
				
			    END FOR;
			
--          Processing for Successful Records
	        ELSEIF CUR_ORDER.CC_SIBLING_ERROR = '0' 
		       AND CUR_ORDER.ERROR_STATUS     = '0'
		      THEN 
	
	        	BEGIN AUTONOMOUS TRANSACTION
	
--               	All valid records are inserted into HP NM1 Order Main Temporary table
				    INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_TT"(
								"SRCDOC_COMP",			
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"HEADER_ID",
								"ITEM_ID",
								"REFERENCE_TYPE",
								"REFERENCE_ID",
								"KUNNR",
								"BUKRS",
								"WAERS",
								"QUANTITY",
								"QUANTITY_UNIT",
								"BILREL",
								"START_DATE",
								"END_DATE",
								"RECEIV_ACCOUNT",
								"INCEPTION_DATE",
								"ZZ_BATCH_ID",		 			 			 			 
								"XNEGATIVE_ITEM",			 			 		 			 		
								"ZZ_BKTXT",
								"ZZ_XBLNR",			 
								"ZZ_MWSKZ",
								"ZZ_AUFNR",
								"ZZ_ZUONR",
								"ZZ_ICHKONT",
								"ZZ_KOSTL",
								"ZZ_SGTXT",
								"ZZ_LEGACY",
								"ZZ_BUKRS",			 
								"ZZ_VBUND",
								"ZZ_TXJCD",
								"ZZ_BILLER",
								"ZZ_BU_VIEW",
								"ZZ_BRANDACT",
								"ZZ_MATNR",
								"ZZ_MATNR_GRP",
								"VALUE_RELEVANT",			 
								"ZZ_PAOBJNR")  
						VALUES(	CUR_ORDER."SRCDOC_COMP",
								CUR_ORDER."SRCDOC_LOGSYS",
								CUR_ORDER."SRCDOC_TYPE",
								CUR_ORDER."CC_SRCDOC_ID",
								CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
								CUR_ORDER."BAN",
								CUR_ORDER."CC_RAI_ITEM_ID",
								CUR_ORDER."REFERENCE_TYPE",
								CUR_ORDER."CC_REF_ID",
								CUR_ORDER."KUNNR_SID",
								CUR_ORDER."BUKRS",
								CUR_ORDER."WAERS",
								CUR_ORDER."CC_QUANTITY",
								CUR_ORDER."CC_QUANTITY_UNIT",
								CUR_ORDER."CC_BILREL",								
								CUR_ORDER."CC_START_DT",
								CUR_ORDER."CC_END_DT",
								CUR_ORDER."RECEIV_ACCOUNT",
								CUR_ORDER."CONTRACT_INCEPTION_DT",								
								:LV_BATCH_ID,								
								CUR_ORDER."CC_X_NEGATIVE",
								CUR_ORDER."CC_ZZ_BKTXT",
								CUR_ORDER."CC_ZZ_XBLNR",
								CUR_ORDER."CC_ZZ_MWSKZ",
								CUR_ORDER."CC_ZZ_AUFNR",
								CUR_ORDER."CC_ZZ_ZUONR",
								CUR_ORDER."CC_ZZ_ICHKONT",
								CUR_ORDER."CC_ZZ_KOSTL",
								CUR_ORDER."CC_ZZ_SGTXT",
								CUR_ORDER."CC_ZZ_LEGACY",
								CUR_ORDER."CC_ZZ_BUKRS",
								CUR_ORDER."CC_ZZ_VBUND",
								CUR_ORDER."CC_ZZ_TXJCD",
								CUR_ORDER."CC_ZZBILLER",
								CUR_ORDER."CC_ZZBUVIEW",
								CUR_ORDER."CC_ZZ_BRANDACT",
								CUR_ORDER."CHARGE_TYPE",
								CUR_ORDER."POB_TYPE",
								CUR_ORDER."VALUE_RELEVANT",
								CUR_ORDER."CC_ZZ_PAOBJNR") ;
				
	--		        Insert into HP NM1 Order Condition Temporary table for SSP(Standalone Saling Price) 
				    INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_TT"(
								"SRCDOC_COMP",
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"CONDITION_TYPE",
								"PL_ACCOUNT",			
								"BETRW",
								"WAERS",
								"CATEGORY",
								"MAIN_COND_TYPE",
								"BATCH_ID")
					    VALUES(	CUR_ORDER."SRCDOC_COMP",
							    CUR_ORDER."SRCDOC_LOGSYS",
							    CUR_ORDER."SRCDOC_TYPE",
								CUR_ORDER."CC_SRCDOC_ID",
								CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
								CUR_ORDER."SSP",
								CUR_ORDER."CC_PL_ACCOUNT",
								CUR_ORDER."ITEM_RATE",
								CUR_ORDER."WAERS",
								CUR_ORDER."CC_CATEGORY",
								CUR_ORDER."CC_MAIN_COND_TYPE",
							 	LV_BATCH_ID);							
				
	--		        Insert into HP NM1 Order Condition Temporary Table for TP(Transaction Price)
				    INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_TT"(
								"SRCDOC_COMP",
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"CONDITION_TYPE",
								"PL_ACCOUNT",
								"BETRW",
								"WAERS",
								"CATEGORY",
								"MAIN_COND_TYPE",
								"BATCH_ID")
						VALUES(	CUR_ORDER."SRCDOC_COMP",
							    CUR_ORDER."SRCDOC_LOGSYS",
							    CUR_ORDER."SRCDOC_TYPE",
								CUR_ORDER."CC_SRCDOC_ID",
								CUR_ORDER."TIMESTAMP_DT",--:LV_CUR_UTC_TIME,
								CUR_ORDER."TP",
								CUR_ORDER."CC_PL_ACCOUNT",
								CUR_ORDER."ITEM_RATE",
								CUR_ORDER."WAERS",
								CUR_ORDER."CC_CATEGORY",
								CUR_ORDER."CC_MAIN_COND_TYPE",
							 	LV_BATCH_ID);		
			    END;
			
		    END IF;
		
	    END FOR;
		
	    FOR CUR_PARENT AS C_PARENT_RAI_ORDR DO
	
--  	    Define Exit Handler
		    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		    BEGIN AUTONOMOUS TRANSACTION 
	
--            Define Exit Handler
		      DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		      BEGIN AUTONOMOUS TRANSACTION 
		
--              Do Nothing. Exception Handled to ensure SP does not get terminated
	      
	          END;
	
--    	  	    Insert record into HP NM1 ORDER main error table
	        	INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_EH"(
				            "SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_BATCH_ID",		 			 			 			 
							"XNEGATIVE_ITEM",			 			 		 			 		
							"ZZ_BKTXT",
							"ZZ_XBLNR",			 
							"ZZ_MWSKZ",
							"ZZ_AUFNR",
							"ZZ_ZUONR",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_SGTXT",
							"ZZ_LEGACY",
							"ZZ_BUKRS",			 
							"ZZ_VBUND",
							"ZZ_TXJCD",
							"ZZ_BILLER",
							"ZZ_BU_VIEW",
							"ZZ_BRANDACT",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"VALUE_RELEVANT",			 
							"ZZ_PAOBJNR",
						    "RAR_PROCESSED",
						    "ERROR_CODE",
			                "TECHNICAL_MESSAGE",
					        "ERROR_CREATE_TS")
					SELECT  "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",--:LV_CUR_UTC_TIME,
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							:LV_BATCH_ID,
							"XNEGATIVE_ITEM",
							"ZZ_BKTXT",
							"ZZ_XBLNR",
							"ZZ_MWSKZ",
							"ZZ_AUFNR",
							"ZZ_ZUONR",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_SGTXT",
							"ZZ_LEGACY",
							"ZZ_BUKRS",
							"ZZ_VBUND",
							"ZZ_TXJCD",
							"ZZ_BILLER",
							"ZZ_BU_VIEW",
							"ZZ_BRANDACT",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"VALUE_RELEVANT",
							"ZZ_PAOBJNR",
							'N',
							::SQL_ERROR_CODE,
							::SQL_ERROR_MESSAGE,
							LV_CUR_UTC
					  FROM  "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_TT" 
					  WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
						AND "ZZ_BATCH_ID"   = LV_BATCH_ID;
			
			
	--  	    All records of the corresponding parent is inserted into Order Condition EH Table for 
	--          SSP(Standalone Saling Price) and TP(Transaction Price) 
			    INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH"(
				            "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"RAR_PROCESSED",
							"ERROR_CODE",
			  				"TECHNICAL_MESSAGE",
							"ERROR_CREATE_TS")
					SELECT  COND."SRCDOC_COMP",
							COND."SRCDOC_LOGSYS",			
							COND."SRCDOC_TYPE",
							COND."SRCDOC_ID",
							COND."TIMESTAMP_UTC",--:LV_CUR_UTC_TIME,
							COND."CONDITION_TYPE",							
							COND."PL_ACCOUNT",							
							COND."BETRW",
							COND."WAERS",
							COND."CATEGORY",
							COND."MAIN_COND_TYPE",
							'N',
							::SQL_ERROR_CODE,
							::SQL_ERROR_MESSAGE,
							LV_CUR_UTC
			          FROM  (SELECT *
			                   FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_TT" 
							  WHERE "BATCH_ID" = LV_BATCH_ID) COND,
							(SELECT "SRCDOC_ID" 
							   FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_TT" 
							  WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
								AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
					  WHERE COND."SRCDOC_ID"=MAIN."SRCDOC_ID";					
			    
			    LV_ERROR_FLAG := 'Y';
	    
	        END;	
	        	    	
	--  	Check if any siblings of the parent for the current batch execution is in ORDR MAIN Error table.
	--   	If Yes move the entire dataset of the corresponding parent into MAIN error and COND error tables. 		
		 	SELECT COUNT(SRCDOC_ID)
		 	  INTO LV_COUNT 
		 	  FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_EH"
		 	 WHERE "REFERENCE_ID"=CUR_PARENT."CC_REF_ID"
		 	   AND "ZZ_BATCH_ID" = :LV_BATCH_ID;
	 		 		
	-- 	    All valid records are inserted into HP NM1 Order Main table
			IF :LV_COUNT > 0 THEN
	--      There's an error move all RAI MAIN to EH
				INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_EH"(
					        "SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_BATCH_ID",		 			 			 			 
							"XNEGATIVE_ITEM",			 			 		 			 		
							"ZZ_BKTXT",
							"ZZ_XBLNR",			 
							"ZZ_MWSKZ",
							"ZZ_AUFNR",
							"ZZ_ZUONR",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_SGTXT",
							"ZZ_LEGACY",
							"ZZ_BUKRS",			 
							"ZZ_VBUND",
							"ZZ_TXJCD",
							"ZZ_BILLER",
							"ZZ_BU_VIEW",
							"ZZ_BRANDACT",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"VALUE_RELEVANT",			 
							"ZZ_PAOBJNR",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
					SELECT	"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_BATCH_ID",		 			 			 			 
							"XNEGATIVE_ITEM",			 			 		 			 		
							"ZZ_BKTXT",
							"ZZ_XBLNR",			 
							"ZZ_MWSKZ",
							"ZZ_AUFNR",
							"ZZ_ZUONR",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_SGTXT",
							"ZZ_LEGACY",
							"ZZ_BUKRS",			 
							"ZZ_VBUND",
							"ZZ_TXJCD",
							"ZZ_BILLER",
							"ZZ_BU_VIEW",
							"ZZ_BRANDACT",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"VALUE_RELEVANT",			 
							"ZZ_PAOBJNR",
							LC_SQL_ERROR,
						    LV_CUR_UTC 
					  FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_TT" 
					 WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
				       AND "ZZ_BATCH_ID"   = LV_BATCH_ID;
					
	--          All records of the corresponding parent is inserted into Order Condition error Table for 
	--          SSP(Standalone Saling Price) and TP(Transaction price)	 
					
				INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
							"ERROR_CREATE_TS")
					 SELECT "SRCDOC_COMP",
							"SRCDOC_LOGSYS",			
							"SRCDOC_TYPE",
							COND."SRCDOC_ID",
							COND."TIMESTAMP_UTC",--LV_CUR_UTC_TIME,
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							LC_SQL_ERROR,
							LV_CUR_UTC
				     FROM  (SELECT * 
				              FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_TT"
							 WHERE "BATCH_ID" = LV_BATCH_ID) COND,
						   (SELECT "SRCDOC_ID" 
						      FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_TT" 
							 WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
							   AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
							 WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
				   
	--          Set Error Flag				        
				LV_ERROR_FLAG := 'Y';	  
		
	--	    Processing of successful records(none of the siblings of a corresponding parent are in error)			
			ELSEIF :LV_COUNT = 0 THEN
				
				BEGIN AUTONOMOUS TRANSACTION
		
	--              All valid records are inserted into Order Main table 		
					INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN"(
							    "SRCDOC_COMP",			
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"HEADER_ID",
								"ITEM_ID",
								"REFERENCE_TYPE",
								"REFERENCE_ID",
								"KUNNR",
								"BUKRS",
								"WAERS",
								"QUANTITY",
								"QUANTITY_UNIT",
								"BILREL",
								"START_DATE",
								"END_DATE",
								"RECEIV_ACCOUNT",
								"INCEPTION_DATE",
								"ZZ_BATCH_ID",		 			 			 			 
								"XNEGATIVE_ITEM",			 			 		 			 		
								"ZZ_BKTXT",
								"ZZ_XBLNR",			 
								"ZZ_MWSKZ",
								"ZZ_AUFNR",
								"ZZ_ZUONR",
								"ZZ_ICHKONT",
								"ZZ_KOSTL",
								"ZZ_SGTXT",
								"ZZ_LEGACY",
								"ZZ_BUKRS",			 
								"ZZ_VBUND",
								"ZZ_TXJCD",
								"ZZ_BILLER",
								"ZZ_BU_VIEW",
								"ZZ_BRANDACT",
								"ZZ_MATNR",
								"ZZ_MATNR_GRP",
								"VALUE_RELEVANT",			 
								"ZZ_PAOBJNR") 
						SELECT	"SRCDOC_COMP",			
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"HEADER_ID",
								"ITEM_ID",
								"REFERENCE_TYPE",
								"REFERENCE_ID",
								"KUNNR",
								"BUKRS",
								"WAERS",
								"QUANTITY",
								"QUANTITY_UNIT",
								"BILREL",
								"START_DATE",
								"END_DATE",
								"RECEIV_ACCOUNT",
								"INCEPTION_DATE",
								"ZZ_BATCH_ID",		 			 			 			 
								"XNEGATIVE_ITEM",			 			 		 			 		
								"ZZ_BKTXT",
								"ZZ_XBLNR",			 
								"ZZ_MWSKZ",
								"ZZ_AUFNR",
								"ZZ_ZUONR",
								"ZZ_ICHKONT",
								"ZZ_KOSTL",
								"ZZ_SGTXT",
								"ZZ_LEGACY",
								"ZZ_BUKRS",			 
								"ZZ_VBUND",
								"ZZ_TXJCD",
								"ZZ_BILLER",
								"ZZ_BU_VIEW",
								"ZZ_BRANDACT",
								"ZZ_MATNR",
								"ZZ_MATNR_GRP",
								"VALUE_RELEVANT",			 
								"ZZ_PAOBJNR"
						   FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_TT" 
						  WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"	
						    AND "ZZ_BATCH_ID"   = LV_BATCH_ID;
		
	--  	        All valid records are inserted ORDER Condition table for SSP(Standalone Saling Price) and TP(Transaction Price)         
					INSERT INTO "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND"(
								"SRCDOC_COMP",
								"SRCDOC_LOGSYS",
								"SRCDOC_TYPE",
								"SRCDOC_ID",
								"TIMESTAMP_UTC",
								"CONDITION_TYPE",
								"PL_ACCOUNT",
								"BETRW",
								"WAERS",
								"CATEGORY",
								"MAIN_COND_TYPE")
					     SELECT COND."SRCDOC_COMP",
								COND."SRCDOC_LOGSYS",
								COND."SRCDOC_TYPE",
								COND."SRCDOC_ID",
								COND."TIMESTAMP_UTC",--LV_CUR_UTC_TIME,
								COND."CONDITION_TYPE",
								COND."PL_ACCOUNT",			
								COND."BETRW",
								COND."WAERS",
								COND."CATEGORY",
								COND."MAIN_COND_TYPE"
			              FROM (SELECT * 
			                      FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_TT"
						         WHERE "BATCH_ID"   = LV_BATCH_ID) COND,
						       (SELECT "SRCDOC_ID" 
						          FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_TT" 
						         WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
						           AND "ZZ_BATCH_ID"   = LV_BATCH_ID) MAIN 
						         WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
			
	            END; -- END Autonomous transaction
					
	--          Insert PK of successfully processed Records into Local Temp Tables 
	--          for Updating NDB_TS in corresponding Landing Tables records
			    INSERT INTO #UPDATE_HP_NM1_ORDER(
							BAN, 
							SUBSCRIBER_NUMBER, 
							SOC_CODE, 
							FEATURE_CODE,
							SRCDOC_ID,
							REFERENCE_ID,
							RAI_ITEM_ID,
							BILL_DATE,
							TIME_IND,
							MOD_IND,
							"SOC_SEQ_NUM",
							"SERV_FTR_SEQ_NO",
							"SUBSCRIBER_STATUS",
							"TRANS_DT",
							"ITEM_INCEPTION_DT",
							"POB_EFFV_DATE",
							BATCH_ID,
							TIMESTAMP_UTC)
					SELECT  A."BAN",
				   			A."SUBSCRIBER_NUMBER",
				   		    A."SOC_CODE",
				   		    A."FEATURE_CODE",
				   		    A."CC_SRCDOC_ID",
				   		    A."CC_REF_ID",
				   		    A."CC_RAI_ITEM_ID",
				   		    A."CC_BILL_DAY",
				   		    A."CC_TIME_IND",
				   		    A."CC_MOD_IND",
							A."SOC_SEQ_NUM",
							A."SERV_FTR_SEQ_NO",
							A."SUBSCRIBER_STATUS",
							A."TRANS_DT",
							A."ITEM_INCEPTION_DT",
							A."POB_EFFV_DATE",
				   		    B."ZZ_BATCH_ID",
				   		    A."TIMESTAMP_DT"
				   	   FROM :TEMP_RAI_TABLE A,
				   		    (SELECT "REFERENCE_ID","ZZ_BATCH_ID" 
				   		       FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN"
				   		      WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
				   		    	AND "ZZ_BATCH_ID"  = :LV_BATCH_ID) B 
						      WHERE  A."CC_REF_ID" = B."REFERENCE_ID";	        		   		        
					   		       
				INSERT INTO	#UPDATE_EH_DELETION_MAIN (SRCDOC_ID) 
			         SELECT "SRCDOC_ID" 
			           FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN"
					  WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
					    AND "ZZ_BATCH_ID" = :LV_BATCH_ID;
					   		
				INSERT INTO	#UPDATE_EH_DELETION_COND (SRCDOC_ID) 
					 SELECT COND."SRCDOC_ID" 
					   FROM	"RAI_HP"."IFRS_R1.HP.RAI_HP::HP_ORDR_COND" COND,
			               	(SELECT "SRCDOC_ID" 
			               	   FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN" 
							  WHERE "REFERENCE_ID" = CUR_PARENT."CC_REF_ID"
							    AND "ZZ_BATCH_ID" = :LV_BATCH_ID) MAIN 
						      WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
	        END IF;
	    	    
	    END FOR;	   	
						          												 		   		 
--------------------------------------------------------------------------------------------------
--  Update NDB Tables
-------------------------------------------------------------------------------------------------- 
			
	
	--  Updating the Source document Id, Reference Id, Header Id, Time indicator, RAI Item ID,Batch id, 
	--  Bill day,Modification indicator and RAI Timestamp in NDB HP NM1 order table for M2M Contracts as well as Optional POB of Term Contracts 
	
		UPDATE "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_ORDER" A
		FROM "NDB_HP"."IFRS_R1.HP.NDB_HP::HP_NM1_ORDER" A
		INNER JOIN #UPDATE_HP_NM1_ORDER B
		ON  A."BAN"               = B."BAN"
		AND A."SUBSCRIBER_NUMBER" = B."SUBSCRIBER_NUMBER"
		AND A."SOC_CODE"          = B."SOC_CODE"
		AND A."FEATURE_CODE"      = B."FEATURE_CODE"
		AND A."SOC_SEQ_NUM"       = B."SOC_SEQ_NUM"
		AND A."SERV_FTR_SEQ_NO"   = B."SERV_FTR_SEQ_NO"
		AND A."SUBSCRIBER_STATUS" = B."SUBSCRIBER_STATUS"
		AND A."TRANS_DT" 		  = B."TRANS_DT"
		AND A."ITEM_INCEPTION_DT" = B."ITEM_INCEPTION_DT"
		AND A."POB_EFFV_DATE"     = B."POB_EFFV_DATE"	
		SET "SRCDOC_ID"     = B."SRCDOC_ID",
			"REFERENCE_ID"  = B."REFERENCE_ID",			
			"HEADER_ID"     = B."BAN",			
			"RAI_ITEM_ID"   = B."RAI_ITEM_ID",
			"BATCH_ID"      = B."BATCH_ID",
			"BILL_DT"       = B."BILL_DATE",
			"TIME_IND"      = B."TIME_IND",
			"MOD_IND"       = B."MOD_IND",
			"TIMESTAMP_UTC" = B."TIMESTAMP_UTC",
			"RAI_TS"        = :LV_CUR_UTC
	    WHERE A.MOD_IND IS NULL;  		
								 
		-- Update Order Main Error Table
		
		UPDATE "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_EH" A
		  FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_MAIN_EH" A
		 INNER JOIN #UPDATE_EH_DELETION_MAIN B
		    ON A.SRCDOC_ID=B.SRCDOC_ID
		   SET  (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 
		
		-- Update Order Cond Error Table
		
		UPDATE "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH" A
		  FROM "RAI_HP"."IFRS_R1.HP.RAI_HP::HP_NM1_ORDR_COND_EH" A
		 INNER JOIN #UPDATE_EH_DELETION_COND B
		    ON A.SRCDOC_ID=B.SRCDOC_ID
		   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 
					
-------------------------------------------------------------------------------------------------
--      Set Overall Status
-------------------------------------------------------------------------------------------------- 
		
--      STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--      executed successfully
		IF(LV_ERROR_FLAG = 'Y') THEN		
			
			OP_STATUS := LC_ERROR_TEXT; 
						
		ELSE
			
			OP_STATUS := LC_SUCCESS_TEXT; 	
							
		END IF;
													            
	END;
	
END ; 