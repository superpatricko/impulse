PROCEDURE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::SP_INT_BILL_ACC"  
(IN IP_EFF_DT DATE,
OUT OP_STATUS NVARCHAR(100)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	AS
BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_INT_BILL_ACC
-- Created By      : BC_EY94106 (Rohit)       
-- Create Date     : 05-17-2017
-- Description     : Data Inserted using Calculation View - CA_INT_BILL_ACC
--                   to NDB Table - INT_BILL_ACC Using this stored procedure.
--                   SP_INT_BILL_ACC includes data from table INT_BILL_ACC.
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

-- New variables for version sequence check
DECLARE LV_LOOP_ERROR_FLAG        INTEGER := 0;
DECLARE LV_PREV_RECORD		      NVARCHAR(9) := NULL;

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR INT_BILL_ACC FOR
SELECT 
		"ODS_SYST_CD", 
		"BAN", 
		"CUSTOMER_ID", 
		"ACCOUNT_TYPE", 
		"ACCOUNT_SUB_TYPE", 
		"BILL_CYCLE", 
		"BAN_STATUS", 
		"STATUS_ACTV_CODE", 
		"STATUS_ACTV_RSN_CODE", 
		"STATUS_LAST_DATE", 
		"START_SERVICE_DATE", 
		"STATUS_ISSUE_DATE", 
		"DEFAULT_SUB_MARKET", 
		"HIERARCHY_ID", 
		"HOME_PROVINCE", 
		"NATIONAL_ACCOUNT", 
		"TELCO_ID", 
		"CONSO_STATUS", 
		"CONSO_DATE", 
		"NGR_CUST_ID", 
		"EFF_DT",
		"REFERENCE_EFFECTIVE_DT", 
		"REFERENCE_EXPIRY_DT", 
		"FLAG_EXISTING_RECORD", 
		"EFFECTIVE_DATE_PREV_DAY",
		"ERROR_STATUS",
		"ERROR_CODE"
FROM "_SYS_BIC"."IFRS_R1.INTERNET.NDB_INTERNET/CA_INT_BILL_ACC"
(PLACEHOLDER."$$IP_EFF_DT$$" => :IP_EFF_DT)
	ORDER BY "BAN", "REFERENCE_EFFECTIVE_DT";
	
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 


CREATE LOCAL TEMPORARY TABLE #UPDATE_INT_BILL_ACC (BAN NVARCHAR(9),EFF_DT DATE);
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION (BAN NVARCHAR(100),REFERENCE_EFFECTIVE_DT NVARCHAR(100));
        	  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------

FOR BILLACC	AS INT_BILL_ACC DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 	
	   
	-- Do Nothing. Exception Handled to ensure SP does not get terminated 
	
 	  END;
	
		 -- Insert record into error table
		   		
			INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC_EH"(
					"ODS_SYST_CD", 
					"BAN", 
					"CUSTOMER_ID", 
					"ACCOUNT_TYPE", 
					"ACCOUNT_SUB_TYPE", 
					"BILL_CYCLE", 
					"BAN_STATUS", 
					"STATUS_ACTV_CODE", 
					"STATUS_ACTV_RSN_CODE", 
					"STATUS_LAST_DATE", 
					"START_SERVICE_DATE", 
					"STATUS_ISSUE_DATE", 
					"DEFAULT_SUB_MARKET", 
					"HIERARCHY_ID", 
					"HOME_PROVINCE", 
					"NATIONAL_ACCOUNT", 
					"TELCO_ID", 
					"CONSO_STATUS", 
					"CONSO_DATE", 
					"NGR_CUST_ID", 
					"REFERENCE_EFFECTIVE_DT", 
					"REFERENCE_EXPIRY_DT",
					"INSERT_TS", 
					"ERROR_CODE",
					"TECHNICAL_MESSAGE",
					"ERROR_CREATE_TS")
						
             VALUES(BILLACC."ODS_SYST_CD", 
					BILLACC."BAN", 
					BILLACC."CUSTOMER_ID", 
					BILLACC."ACCOUNT_TYPE", 
					BILLACC."ACCOUNT_SUB_TYPE", 
					BILLACC."BILL_CYCLE", 
					BILLACC."BAN_STATUS", 
					BILLACC."STATUS_ACTV_CODE", 
					BILLACC."STATUS_ACTV_RSN_CODE", 
					BILLACC."STATUS_LAST_DATE", 
					BILLACC."START_SERVICE_DATE", 
					BILLACC."STATUS_ISSUE_DATE", 
					BILLACC."DEFAULT_SUB_MARKET", 
					BILLACC."HIERARCHY_ID", 
					BILLACC."HOME_PROVINCE", 
					BILLACC."NATIONAL_ACCOUNT", 
					BILLACC."TELCO_ID", 
					BILLACC."CONSO_STATUS", 
					BILLACC."CONSO_DATE", 
					BILLACC."NGR_CUST_ID", 
					BILLACC."EFF_DT", 
					BILLACC."REFERENCE_EXPIRY_DT",
					LV_CUR_UTC,
					::SQL_ERROR_CODE,
					::SQL_ERROR_MESSAGE,
					LV_CUR_UTC);
					    
		  	   LV_ERROR_FLAG := 'Y';
		       LV_LOOP_ERROR_FLAG := 1;
	         
	  END;       
   
    -- FOR CLEARING THE VARIABLES

	IF ((LV_PREV_RECORD IS NULL ) OR (BILLACC."BAN" != LV_PREV_RECORD)) THEN

		LV_LOOP_ERROR_FLAG := 0;
		LV_PREV_RECORD := "BILLACC"."BAN";
					 	   
    END IF;
    
   
   --  Check the Error Status of the Record. If Record is with Error, then send to Error Table
	IF BILLACC.ERROR_STATUS = '1'  THEN
	
	
	--  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(BILLACC."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

     -- Loop through the Error Records
		FOR i IN 1 .. :RECORD_COUNT DO
			
		 -- Fetch the Error Code
			CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
         -- Insert into the Error Table
 			INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC_EH"(
					"ODS_SYST_CD", 
					"BAN", 
					"CUSTOMER_ID", 
					"ACCOUNT_TYPE", 
					"ACCOUNT_SUB_TYPE", 
					"BILL_CYCLE", 
					"BAN_STATUS", 
					"STATUS_ACTV_CODE", 
					"STATUS_ACTV_RSN_CODE", 
					"STATUS_LAST_DATE", 
					"START_SERVICE_DATE", 
					"STATUS_ISSUE_DATE", 
					"DEFAULT_SUB_MARKET", 
					"HIERARCHY_ID", 
					"HOME_PROVINCE", 
					"NATIONAL_ACCOUNT", 
					"TELCO_ID", 
					"CONSO_STATUS", 
					"CONSO_DATE", 
					"NGR_CUST_ID", 
					"REFERENCE_EFFECTIVE_DT", 
					"REFERENCE_EXPIRY_DT", 
					"INSERT_TS",
					"ERROR_CODE",
					"ERROR_CREATE_TS")
						
             VALUES(BILLACC."ODS_SYST_CD", 
					BILLACC."BAN", 
					BILLACC."CUSTOMER_ID", 
					BILLACC."ACCOUNT_TYPE", 
					BILLACC."ACCOUNT_SUB_TYPE", 
					BILLACC."BILL_CYCLE", 
					BILLACC."BAN_STATUS", 
					BILLACC."STATUS_ACTV_CODE", 
					BILLACC."STATUS_ACTV_RSN_CODE", 
					BILLACC."STATUS_LAST_DATE", 
					BILLACC."START_SERVICE_DATE", 
					BILLACC."STATUS_ISSUE_DATE", 
					BILLACC."DEFAULT_SUB_MARKET", 
					BILLACC."HIERARCHY_ID", 
					BILLACC."HOME_PROVINCE", 
					BILLACC."NATIONAL_ACCOUNT", 
					BILLACC."TELCO_ID", 
					BILLACC."CONSO_STATUS", 
					BILLACC."CONSO_DATE", 
					BILLACC."NGR_CUST_ID", 
					BILLACC."EFF_DT", 
					BILLACC."REFERENCE_EXPIRY_DT",
					"LV_CUR_UTC",
					:CURRENT_ERROR,
					LV_CUR_UTC);    
        END FOR ;
    
    -- Set Error Flag				        
			LV_ERROR_FLAG := 'Y';
		    LV_LOOP_ERROR_FLAG := 1;
	    
    
    ELSE 
         IF BILLACC.ERROR_STATUS = '0' THEN
	    
	        IF LV_LOOP_ERROR_FLAG = 1 THEN
	        
             -- Insert into the Error Table
 			   INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC_EH"(
					"ODS_SYST_CD", 
					"BAN", 
					"CUSTOMER_ID", 
					"ACCOUNT_TYPE", 
					"ACCOUNT_SUB_TYPE", 
					"BILL_CYCLE", 
					"BAN_STATUS", 
					"STATUS_ACTV_CODE", 
					"STATUS_ACTV_RSN_CODE", 
					"STATUS_LAST_DATE", 
					"START_SERVICE_DATE", 
					"STATUS_ISSUE_DATE", 
					"DEFAULT_SUB_MARKET", 
					"HIERARCHY_ID", 
					"HOME_PROVINCE", 
					"NATIONAL_ACCOUNT", 
					"TELCO_ID", 
					"CONSO_STATUS", 
					"CONSO_DATE", 
					"NGR_CUST_ID", 
					"REFERENCE_EFFECTIVE_DT", 
					"REFERENCE_EXPIRY_DT", 
					"INSERT_TS",
					"ERROR_CODE",
					"ERROR_CREATE_TS")
						
               VALUES(BILLACC."ODS_SYST_CD", 
					BILLACC."BAN", 
					BILLACC."CUSTOMER_ID", 
					BILLACC."ACCOUNT_TYPE", 
					BILLACC."ACCOUNT_SUB_TYPE", 
					BILLACC."BILL_CYCLE", 
					BILLACC."BAN_STATUS", 
					BILLACC."STATUS_ACTV_CODE", 
					BILLACC."STATUS_ACTV_RSN_CODE", 
					BILLACC."STATUS_LAST_DATE", 
					BILLACC."START_SERVICE_DATE", 
					BILLACC."STATUS_ISSUE_DATE", 
					BILLACC."DEFAULT_SUB_MARKET", 
					BILLACC."HIERARCHY_ID", 
					BILLACC."HOME_PROVINCE", 
					BILLACC."NATIONAL_ACCOUNT", 
					BILLACC."TELCO_ID", 
					BILLACC."CONSO_STATUS", 
					BILLACC."CONSO_DATE", 
					BILLACC."NGR_CUST_ID", 
					BILLACC."EFF_DT", 
					BILLACC."REFERENCE_EXPIRY_DT",
					"LV_CUR_UTC",
					'PREVIOUS VERSION IN ERROR',
					LV_CUR_UTC); 	        
   ELSE
 
     --   Processing for Successful Records   
     --   If Record exists in the Target NDB Table
     IF BILLACC.FLAG_EXISTING_RECORD = 'U' THEN
     
     	BEGIN AUTONOMOUS TRANSACTION  

          --     Update the target NDB table
	          UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC" NDB 
	   		     SET  NDB.REFERENCE_EXPIRY_DT 	 	      = BILLACC.EFFECTIVE_DATE_PREV_DAY,
	 		          NDB."MODIFIED_TS"                   = LV_CUR_UTC
			   WHERE  NDB.BAN                             = BILLACC.BAN
			     AND  NDB.REFERENCE_EXPIRY_DT             = '99991231';
			 
--    Insert the Incoming new record
			   	INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC"(
					"ODS_SYST_CD", 
					"BAN", 
					"CUSTOMER_ID", 
					"ACCOUNT_TYPE", 
					"ACCOUNT_SUB_TYPE", 
					"BILL_CYCLE", 
					"BAN_STATUS", 
					"STATUS_ACTV_CODE", 
					"STATUS_ACTV_RSN_CODE", 
					"STATUS_LAST_DATE", 
					"START_SERVICE_DATE", 
					"STATUS_ISSUE_DATE", 
					"DEFAULT_SUB_MARKET", 
					"HIERARCHY_ID", 
					"HOME_PROVINCE", 
					"NATIONAL_ACCOUNT", 
					"TELCO_ID", 
					"CONSO_STATUS", 
					"CONSO_DATE", 
					"NGR_CUST_ID", 
					"REFERENCE_EFFECTIVE_DT", 
					"REFERENCE_EXPIRY_DT",					
					"INSERT_TS")
												
            VALUES (BILLACC."ODS_SYST_CD", 
					BILLACC."BAN", 
					BILLACC."CUSTOMER_ID", 
					BILLACC."ACCOUNT_TYPE", 
					BILLACC."ACCOUNT_SUB_TYPE", 
					BILLACC."BILL_CYCLE", 
					BILLACC."BAN_STATUS", 
					BILLACC."STATUS_ACTV_CODE", 
					BILLACC."STATUS_ACTV_RSN_CODE", 
					BILLACC."STATUS_LAST_DATE", 
					BILLACC."START_SERVICE_DATE", 
					BILLACC."STATUS_ISSUE_DATE", 
					BILLACC."DEFAULT_SUB_MARKET", 
					BILLACC."HIERARCHY_ID", 
					BILLACC."HOME_PROVINCE", 
					BILLACC."NATIONAL_ACCOUNT", 
					BILLACC."TELCO_ID", 
					BILLACC."CONSO_STATUS", 
					BILLACC."CONSO_DATE", 
					BILLACC."NGR_CUST_ID", 
					BILLACC."EFF_DT", 
					BILLACC."REFERENCE_EXPIRY_DT",
					LV_CUR_UTC);
					
END;

--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records	

			   INSERT INTO #UPDATE_INT_BILL_ACC
						   ("BAN", 
						    "EFF_DT")
				    VALUES (BILLACC."BAN", 
					 		BILLACC."EFF_DT");

						   					   	    		
			   INSERT INTO #UPDATE_EH_DELETION
						   ("BAN", 
						    "REFERENCE_EFFECTIVE_DT")
				     VALUES (BILLACC."BAN", 
					 		BILLACC."EFF_DT");

    ELSEIF BILLACC.FLAG_EXISTING_RECORD = 'I' THEN

    	BEGIN AUTONOMOUS TRANSACTION	          
--    Insert the Incoming new record
			   	INSERT INTO "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC"(
					"ODS_SYST_CD", 
					"BAN", 
					"CUSTOMER_ID", 
					"ACCOUNT_TYPE", 
					"ACCOUNT_SUB_TYPE", 
					"BILL_CYCLE", 
					"BAN_STATUS", 
					"STATUS_ACTV_CODE", 
					"STATUS_ACTV_RSN_CODE", 
					"STATUS_LAST_DATE", 
					"START_SERVICE_DATE", 
					"STATUS_ISSUE_DATE", 
					"DEFAULT_SUB_MARKET", 
					"HIERARCHY_ID", 
					"HOME_PROVINCE", 
					"NATIONAL_ACCOUNT", 
					"TELCO_ID", 
					"CONSO_STATUS", 
					"CONSO_DATE", 
					"NGR_CUST_ID", 
					"REFERENCE_EFFECTIVE_DT", 
					"REFERENCE_EXPIRY_DT",					
					"INSERT_TS")
												
            VALUES (BILLACC."ODS_SYST_CD", 
					BILLACC."BAN", 
					BILLACC."CUSTOMER_ID", 
					BILLACC."ACCOUNT_TYPE", 
					BILLACC."ACCOUNT_SUB_TYPE", 
					BILLACC."BILL_CYCLE", 
					BILLACC."BAN_STATUS", 
					BILLACC."STATUS_ACTV_CODE", 
					BILLACC."STATUS_ACTV_RSN_CODE", 
					BILLACC."STATUS_LAST_DATE", 
					BILLACC."START_SERVICE_DATE", 
					BILLACC."STATUS_ISSUE_DATE", 
					BILLACC."DEFAULT_SUB_MARKET", 
					BILLACC."HIERARCHY_ID", 
					BILLACC."HOME_PROVINCE", 
					BILLACC."NATIONAL_ACCOUNT", 
					BILLACC."TELCO_ID", 
					BILLACC."CONSO_STATUS", 
					BILLACC."CONSO_DATE", 
					BILLACC."NGR_CUST_ID", 
					BILLACC."REFERENCE_EFFECTIVE_DT", 
					BILLACC."REFERENCE_EXPIRY_DT",
					LV_CUR_UTC);

	END;
			
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records	

			   INSERT INTO #UPDATE_INT_BILL_ACC
						   ("BAN", 
						    "EFF_DT")
				    VALUES (BILLACC."BAN", 
					 		BILLACC."EFF_DT");

						   					   	    		
			   INSERT INTO #UPDATE_EH_DELETION
						   ("BAN", 
						    "REFERENCE_EFFECTIVE_DT")
				     VALUES (BILLACC."BAN", 
					 		 BILLACC."EFF_DT");
					
        END IF;
     
      END IF;
  
    END IF;
  
  END IF;  
 
END FOR;


--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::INT_BILL_ACC
UPDATE "LAND"."IFRS_R1.LAND::INT_BILL_ACC" A
  FROM "LAND"."IFRS_R1.LAND::INT_BILL_ACC" A 
 INNER JOIN #UPDATE_INT_BILL_ACC B 
    ON A."BAN"        = B."BAN"
   AND A."EFF_DT"     = B."EFF_DT" 
   SET NDB_TS         = LV_CUR_UTC
 WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC_EH" A
  FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_BILL_ACC_EH" A 
 INNER JOIN #UPDATE_EH_DELETION B
    ON A."BAN"                     = B."BAN"
   AND A."REFERENCE_EFFECTIVE_DT"  = B."REFERENCE_EFFECTIVE_DT" 
   SET (DELETE_DATE, DELETED)      = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

       OP_STATUS := LC_ERROR_TEXT;
			
    ELSE
 
  	   OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;						
	