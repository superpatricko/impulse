PROCEDURE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::SP_NDB_MARA_INT" (IN P_SEGMENT NVARCHAR(1),
IN P_START_VALID_FROM_DT DATE,
IN P_END_VALID_FROM_DT DATE  
)   
	LANGUAGE SQLSCRIPT 
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA 
	AS
	V_PROC_ID 	   		INTEGER			:= 10001;
	V_PROC_NAME 		NVARCHAR(30)	:= 'SP_NDB_MARA_INT';
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 	BEGIN
   /***************************** 
	 Nested Begin Block for insert
 	*****************************/
 	
 	DECLARE EXIT HANDLER FOR SQLEXCEPTION 

		BEGIN AUTONOMOUS TRANSACTION   
		
			INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA_SQL_ERR"
			(
			 "PROCEDURE_ID","PROCEDURE_NAME", "ERROR_CODE", "ERROR_MESSAGE", "START_END_TIME"
			)
			VALUES
			(
			V_PROC_ID,
			V_PROC_NAME,
			::SQL_ERROR_CODE,
			'While NDB_MARA Insert : '|| ::SQL_ERROR_MESSAGE ,
			CURRENT_TIMESTAMP  
			);
			
		COMMIT;
		RESIGNAL;
		END;
		

		-- INTERNET ORDER STARTS HERE
		

		IF P_SEGMENT = 'O' OR LENGTH(TRIM(COALESCE(P_SEGMENT,''))) = 0  THEN

			IF P_START_VALID_FROM_DT IS NOT NULL AND P_END_VALID_FROM_DT IS NOT NULL THEN
	
				UPSERT "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
				(CHARGE_TYPE,
				CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				FEATURE_CODE,
				LOB,
				SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				VALID_FROM,
				DELFLAG,
				ERRMARADESC,
				ERRMINIDESC,
				MARADATE,
				MECCRETCODE,
				MINMARADATE,
				NDBDATE)
				SELECT 
				CHARGE_TYPE,
				COALESCE(CODE,' ') CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				COALESCE(FEATURE_CODE,' ') FEATURE_CODE,
				LOB,
				COALESCE(SOURCE_SYSTEM,' ') SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				TO_DATE(VALID_FROM) VALID_FROM,
				NULL DELFLAG,
				NULL ERRMARADESC,
				NULL ERRMINIDESC,
				NULL MARADATE,
				NULL MECCRETCODE,
				NULL MINMARADATE,
				TO_CHAR(CURRENT_DATE || ' ' || CURRENT_TIME,'YYYY-MM-DD HH24:MI:SS') NDBDATE
				FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER"
				WHERE VALID_FROM BETWEEN TO_DATE(P_START_VALID_FROM_DT) AND TO_DATE(P_END_VALID_FROM_DT);
				
				/*
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"
				SET PMP_TS = CURRENT_DATE
				WHERE (COALESCE(SOC,'X'),EFFECTIVE_DATE) IN
				(
					SELECT COALESCE(CODE,'X'), VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER"
					WHERE VALID_FROM BETWEEN TO_DATE(P_START_VALID_FROM_DT) AND TO_DATE(P_END_VALID_FROM_DT)
				)
				AND REC_IND ='I' AND HW_CLASS IS NOT NULL;
				*/
				
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"
				FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"
				INNER JOIN (
					SELECT DISTINCT COALESCE(CODE,'X') CODE, VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER"
					WHERE VALID_FROM BETWEEN TO_DATE(P_START_VALID_FROM_DT) AND TO_DATE(P_END_VALID_FROM_DT)
				)
				ON ( CODE = COALESCE(SOC,'X') AND VALID_FROM = EFFECTIVE_DATE )
				SET PMP_TS = CURRENT_TIMESTAMP
				WHERE REC_IND ='I' AND HW_CLASS IS NOT NULL AND PMP_TS IS NULL;
				
				COMMIT; 
				
			ELSE
				
				UPSERT "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
				(CHARGE_TYPE,
				CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				FEATURE_CODE,
				LOB,
				SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				VALID_FROM,
				DELFLAG,
				ERRMARADESC,
				ERRMINIDESC,
				MARADATE,
				MECCRETCODE,
				MINMARADATE,
				NDBDATE)
				SELECT 
				CHARGE_TYPE, 
				COALESCE(CODE,' ') CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				COALESCE(FEATURE_CODE,'') FEATURE_CODE,
				LOB,
				COALESCE(SOURCE_SYSTEM,'') SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				TO_DATE(VALID_FROM) VALID_FROM,
				NULL DELFLAG,
				NULL ERRMARADESC,
				NULL ERRMINIDESC,
				NULL MARADATE,
				NULL MECCRETCODE,
				NULL MINMARADATE,
				TO_CHAR(CURRENT_DATE || ' ' || CURRENT_TIME,'YYYY-MM-DD HH24:MI:SS') NDBDATE
				FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER";
				
				/*
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"
				SET PMP_TS = CURRENT_DATE
				WHERE (COALESCE(SOC,'X'),EFFECTIVE_DATE) IN
				(
					SELECT COALESCE(CODE,'X'), VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER"
				)
				AND REC_IND ='I' AND HW_CLASS IS NOT NULL;
				*/
				
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"
				FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_ORDER"
				INNER JOIN (
					SELECT DISTINCT COALESCE(CODE,'X') CODE, VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER"
				)
				ON ( CODE = COALESCE(SOC,'X') AND VALID_FROM = EFFECTIVE_DATE )
				SET PMP_TS = CURRENT_TIMESTAMP
				WHERE REC_IND ='I' AND HW_CLASS IS NOT NULL AND PMP_TS IS NULL;
				
				COMMIT;
				
			END IF;
			
			COMMIT;
		
		
		-- INSERTING BILLING STARTS HERE
		
		IF P_SEGMENT = 'B' OR LENGTH(TRIM(COALESCE(P_SEGMENT,''))) = 0  THEN

			IF P_START_VALID_FROM_DT IS NOT NULL AND P_END_VALID_FROM_DT IS NOT NULL THEN
		
				
				UPSERT "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
				(CHARGE_TYPE,
				CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				FEATURE_CODE,
				LOB,
				SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				VALID_FROM,
				DELFLAG,
				ERRMARADESC,
				ERRMINIDESC,
				MARADATE,
				MECCRETCODE,
				MINMARADATE,
				NDBDATE)
				SELECT 
				CHARGE_TYPE,
				COALESCE(BIL.CODE,' ') CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				COALESCE(FEATURE_CODE,FEATURE_CD,' ') FEATURE_CODE,
				LOB,
				COALESCE(SOURCE_SYSTEM,' ') SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				TO_DATE(VALID_FROM) VALID_FROM,
				NULL DELFLAG,
				NULL ERRMARADESC, 
				NULL ERRMINIDESC,
				NULL MARADATE,
				NULL MECCRETCODE,
				NULL MINMARADATE,
				TO_CHAR(CURRENT_DATE || ' ' || CURRENT_TIME,'YYYY-MM-DD HH24:MI:SS') NDBDATE
				FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING" BIL
				LEFT OUTER JOIN (
					SELECT  CODE, MAX(FEATURE_CODE) OVER (PARTITION BY CODE) FEATURE_CD 
					FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER"
					WHERE FEATURE_CODE IS NOT NULL
					) ORD
				ON (BIL.CODE = ORD.CODE) 
				WHERE BIL.CODE IS NOT NULL AND VALID_FROM BETWEEN TO_DATE(P_START_VALID_FROM_DT) AND TO_DATE(P_END_VALID_FROM_DT);
				
				
				UPSERT "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA_ERR"
				(CHARGE_TYPE,
				CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				FEATURE_CODE,
				LOB,
				SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				VALID_FROM,
				DELFLAG,
				ERRMARADESC,
				ERRMINIDESC,
				MARADATE,
				MECCRETCODE,
				MINMARADATE,
				NDBDATE)
				SELECT 
				CHARGE_TYPE,
				COALESCE(BIL.CODE,'') CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				COALESCE(FEATURE_CODE,'') FEATURE_CODE,
				LOB,
				COALESCE(SOURCE_SYSTEM,'') SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				TO_DATE(VALID_FROM) VALID_FROM,
				NULL DELFLAG,
				NULL ERRMARADESC, 
				NULL ERRMINIDESC,
				NULL MARADATE,
				NULL MECCRETCODE,
				NULL MINMARADATE,
				TO_CHAR(CURRENT_DATE || ' ' || CURRENT_TIME,'YYYY-MM-DD HH24:MI:SS') NDBDATE
				FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING" BIL
				WHERE CODE IS NULL AND VALID_FROM BETWEEN TO_DATE(P_START_VALID_FROM_DT) AND TO_DATE(P_END_VALID_FROM_DT);				
				
				/*
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING"
				SET PMP_TS = CURRENT_DATE
				WHERE (COALESCE(CASE WHEN "SOC" IS NULL THEN "FEAT_CD" ELSE "SOC" END,'X'),ACTV_DT) IN 
				(
					SELECT COALESCE(CODE,'X') CODE, VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING" 
					WHERE VALID_FROM BETWEEN TO_DATE(P_START_VALID_FROM_DT) AND TO_DATE(P_END_VALID_FROM_DT)
				);
				*/
				
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING"
				FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING"
				INNER JOIN (
					SELECT DISTINCT COALESCE(CODE,'X') CODE,COALESCE(FEATURE_CODE,'X') FEATURE_CODE, VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING" 
					WHERE VALID_FROM BETWEEN TO_DATE(P_START_VALID_FROM_DT) AND TO_DATE(P_END_VALID_FROM_DT)
				)
				ON ( CODE = COALESCE(CASE WHEN "SOC" IS NULL THEN "FEAT_CD" ELSE "SOC" END,'X') AND VALID_FROM = ACTV_DT )
				SET PMP_TS = CURRENT_TIMESTAMP
				WHERE PMP_TS IS NULL;				
				
				COMMIT;				
				     
			ELSE 
				
				UPSERT "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
				(CHARGE_TYPE,
				CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				FEATURE_CODE,
				LOB,
				SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				VALID_FROM,
				DELFLAG,
				ERRMARADESC,
				ERRMINIDESC,
				MARADATE,
				MECCRETCODE,
				MINMARADATE,
				NDBDATE)
				SELECT 
				CHARGE_TYPE,
				COALESCE(BIL.CODE,' ') CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				COALESCE(FEATURE_CODE,FEATURE_CD,' ') FEATURE_CODE,
				LOB,
				COALESCE(SOURCE_SYSTEM,' ') SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				TO_DATE(VALID_FROM) VALID_FROM,
				NULL DELFLAG,
				NULL ERRMARADESC,
				NULL ERRMINIDESC,
				NULL MARADATE,
				NULL MECCRETCODE,
				NULL MINMARADATE,
				TO_CHAR(CURRENT_DATE || ' ' || CURRENT_TIME,'YYYY-MM-DD HH24:MI:SS') NDBDATE
				FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING" BIL 
				LEFT OUTER JOIN (
					SELECT  CODE, MAX(FEATURE_CODE) OVER (PARTITION BY CODE) FEATURE_CD 
					FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_ORDER"
					WHERE FEATURE_CODE IS NOT NULL
					) ORD
				ON (ORD.CODE = BIL.CODE) 
				WHERE BIL.CODE IS NOT NULL;
				
				
				UPSERT "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA_ERR"
				(CHARGE_TYPE,
				CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				FEATURE_CODE,
				LOB,
				SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				VALID_FROM,
				DELFLAG,
				ERRMARADESC,
				ERRMINIDESC,
				MARADATE,
				MECCRETCODE,
				MINMARADATE,
				NDBDATE)
				SELECT 
				CHARGE_TYPE,
				COALESCE(BIL.CODE,' ') CODE,
				CODE_BILLING,
				CODE_DESCRIPTION,
				CODE_ORDERING,
				CODE_TYPE,
				COALESCE(FEATURE_CODE,' ') FEATURE_CODE,
				LOB,
				COALESCE(SOURCE_SYSTEM,' ') SOURCE_SYSTEM,
				SOURCE_SYSTEM_BILLING,
				SOURCE_SYSTEM_ORDERING,
				TABLE_FLAG,
				TO_DATE(VALID_FROM) VALID_FROM,
				NULL DELFLAG,
				NULL ERRMARADESC,
				NULL ERRMINIDESC,
				NULL MARADATE,
				NULL MECCRETCODE,
				NULL MINMARADATE,
				TO_CHAR(CURRENT_DATE || ' ' || CURRENT_TIME,'YYYY-MM-DD HH24:MI:SS') NDBDATE
				FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING" BIL				
				WHERE BIL.CODE IS NULL;
				
				/*
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING"
				SET PMP_TS = CURRENT_DATE
				WHERE (COALESCE(CASE WHEN "SOC" IS NULL THEN "FEAT_CD" ELSE "SOC" END,'X'),ACTV_DT) IN 
				(
					SELECT COALESCE(CODE,'X') CODE, VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING"
				);
				*/
				
				UPDATE "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING"
				FROM "NDB_INTERNET"."IFRS_R1.INTERNET.NDB_INTERNET::INT_POSTBILLING"
				INNER JOIN (
					SELECT DISTINCT COALESCE(CODE,'X') CODE,COALESCE(FEATURE_CODE,'X') FEATURE_CODE, VALID_FROM FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_PRODUCT_INTERNET_BILLING" 
				)
				ON ( CODE = COALESCE(CASE WHEN "SOC" IS NULL THEN "FEAT_CD" ELSE "SOC" END,'X') AND VALID_FROM = ACTV_DT )
				SET PMP_TS = CURRENT_TIMESTAMP
				WHERE PMP_TS IS NULL;	
								
				COMMIT;
			END IF;
		END IF;
			
		-- INSERTING ERROR RECORDS IN NDB_MARA_ERR TABLE (WHOSE ERR DESC IS FILLLED OR MECCRETCODE = 04).
		
		INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA_ERR"
		(
		CHARGE_TYPE,CODE,CODE_BILLING,CODE_DESCRIPTION,CODE_ORDERING,CODE_TYPE,ERRMARADESC,ERRMINIDESC,FEATURE_CODE,LOB,MARADATE,
		NDBDATE,MINMARADATE,SOURCE_SYSTEM,SOURCE_SYSTEM_BILLING,SOURCE_SYSTEM_ORDERING,TABLE_FLAG,VALID_FROM,MECCRETCODE	
		)
		SELECT 
		CHARGE_TYPE,CODE,CODE_BILLING,CODE_DESCRIPTION,CODE_ORDERING,CODE_TYPE,ERRMARADESC,ERRMINIDESC,FEATURE_CODE,LOB,MARADATE,
		NDBDATE,MINMARADATE,SOURCE_SYSTEM,SOURCE_SYSTEM_BILLING,SOURCE_SYSTEM_ORDERING,TABLE_FLAG,VALID_FROM,MECCRETCODE
		FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
		WHERE LOB = 'INT'
		AND (ERRMINIDESC IS NOT NULL OR ERRMARADESC IS NOT NULL OR MECCRETCODE = '04') AND (DELFLAG IS NULL OR DELFLAG != 'X')
		and (CODE, FEATURE_CODE) NOT IN  (SELECT CODE, FEATURE_CODE FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA_ERR");
		
		COMMIT;
		
		-- SETTING DELFLAG AS 'X' WHERE ECC RETURN CODE IS FILLED i.e. '01', '02', '03'.		
		UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
		SET DELFLAG ='X'
		WHERE LOB = 'INT'
		AND MECCRETCODE IN ('01','02','03');
		
		COMMIT;
		
		-- SETTING ERRMARADESC = NULL AND ERRMINIDESC = NULL WHERE ECC RETURN CODE IS '04'.		
		--UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
		--SET ERRMARADESC = NULL , ERRMINIDESC = NULL
		--WHERE LOB = 'INT'
		--AND MECCRETCODE ='04' AND ERRMARADESC IS NOT NULL AND ERRMINIDESC IS NOT NULL;
		
		--COMMIT;
		
		-- DELETION OF RECORDS WHICH HAS NDBDATE OLDER THAN 'X' DAYS here X as 500.
		
		/*
		
		DELETE FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::NDB_MARA"
		WHERE LOB = 'INT' 
		AND NDBDATE <=ADD_DAYS(CURRENT_DATE, -500) AND DELFLAG ='X';
		
		*/
			
		END IF;
		
	END;
END;
