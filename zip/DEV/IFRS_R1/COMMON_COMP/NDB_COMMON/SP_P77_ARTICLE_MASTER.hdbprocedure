PROCEDURE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::SP_P77_ARTICLE_MASTER" 
(IN IP_CYCL_ID NVARCHAR(3),
OUT OP_STATUS NVARCHAR(100))  
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	AS

BEGIN	
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_P77_ARTICLE_MASTER
-- Created By      : BC_EY94137 (AKANKSHA SINGH)       
-- Create Date     : 11-05-2017
-- Description     : It is used to Upsert data in NDB Table.
--                   NDB_TS is updated in Landing Table         
--                   after data is loaded in NDB.
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Local Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

--------------------------------------------------------------------------------------------------
-- Cursors Declaration
-------------------------------------------------------------------------------------------------- 
DECLARE CURSOR C_P77_ARTCL_MASTER FOR
	   SELECT
			 "APPLE_EDI_PT_NUM",
			 "ART_DELN_IND",
			 "ART_DESC",
			 "ART_GTIN",
			 "ARTCL_NUM",
			 "ART_TY",
			 "ART_TY_DESC",
			 "ART_VLD_FROM_DT",
			 "ART_VLD_TO_DT",
			 "BMC_MDL_NUM",
			 "BRND",
			 "MERCH_CAT",
			 "MERCH_CAT_DESC",
			 "PROD_HIER",
			 "PROD_HIER_DESC",
			 "REF_VEND_PART_NUM",
			 "SUB_MERCH_CAT",
			 "UOM",
			 "VAL_CLASS",
			 "VEND",
			 "VEND_ART_NUM",
			 "ZNDC_DSCT_ELIG",
			 "CYCLE_NUM",
			 "INSERT_TS",
			 "FLAG_EXISTING_RECORD",
			 "REFERENCE_EFFECTIVE_DATE",
			 "REFERENCE_EXPIRY_DATE",
			 "CHAR_VAL1",
			 "CHAR_VAL2",
			 "CHAR_VAL3",
			 "ACTIVE_INDICATOR",
			 "EFFECTIVE_DATE_PREV_DAY"
	    FROM "_SYS_BIC"."IFRS_R1.COMMON_COMP.NDB_COMMON/CA_P77_ARTCL_MSTR"
			 (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID) 
			 ORDER BY "CYCLE_NUM";

--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
-------------------------------------------------------------------------------------------------- 

CREATE LOCAL TEMPORARY TABLE #UPDATE_ARTCL_MASTER ("ARTCL_NUM" NVARCHAR(18),VEND NVARCHAR(10),"CYCLE_NUM" NVARCHAR(3));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION ("ARTCL_NUM" NVARCHAR(18),VEND NVARCHAR(10));
        	  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
--------------------------------------------------------------------------------------------------  

FOR C_ARTCL AS C_P77_ARTCL_MASTER DO

--  Define Exit Handler
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
	
--    Define Exit Handler
	  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	  BEGIN AUTONOMOUS TRANSACTION 	
	   
	-- Do Nothing. Exception Handled to ensure SP does not get terminated 
	
 	  END;
	
		   -- Insert record into error table
		   	  INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ARTICLE_MASTER_EH"(
						  ARTCL_NUM,
						  ART_DESC,
						  ART_GTIN,
						  MERCH_CAT,
						  MERCH_CAT_DESC,
					   	  ART_TY,
						  ART_TY_DESC,
						  PROD_HIER,
					      PROD_HIER_DESC,
					   	  BRND,
						  SUB_MERCH_CAT,
						  APPLE_EDI_PT_NUM,
						  BMC_MDL_NUM,
						  ZNDC_DSCT_ELIG,
						  VEND_ART_NUM,
						  VAL_CLASS,
						  REF_VEND_PART_NUM,
						  UOM,
						  ART_VLD_FROM_DT,
						  ART_VLD_TO_DT,
						  CHAR_VAL1,
						  CHAR_VAL2,
						  CHAR_VAL3,
						  VEND,
						  ART_DELN_IND,
						  REFERENCE_EFFECTIVE_DATE,
						  REFERENCE_EXPIRY_DATE,
						  ACTIVE_INDICATOR,
						  INSERT_TS,
						  CYCLE_NUM,
						  ERROR_CODE,
						  TECHNICAL_MESSAGE,
						  ERROR_CREATE_TS)											      
			   	   VALUES(C_ARTCL.ARTCL_NUM,
						  C_ARTCL.ART_DESC,
						  C_ARTCL.ART_GTIN,
						  C_ARTCL.MERCH_CAT,
						  C_ARTCL.MERCH_CAT_DESC,
						  C_ARTCL.ART_TY,
						  C_ARTCL.ART_TY_DESC,
						  C_ARTCL.PROD_HIER,
						  C_ARTCL.PROD_HIER_DESC,
						  C_ARTCL.BRND,
						  C_ARTCL.SUB_MERCH_CAT,
						  C_ARTCL.APPLE_EDI_PT_NUM,
						  C_ARTCL.BMC_MDL_NUM,
						  C_ARTCL.ZNDC_DSCT_ELIG,
						  C_ARTCL.VEND_ART_NUM,
						  C_ARTCL.VAL_CLASS,
						  C_ARTCL.REF_VEND_PART_NUM,
						  C_ARTCL.UOM,
						  C_ARTCL.ART_VLD_FROM_DT,
						  C_ARTCL.ART_VLD_TO_DT,
						  C_ARTCL.CHAR_VAL1,
						  C_ARTCL.CHAR_VAL2,
						  C_ARTCL.CHAR_VAL3,
						  C_ARTCL.VEND,
						  C_ARTCL.ART_DELN_IND,
						  C_ARTCL.REFERENCE_EFFECTIVE_DATE,
						  C_ARTCL.REFERENCE_EXPIRY_DATE,
						  C_ARTCL.ACTIVE_INDICATOR,
					      LV_CUR_UTC,
						  C_ARTCL.CYCLE_NUM,
						  ::SQL_ERROR_CODE,
					      ::SQL_ERROR_MESSAGE,
					      LV_CUR_UTC);			
			   	    
			  	   LV_ERROR_FLAG := 'Y';
	         
	  END;       
        
--   If Record exists in the Target NDB Table
     IF C_ARTCL.FLAG_EXISTING_RECORD = 'U' THEN
     
     	BEGIN AUTONOMOUS TRANSACTION  
     
       --     Update the target NDB table
	          UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ARTICLE_MASTER" NDB 
	   		     SET  NDB.REFERENCE_EXPIRY_DATE  = C_ARTCL.EFFECTIVE_DATE_PREV_DAY,
	 		          NDB."MODIFIED_TS"          = LV_CUR_UTC
			   WHERE  NDB.ARTCL_NUM              = C_ARTCL.ARTCL_NUM
			     AND  NDB.REFERENCE_EXPIRY_DATE  = '99991231';
			     
       --    Insert the Incoming new record
             INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ARTICLE_MASTER"(
						 ARTCL_NUM,
						 ART_DESC,
						 ART_GTIN,
						 MERCH_CAT,
						 MERCH_CAT_DESC,
						 ART_TY,
						 ART_TY_DESC,
						 PROD_HIER,
						 PROD_HIER_DESC,
						 BRND,
						 SUB_MERCH_CAT,
						 APPLE_EDI_PT_NUM,
						 BMC_MDL_NUM,
						 ZNDC_DSCT_ELIG,
						 VEND_ART_NUM,
						 VAL_CLASS,
						 REF_VEND_PART_NUM,
						 UOM,
						 ART_VLD_FROM_DT,
						 ART_VLD_TO_DT,
						 CHAR_VAL1,
						 CHAR_VAL2,
						 CHAR_VAL3,
						 VEND,
						 ART_DELN_IND,
						 REFERENCE_EFFECTIVE_DATE,
						 REFERENCE_EXPIRY_DATE,
						 ACTIVE_INDICATOR,
						 INSERT_TS,
						 MODIFIED_TS,
						 CYCLE_NUM)													      
			   	 VALUES (C_ARTCL.ARTCL_NUM,
						 C_ARTCL.ART_DESC,
						 C_ARTCL.ART_GTIN,
						 C_ARTCL.MERCH_CAT,
						 C_ARTCL.MERCH_CAT_DESC,
						 C_ARTCL.ART_TY,
						 C_ARTCL.ART_TY_DESC,
						 C_ARTCL.PROD_HIER,
						 C_ARTCL.PROD_HIER_DESC,
						 C_ARTCL.BRND,
						 C_ARTCL.SUB_MERCH_CAT,
						 C_ARTCL.APPLE_EDI_PT_NUM,
						 C_ARTCL.BMC_MDL_NUM,
						 C_ARTCL.ZNDC_DSCT_ELIG,
						 C_ARTCL.VEND_ART_NUM,
						 C_ARTCL.VAL_CLASS,
						 C_ARTCL.REF_VEND_PART_NUM,
						 C_ARTCL.UOM,
						 C_ARTCL.ART_VLD_FROM_DT,
						 C_ARTCL.ART_VLD_TO_DT,
						 C_ARTCL.CHAR_VAL1,
						 C_ARTCL.CHAR_VAL2,
						 C_ARTCL.CHAR_VAL3,
						 C_ARTCL.VEND,
						 C_ARTCL.ART_DELN_IND,
						 C_ARTCL.REFERENCE_EFFECTIVE_DATE,
						 C_ARTCL.REFERENCE_EXPIRY_DATE,
						 C_ARTCL.ACTIVE_INDICATOR,
						 LV_CUR_UTC,
						 LV_CUR_UTC,
						 C_ARTCL.CYCLE_NUM);
						 
     	  END;				 
						 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records	
			   INSERT INTO #UPDATE_ARTCL_MASTER
						   ("ARTCL_NUM", 
						    "VEND",
						    "CYCLE_NUM")
				    VALUES (C_ARTCL."ARTCL_NUM", 
						    C_ARTCL."VEND",
						    C_ARTCL."CYCLE_NUM");
						   					   	    		
			   INSERT INTO #UPDATE_EH_DELETION
						   ("ARTCL_NUM", 
						    "VEND")
				    VALUES (C_ARTCL."ARTCL_NUM", 
						    C_ARTCL."VEND");

    ELSE
    
--    Insert Records into the target NDB table
      INSERT INTO "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ARTICLE_MASTER"(
						 ARTCL_NUM,
						 ART_DESC,
						 ART_GTIN,
						 MERCH_CAT,
						 MERCH_CAT_DESC,
						 ART_TY,
						 ART_TY_DESC,
						 PROD_HIER,
						 PROD_HIER_DESC,
						 BRND,
						 SUB_MERCH_CAT,
						 APPLE_EDI_PT_NUM,
						 BMC_MDL_NUM,
						 ZNDC_DSCT_ELIG,
						 VEND_ART_NUM,
						 VAL_CLASS,
						 REF_VEND_PART_NUM,
						 UOM,
						 ART_VLD_FROM_DT,
						 ART_VLD_TO_DT,
						 CHAR_VAL1,
						 CHAR_VAL2,
						 CHAR_VAL3,
						 VEND,
						 ART_DELN_IND,
						 REFERENCE_EFFECTIVE_DATE,
						 REFERENCE_EXPIRY_DATE,
						 ACTIVE_INDICATOR,
						 INSERT_TS,
						 CYCLE_NUM)													      
			   	 VALUES (C_ARTCL.ARTCL_NUM,
						 C_ARTCL.ART_DESC,
						 C_ARTCL.ART_GTIN,
						 C_ARTCL.MERCH_CAT,
						 C_ARTCL.MERCH_CAT_DESC,
						 C_ARTCL.ART_TY,
						 C_ARTCL.ART_TY_DESC,
						 C_ARTCL.PROD_HIER,
						 C_ARTCL.PROD_HIER_DESC,
						 C_ARTCL.BRND,
						 C_ARTCL.SUB_MERCH_CAT,
						 C_ARTCL.APPLE_EDI_PT_NUM,
						 C_ARTCL.BMC_MDL_NUM,
						 C_ARTCL.ZNDC_DSCT_ELIG,
						 C_ARTCL.VEND_ART_NUM,
						 C_ARTCL.VAL_CLASS,
						 C_ARTCL.REF_VEND_PART_NUM,
						 C_ARTCL.UOM,
						 C_ARTCL.ART_VLD_FROM_DT,
						 C_ARTCL.ART_VLD_TO_DT,
						 C_ARTCL.CHAR_VAL1,
						 C_ARTCL.CHAR_VAL2,
						 C_ARTCL.CHAR_VAL3,
						 C_ARTCL.VEND,
						 C_ARTCL.ART_DELN_IND,
						 C_ARTCL.REFERENCE_EFFECTIVE_DATE,
						 C_ARTCL.REFERENCE_EXPIRY_DATE,
						 C_ARTCL.ACTIVE_INDICATOR,
						 LV_CUR_UTC,
						 C_ARTCL.CYCLE_NUM);						               
						 
--         Insert PK of successfully processed Records into Local Temp Tables 
--         for Updating NDB_TS in corresponding Landing Tables records	

		    INSERT INTO #UPDATE_ARTCL_MASTER
						   ("ARTCL_NUM", 
						    "VEND",
						    "CYCLE_NUM")
				    VALUES (C_ARTCL."ARTCL_NUM", 
						    C_ARTCL."VEND",
						    C_ARTCL."CYCLE_NUM");
						   					   	    		
			INSERT INTO #UPDATE_EH_DELETION
						   (ARTCL_NUM, 
						    VEND)
				    VALUES (C_ARTCL."ARTCL_NUM", 
						    C_ARTCL."VEND");						 		
					   	 
    END IF;  

END FOR;
--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

--  Update Landing Table IFRS_R1.LAND::P77_ARTCL_MSTR
	UPDATE "LAND"."IFRS_R1.LAND::P77_ARTCL_MSTR" A
    FROM "LAND"."IFRS_R1.LAND::P77_ARTCL_MSTR" A 
    INNER JOIN #UPDATE_ARTCL_MASTER B 
    ON  A."ARTCL_NUM"        =   B."ARTCL_NUM"
    AND A."VEND"	         =   B."VEND"
    AND A."CYCL_ID"          =   B."CYCLE_NUM"
    SET NDB_TS               =   LV_CUR_UTC
    WHERE A.NDB_TS IS NULL;

--------------------------------------------------------------------------------------------------
--  Update Error Table
--------------------------------------------------------------------------------------------------

	UPDATE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ARTICLE_MASTER_EH" A
    FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::P77_ARTICLE_MASTER_EH" A 
    INNER JOIN #UPDATE_EH_DELETION B
    ON A.ARTCL_NUM                  =   B.ARTCL_NUM
    AND A."VEND"                    =   B."VEND"
    SET (DELETE_DATE, DELETED)      =   (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
--  executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

       OP_STATUS := LC_ERROR_TEXT;
			
    ELSE
 
  	   OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END;		