PROCEDURE "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::SP_IFRS_TABLE_TRUNCATION" (
  IN P_TABLE_NAME NVARCHAR(500), OUT P_RESULT NVARCHAR(1000) )
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	--DEFAULT SCHEMA <default_schema_name>
	--READS SQL DATA
	 AS  
BEGIN
DECLARE V_TAB_FOR_DEL INT;
DECLARE V_CNT INT;
DECLARE L_SQL STRING;
DECLARE DELETED_ROWS INTEGER;

IF CURRENT_USER <> 'BC_EY94137' THEN 

P_RESULT := 'USER NOT AUTHORIZED TO TRUNCATE TABLES';

ELSE

SELECT COUNT(1) INTO V_TAB_FOR_DEL FROM "NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::DELETION_CATALOG" 
WHERE TABLE_NAME = :P_TABLE_NAME;


IF V_TAB_FOR_DEL > 0 THEN 

EXECUTE IMMEDIATE 'DELETE FROM '||:P_TABLE_NAME;


DELETED_ROWS = ::ROWCOUNT;

INSERT INTO 
"NDB_COMMON"."IFRS_R1.COMMON_COMP.NDB_COMMON::DELETION_LOG"(USER_NAME,
						 TABLE_NAME,
						 RECORD_COUNT,
						 DELETION_TIMESTAMP
						 )
			VALUES(CURRENT_USER,
			       :P_TABLE_NAME,
			       :DELETED_ROWS,
			       CURRENT_TIMESTAMP
			       );
			       
			       P_RESULT := 'TABLE' ||' '||:P_TABLE_NAME||' '||'TRUNCATED SUCCESSFULLY'; 
			       
			       ELSE 
			       
			       P_RESULT := 'TABLE' ||' '||:P_TABLE_NAME||' '||'NOT CONFIGURED FOR TRUNCATION';
			       
			       END IF;
			       END IF;
END