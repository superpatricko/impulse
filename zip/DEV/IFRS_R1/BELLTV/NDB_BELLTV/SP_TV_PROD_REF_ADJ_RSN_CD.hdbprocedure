PROCEDURE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::SP_TV_PROD_REF_ADJ_RSN_CD"
    (IN IP_CYCL_ID NVARCHAR(3),
     OUT OP_STATUS  NVARCHAR(100)) 
	 LANGUAGE SQLSCRIPT
	 SQL SECURITY INVOKER
	
   AS
BEGIN
--------------------------------------------------------------------------------------------------
-- Procedure Title : SP_TV_PROD_REF_ADJ_RSN_CD
-- Created By      : BC_EY96106       
-- Create Date     : 03-17-2017
-- Description     : Data Inserted using Calculation View - CA_TV_PROD_REF_ADJ_RSN_CD
--                   To NDB Table - NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD Using this stored procedure.
-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------
--   M O D I F I C A T I O N   H I S T O R Y
--------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
--------------------------------------------------------------------------------------------------
--             |                  | 
--------------------------------------------------------------------------------------------------
-- Description Of the changes 
--------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>       
--------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LC_ERROR_TEXT 		NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE LV_ERROR_FLAG 		NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC 			TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE ERROR_TAB 			TABLE (ERROR_CODE NVARCHAR(100));
DECLARE i					INTEGER;
DECLARE RECORD_COUNT		INTEGER;
DECLARE CURRENT_ERROR		NVARCHAR(100);

-- New variables for version sequence check
DECLARE LV_LOOP_ERROR_FLAG        INTEGER := 0;
DECLARE LV_PREV_PK		          NVARCHAR(20) := NULL;


--------------------------------------------------------------------------------------------------
-- Cursors Declaration
--------------------------------------------------------------------------------------------------
DECLARE CURSOR CUR_ADJ_RSN_CD FOR 
   	    SELECT "CD_GRP",
	           "REC_TY_ID",
	           "REC_ACTN",
	           "ADJ_SERV_CD",
	           "ADJ_RSN_CD",
	           "ID_1",
	           "ID_2",
	           "ID_3",
	           "ID_4",
	           "ID_5",
	           "ID_6",
	           "ID_7",
	           "ARTCL_NUM",
	           "CD_TY",
	           "ADJ_VAL_TY",
	           "ADJ_VAL",
	           "ADJ_TOT",
	           "IDR_PROD_CD_BUS_DTH",
	           "IDR_PROD_CD_BUS_FB",
	           "PROCESS_ID",
	           "REFERENCE_EFFECTIVE_DT",
	           "REFERENCE_EXPIRY_DT",
	           "REFERENCE_EFFECTIVE_DATE_PREV_DAY",
	           "UNQ_KEY",
	           "CYCL_ID",
	           "SEQ_ID",
	           "ERROR_CODE",
	           "ERROR_STATUS",
			   "SRC_TS",
			   "COMPOSITE_PK"
          FROM "_SYS_BIC"."IFRS_R1.BELLTV.NDB_BELLTV/CA_TV_PROD_REF_ADJ_RSN_CD"
               (PLACEHOLDER."$$IP_CYCL_ID$$" => :IP_CYCL_ID)
                ORDER BY "REC_TY_ID", "ADJ_SERV_CD","ADJ_RSN_CD","SRC_TS";
          
                   
--------------------------------------------------------------------------------------------------
-- Local Temporary Tables Declaration
--------------------------------------------------------------------------------------------------  

CREATE LOCAL TEMPORARY TABLE #UPDATE_TV_PROD_REF_ADJ_RSN_CD ("UNQ_KEY" NVARCHAR(740),"REC_TY_ID" NVARCHAR(20), "ADJ_SERV_CD" NVARCHAR(10),"ADJ_RSN_CD" NVARCHAR(10));
CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION ("UNQ_KEY" NVARCHAR(740),"REC_TY_ID" NVARCHAR(20), "ADJ_SERV_CD" NVARCHAR(10),"ADJ_RSN_CD" NVARCHAR(10));
        	  
--------------------------------------------------------------------------------------------------
-- Cursors Loop
-------------------------------------------------------------------------------------------------- 

FOR C_ARC AS CUR_ADJ_RSN_CD DO

-- Define Exit Handler
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 

-- Define Exit Handler
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN AUTONOMOUS TRANSACTION 
END;
			
-- Insert record into error table
   	  INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD_EH"(
                  "ADJ_RSN_CD",
                  "ADJ_SERV_CD",
                  "ADJ_TOT",
                  "ADJ_VAL",
                  "ADJ_VAL_TY",
                  "ARTCL_NUM",
                  "CD_GRP",
                  "CD_TY",
                  "ID_1",
                  "ID_2",
                  "ID_3",
                  "ID_4",
                  "ID_5",
                  "ID_6",
                  "ID_7",
                  "IDR_PROD_CD_BUS_DTH",
                  "IDR_PROD_CD_BUS_FB",
                  "REC_TY_ID",
                  "UNQ_KEY",
                  "EXECUTION_ID",
                  "REFERENCE_EXPIRY_DT",
                  "REFERENCE_EFFECTIVE_DT",
                  "INSERT_TS",
                  "ERROR_CODE",
                  "ERROR_CREATE_TS",
                  "TECHNICAL_MESSAGE")
           VALUES (C_ARC."ADJ_RSN_CD",
                   C_ARC."ADJ_SERV_CD",
                   C_ARC."ADJ_TOT",
                   C_ARC."ADJ_VAL",
                   C_ARC."ADJ_VAL_TY",
                   C_ARC."ARTCL_NUM",
                   C_ARC."CD_GRP",
                   C_ARC."CD_TY",
                   C_ARC."ID_1",
                   C_ARC."ID_2",
                   C_ARC."ID_3",
                   C_ARC."ID_4",
                   C_ARC."ID_5",
                   C_ARC."ID_6",
                   C_ARC."ID_7",
                   C_ARC."IDR_PROD_CD_BUS_DTH",
                   C_ARC."IDR_PROD_CD_BUS_FB",
                   C_ARC."REC_TY_ID",
                   C_ARC."UNQ_KEY",
                   C_ARC."PROCESS_ID",
                   C_ARC."REFERENCE_EXPIRY_DT",
                   C_ARC."REFERENCE_EFFECTIVE_DT",
                   LV_CUR_UTC,
                   ::SQL_ERROR_CODE,
                   LV_CUR_UTC,
                   ::SQL_ERROR_MESSAGE);   
   
	  LV_ERROR_FLAG := 'Y';
      LV_LOOP_ERROR_FLAG := 1;
      
    END;
  
 -----------------------------------------------------------------------------------------------   
    
-- FOR CLEARING THE VARIABLES

	IF (LV_PREV_PK IS NULL OR  LV_PREV_PK != C_ARC."COMPOSITE_PK" ) THEN

		LV_LOOP_ERROR_FLAG := 0;
		LV_PREV_PK         := "C_ARC"."COMPOSITE_PK";
 
    END IF;

 -----------------------------------------------------------------------------------------------
 
 
--  Check the Error Status of the Record. If Record is with Error, then send to Error Table 
    IF C_ARC.ERROR_STATUS = 1 THEN
	
-- Call the Stored Procedure to split the concatenated Error Messages into Error Rows

		CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(C_ARC."ERROR_CODE", ERROR_TAB, RECORD_COUNT);

-- Loop through the Error Records

		FOR i IN 1 .. :RECORD_COUNT DO
			
-- Fetch the Error Code

		CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
			
-- Insert into the Error Table
		   
		 INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD_EH"(
                     "ADJ_RSN_CD",
                     "ADJ_SERV_CD",
                     "ADJ_TOT",
                     "ADJ_VAL",
                     "ADJ_VAL_TY",
                     "ARTCL_NUM",
                     "CD_GRP",
                     "CD_TY",
                     "ID_1",
                     "ID_2",
                     "ID_3",
                     "ID_4",
                     "ID_5",
                     "ID_6",
                     "ID_7",
                     "IDR_PROD_CD_BUS_DTH",
                     "IDR_PROD_CD_BUS_FB",
                     "REC_TY_ID",
                     "UNQ_KEY",
                     "EXECUTION_ID",
                     "REFERENCE_EXPIRY_DT",
                     "REFERENCE_EFFECTIVE_DT",
                     "INSERT_TS",
                     "ERROR_CODE",
                     "ERROR_CREATE_TS")
             VALUES (C_ARC."ADJ_RSN_CD",
                     C_ARC."ADJ_SERV_CD",
                     C_ARC."ADJ_TOT",
                     C_ARC."ADJ_VAL",
                     C_ARC."ADJ_VAL_TY",
                     C_ARC."ARTCL_NUM",
                     C_ARC."CD_GRP",
                     C_ARC."CD_TY",
                     C_ARC."ID_1",
                     C_ARC."ID_2",
                     C_ARC."ID_3",
                     C_ARC."ID_4",
                     C_ARC."ID_5",
                     C_ARC."ID_6",
                     C_ARC."ID_7",
                     C_ARC."IDR_PROD_CD_BUS_DTH",
                     C_ARC."IDR_PROD_CD_BUS_FB",
                     C_ARC."REC_TY_ID",
                     C_ARC."UNQ_KEY",
                     C_ARC."PROCESS_ID",
                     C_ARC."REFERENCE_EXPIRY_DT",
                     C_ARC."REFERENCE_EFFECTIVE_DT",
                     LV_CUR_UTC,
                     :CURRENT_ERROR,
                     LV_CUR_UTC );   
                     
            END FOR;	  
				     
-- Set Error Flag				        
	 
	 LV_ERROR_FLAG := 'Y';
	 LV_LOOP_ERROR_FLAG := 1;
	

-- Processing for Successful Records
   ELSE
		IF C_ARC.ERROR_STATUS = '0' THEN
	    
	        IF LV_LOOP_ERROR_FLAG = 1 THEN

INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD_EH"(
                     "ADJ_RSN_CD",
                     "ADJ_SERV_CD",
                     "ADJ_TOT",
                     "ADJ_VAL",
                     "ADJ_VAL_TY",
                     "ARTCL_NUM",
                     "CD_GRP",
                     "CD_TY",
                     "ID_1",
                     "ID_2",
                     "ID_3",
                     "ID_4",
                     "ID_5",
                     "ID_6",
                     "ID_7",
                     "IDR_PROD_CD_BUS_DTH",
                     "IDR_PROD_CD_BUS_FB",
                     "REC_TY_ID",
                     "UNQ_KEY",
                     "EXECUTION_ID",
                     "REFERENCE_EXPIRY_DT",
                     "REFERENCE_EFFECTIVE_DT",
                     "INSERT_TS",
                     "ERROR_CODE",
                     "ERROR_CREATE_TS")
             VALUES (C_ARC."ADJ_RSN_CD",
                     C_ARC."ADJ_SERV_CD",
                     C_ARC."ADJ_TOT",
                     C_ARC."ADJ_VAL",
                     C_ARC."ADJ_VAL_TY",
                     C_ARC."ARTCL_NUM",
                     C_ARC."CD_GRP",
                     C_ARC."CD_TY",
                     C_ARC."ID_1",
                     C_ARC."ID_2",
                     C_ARC."ID_3",
                     C_ARC."ID_4",
                     C_ARC."ID_5",
                     C_ARC."ID_6",
                     C_ARC."ID_7",
                     C_ARC."IDR_PROD_CD_BUS_DTH",
                     C_ARC."IDR_PROD_CD_BUS_FB",
                     C_ARC."REC_TY_ID",
                     C_ARC."UNQ_KEY",
                     C_ARC."PROCESS_ID",
                     C_ARC."REFERENCE_EXPIRY_DT",
                     C_ARC."REFERENCE_EFFECTIVE_DT",
                     LV_CUR_UTC,
                     'PREVIOUS VERSION IN ERROR',
                     LV_CUR_UTC );  
                     
           ELSE 

-- If Record exists in the Target NDB Table
	 IF C_ARC."REC_ACTN" = 'DELETE' THEN
	 
	 	UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD" NDB
	 		SET NDB."REFERENCE_EXPIRY_DT"          = C_ARC."REFERENCE_EFFECTIVE_DATE_PREV_DAY",
	 			NDB.MODIFIED_TS                    = LV_CUR_UTC
	 	  WHERE NDB.UNQ_KEY                        = C_ARC.UNQ_KEY 
	 		AND NDB.REC_TY_ID                      = C_ARC.REC_TY_ID 
			AND NDB.ADJ_RSN_CD                     = C_ARC.ADJ_RSN_CD
			AND NDB.ADJ_SERV_CD                    = C_ARC.ADJ_SERV_CD
			AND NDB.REFERENCE_EXPIRY_DT            = '9999-12-31';

-- Insert PK of successfully processed Records into Local Temp Tables 
-- For Updating NDB_TS in corresponding Landing Tables records

		   INSERT INTO #UPDATE_TV_PROD_REF_ADJ_RSN_CD
					   ("UNQ_KEY",
					    "REC_TY_ID", 
					   	"ADJ_RSN_CD",
					   	"ADJ_SERV_CD") 
			    VALUES (C_ARC."UNQ_KEY",
			            C_ARC."REC_TY_ID", 
					   	C_ARC."ADJ_RSN_CD",
					   	C_ARC."ADJ_SERV_CD");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("UNQ_KEY",
					    "REC_TY_ID", 
					   	"ADJ_RSN_CD",
					   	"ADJ_SERV_CD") 
			    VALUES (C_ARC."UNQ_KEY",
			            C_ARC."REC_TY_ID", 
					   	C_ARC."ADJ_RSN_CD",
					   	C_ARC."ADJ_SERV_CD"); 

     ELSE 
     IF C_ARC."REC_ACTN" = 'UPDATE' THEN
     
	BEGIN AUTONOMOUS TRANSACTION
     
-- Update the target NDB table

	   UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD" NDB
	 	  SET NDB."REFERENCE_EXPIRY_DT"       = C_ARC."REFERENCE_EFFECTIVE_DATE_PREV_DAY",
	 		  NDB.MODIFIED_TS                 = LV_CUR_UTC
	 	WHERE NDB.UNQ_KEY                     = C_ARC.UNQ_KEY 
	 	  AND NDB.REC_TY_ID                   = C_ARC.REC_TY_ID 
		  AND NDB.ADJ_RSN_CD                  = C_ARC.ADJ_RSN_CD
		  AND NDB.ADJ_SERV_CD                 = C_ARC.ADJ_SERV_CD
		  AND NDB.REFERENCE_EXPIRY_DT         = '9999-12-31';
		  
		  
-- Insert the new records having FLAG_EXISTING_RECORD = 'U'

   INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD"(
               "ADJ_RSN_CD",
               "ADJ_SERV_CD",
               "ADJ_TOT",
               "ADJ_VAL",
               "ADJ_VAL_TY",
               "ARTCL_NUM",
               "CD_GRP",
               "CD_TY",
               "ID_1",
               "ID_2",
               "ID_3",
               "ID_4",
               "ID_5",
               "ID_6",
               "ID_7",
               "IDR_PROD_CD_BUS_DTH",
               "IDR_PROD_CD_BUS_FB",
               "REC_TY_ID",
               "UNQ_KEY",
               "EXECUTION_ID",
               "REFERENCE_EXPIRY_DT",
               "REFERENCE_EFFECTIVE_DT",
               "INSERT_TS") 
       VALUES (C_ARC."ADJ_RSN_CD",
               C_ARC."ADJ_SERV_CD",
               C_ARC."ADJ_TOT",
               C_ARC."ADJ_VAL",
               C_ARC."ADJ_VAL_TY",
               C_ARC."ARTCL_NUM",
               C_ARC."CD_GRP",
               C_ARC."CD_TY",
               C_ARC."ID_1",
               C_ARC."ID_2",
               C_ARC."ID_3",
               C_ARC."ID_4",
               C_ARC."ID_5",
               C_ARC."ID_6",
               C_ARC."ID_7",
               C_ARC."IDR_PROD_CD_BUS_DTH",
               C_ARC."IDR_PROD_CD_BUS_FB",
               C_ARC."REC_TY_ID",
               C_ARC."UNQ_KEY",
               C_ARC."PROCESS_ID",
               C_ARC."REFERENCE_EXPIRY_DT",
               C_ARC."REFERENCE_EFFECTIVE_DT",
               LV_CUR_UTC);
	
END;
					 
-- Insert PK of successfully processed Records into Local Temp Tables 
-- For Updating NDB_TS in corresponding Landing Tables records

		   INSERT INTO #UPDATE_TV_PROD_REF_ADJ_RSN_CD
					   ("REC_TY_ID",
					    "UNQ_KEY",
					   	"ADJ_RSN_CD",
					   	"ADJ_SERV_CD") 
			    VALUES (C_ARC."REC_TY_ID", 
			            C_ARC."UNQ_KEY",
					   	C_ARC."ADJ_RSN_CD",
					   	C_ARC."ADJ_SERV_CD");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("UNQ_KEY",
					    "REC_TY_ID", 
					   	"ADJ_RSN_CD",
					   	"ADJ_SERV_CD") 
			    VALUES (C_ARC."UNQ_KEY",
			            C_ARC."REC_TY_ID", 
					   	C_ARC."ADJ_RSN_CD",
					   	C_ARC."ADJ_SERV_CD");            
                    	
    ELSE
    
-- Insert Records into the target NDB table
      INSERT INTO "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD"(
                  "ADJ_RSN_CD",
                  "ADJ_SERV_CD",
                  "ADJ_TOT",
                  "ADJ_VAL",
                  "ADJ_VAL_TY",
                  "ARTCL_NUM",
                  "CD_GRP",
                  "CD_TY",
                  "ID_1",
                  "ID_2",
                  "ID_3",
                  "ID_4",
                  "ID_5",
                  "ID_6",
                  "ID_7",
                  "IDR_PROD_CD_BUS_DTH",
                  "IDR_PROD_CD_BUS_FB",
                  "REC_TY_ID",
                  "UNQ_KEY",
                  "EXECUTION_ID",
                  "REFERENCE_EXPIRY_DT",
                  "REFERENCE_EFFECTIVE_DT",
                  "INSERT_TS")
          VALUES (C_ARC."ADJ_RSN_CD",
                  C_ARC."ADJ_SERV_CD",
                  C_ARC."ADJ_TOT",
                  C_ARC."ADJ_VAL",
                  C_ARC."ADJ_VAL_TY",
                  C_ARC."ARTCL_NUM",
                  C_ARC."CD_GRP",
                  C_ARC."CD_TY",
                  C_ARC."ID_1",
                  C_ARC."ID_2",
                  C_ARC."ID_3",
                  C_ARC."ID_4",
                  C_ARC."ID_5",
                  C_ARC."ID_6",
                  C_ARC."ID_7",
                  C_ARC."IDR_PROD_CD_BUS_DTH",
                  C_ARC."IDR_PROD_CD_BUS_FB",
                  C_ARC."REC_TY_ID",
                  C_ARC."UNQ_KEY",
                  C_ARC."PROCESS_ID",
                  C_ARC."REFERENCE_EXPIRY_DT",
                  C_ARC."REFERENCE_EFFECTIVE_DT",
                  LV_CUR_UTC);
                  
            COMMIT;
					 
-- Insert PK of successfully processed Records into Local Temp Tables 
-- For Updating NDB_TS in corresponding Landing Tables records

		   INSERT INTO #UPDATE_TV_PROD_REF_ADJ_RSN_CD
					   ("REC_TY_ID",
					    "UNQ_KEY",
					   	"ADJ_RSN_CD",
					   	"ADJ_SERV_CD") 
			    VALUES (C_ARC."REC_TY_ID", 
			            C_ARC."UNQ_KEY",
					   	C_ARC."ADJ_RSN_CD",
					   	C_ARC."ADJ_SERV_CD");
					   					   	    		
		   INSERT INTO #UPDATE_EH_DELETION
					   ("UNQ_KEY",
					    "REC_TY_ID", 
					   	"ADJ_RSN_CD",
					   	"ADJ_SERV_CD") 
			    VALUES (C_ARC."UNQ_KEY",
			            C_ARC."REC_TY_ID", 
					   	C_ARC."ADJ_RSN_CD",
					   	C_ARC."ADJ_SERV_CD"); 
     END IF;

    END IF;  

   END IF;
          
  END IF;
          
 END IF;
 			                  
END FOR;							   			    

--------------------------------------------------------------------------------------------------
-- Update Landing Tables
-------------------------------------------------------------------------------------------------- 

-- Update Landing Table IFRS_R1.LAND::TV_PROD_REF_ADJ_RSN_CD

     UPDATE "LAND"."IFRS_R1.LAND::TV_PROD_REF_ADJ_RSN_CD" A
 	   FROM "LAND"."IFRS_R1.LAND::TV_PROD_REF_ADJ_RSN_CD" A
 INNER JOIN #UPDATE_TV_PROD_REF_ADJ_RSN_CD B 
 	     ON A.REC_TY_ID        = B.REC_TY_ID 
        AND A.ADJ_RSN_CD       = B.ADJ_RSN_CD
 	    AND A.ADJ_SERV_CD      = B.ADJ_SERV_CD
 	    SET A.NDB_TS           = LV_CUR_UTC
 	  WHERE A.NDB_TS IS NULL;
 
--------------------------------------------------------------------------------------------------
-- Update Error Table
--------------------------------------------------------------------------------------------------

       UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD_EH" A
         FROM "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_PROD_REF_ADJ_RSN_CD_EH" A 
   INNER JOIN #UPDATE_EH_DELETION B
           ON A."UNQ_KEY"             = B."UNQ_KEY"
          AND A.REC_TY_ID             = B.REC_TY_ID 
          AND A.ADJ_RSN_CD            = B.ADJ_RSN_CD
          AND A.ADJ_SERV_CD           = B.ADJ_SERV_CD
          SET (DELETE_DATE, DELETED)  = (CURRENT_DATE, 1);

--------------------------------------------------------------------------------------------------
-- Set Overall Status
-------------------------------------------------------------------------------------------------- 

-- STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
-- executed successfully
    IF(LV_ERROR_FLAG = 'Y') THEN		

     OP_STATUS := LC_ERROR_TEXT; 
			
    ELSE

  	 OP_STATUS := LC_SUCCESS_TEXT; 	
				
	END IF;
		
END; 

