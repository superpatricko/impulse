PROCEDURE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::SP_RAI_TV_INVC"
 (OUT OP_STATUS NVARCHAR(1000)) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	AS

BEGIN

----------------------------------------------------------------------------------------------------
-- Procedure Title : "IFRS_R1.BELLTV.RAI_BELLTV::SP_RAI_TV_INVC"
-- Created By      : BC_EY53099(Shwet)    
-- Date            : 11/05/2017
-- Description     : This Procedure will create the RAI order Items and invoice items based on
--	                 BELL TV Phone NDB order data and Home_Phone NDB billing data
--	                 If the Batch ID is blank in the NDB billing, then it will create 
--	                 Invoice RAI item .
--	                 Billing item with adjustments, overages services will be added as separate POBs in the contract 
--	                 which is created for the Base services and the equipments   
                       
--	                 This Procedure has one parameter:
--	                 1. The  OP_STATUS parameter : This parameter give the status of the Procedure whether it is 
--	                 success or failure

--	                 TV_INVC_MAIN_EH and TV_INVC_COND_EH Table : Will be used to trace the errors/exceptions

--	                 FREQUENCY OF PROCEDURE EXECUTION: Daily

-- Project         : Bell Canada
-- Release         : R1 / IFRS
--------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- M O D I F I C A T I O N   H I S T O R Y
----------------------------------------------------------------------------------------------------
-- Date        | User ID          | Modification History/Release
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
-- Description Of the changes 
----------------------------------------------------------------------------------------------------
-- Modification Number          : <Assign Some Number> 
-- Description of Changes Made> : <Description of Changes>        
----------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------
-- Global Variables Declaration
--------------------------------------------------------------------------------------------------

DECLARE LV_BATCH_ID           INTEGER;
DECLARE LV_COUNT_ORDR         INTEGER;
DECLARE LV_COUNT_INVC         INTEGER;
DECLARE LV_ERROR_FLAG 		  NVARCHAR(1) := 'N';
DECLARE LV_CUR_UTC            TIMESTAMP := CURRENT_TIMESTAMP;
DECLARE LV_CUR_DATE           DATE := CURRENT_DATE;
DECLARE LV_CUR_UTC_TIME       DECIMAL(15,2) 
                              := TO_DECIMAL(TO_CHAR(CURRENT_UTCTIMESTAMP,'YYYYMMDDHHMISS'),15,2);
DECLARE LC_SQL_ERROR          NVARCHAR(40) DEFAULT 'SQL_EXCEPTION : SIBLING ERROR';
DECLARE LC_ERROR_TEXT 		  NVARCHAR(70) DEFAULT 'OUT STATUS IS 1 : INSERT/UPDATE FOR ONE OR MORE RECORD FAILED';
DECLARE LC_SUCCESS_TEXT 	  NVARCHAR(70) DEFAULT 'OUT STATUS IS 0 : INSERT/UPDATE EXECUTION SUCCESSFUL';
DECLARE CURRENT_ERROR		  NVARCHAR(100);
DECLARE ERROR_TAB 			  TABLE (ERROR_CODE NVARCHAR(100));
DECLARE RECORD_COUNT		  INTEGER;
DECLARE i					  INTEGER;

	
--------------------------------------------------------------------------------------------------
-- Temporary tables/Variables/Nodes Declaration to hold data from the final CVs
-------------------------------------------------------------------------------------------------- 

TV_INVC_ORDR_RAI_ITEM =
    SELECT 
     	"AMT",
	 	"ACCT_NUM",
	 	"BILL_FROM_DT",
	 	"BILL_TO_DT",
     	"ITEM_ID",
     	"FEAT_CD",
     	"CONTR_END_DT",
     	"CONTR_INCPTN_DT",
     	"CONTR_ID",
     	"MIN_SPEND_AMT",
     	"SRCDOC_ID",
     	"REFERENCE_ID",
     	"SSP",
     	"TP",
     	"ITEM_TY_CD",
     	"EVNT_TY",
     	"MTH_T_MTH_SERV_IND",
     	"CC_ITEMS_TO_CREATE",
     	"CC_REF_ID",
     	"RAI_ITEM_ID",
     	"CC_RAI_ITEM_ID",
     	"CC_SRCDOC_ID",
     	"SRCDOC_COMP",
     	"SRCDOC_LOGSYS",
     	"SRCDOC_TYPE",
     	"BUKRS",
     	"REFERENCE_TYPE",
     	"RECEIV_ACCOUNT",
     	"WAERS",
     	"KUNNR_SID",
     	"CC_QUANTITY_UNIT",
     	"CC_QUANTITY",
     	"CC_QUANTITY_REL",
     	"CC_BILREL",
     	"CC_CATEGORY",
     	"CC_MAIN_CONDITION_TYPE",
     	"CHRG_SEQ_NUM",
     	"CHARGE_TYPE",
     	"POB_TYPE",
     	"VALUE_RELEVANT",
     	"CC_X_NEGATIVE_ITEM",
     	"CC_TP",
     	"CC_LC_SSP",
     	"CC_LC_TP",
     	"CC_REF_ID_ERROR",
     	"CC_SIBLING_ERROR",
     	"CC_ERROR_CODE",
     	"CC_ZZ_HKONT",
     	"CC_ZZ_AUFNR",
     	"CC_ZZ_BUKRS",
     	"CC_PL_ACCOUNT",
     	"CC_ZZ_LEGACY",
     	"CC_ZZ_ZUONR",
     	"CC_ZZ_VBUND",
     	"CC_ZZ_CATRANSFER",
     	"CC_ZZ_PRE_POST",
     	"CC_ZZ_BRANDACT",
     	"CC_ZZ_BILLER",
     	"CC_ZZ_ADJ_RSN_CD",
     	"CC_ZZ_MOD_TYPE",
     	"CC_ZZ_BLDAT",
     	"CC_ZZ_BUDAT",
     	"CC_ZZ_BKTXT",
     	"CC_ZZ_XBLNR",
     	"CC_ZZ_ALLOCATE",
     	"CC_ZZ_UPFFLG",
     	"CC_ZZ_MINPRICE",
     	"CC_ZZ_PAOBJNR",
     	"CC_ZZ_BU_VIEW",
     	"CC_ZZ_ACTIVITY_CODE",
     	"CC_ZZ_ACT_RSN_CD",
     	"CC_ZZ_SAKNR",
     	"CC_ZZ_TXJCD",
     	"CC_ZZ_SGTXT",
     	"CC_ZZ_KOSTL",
     	"CC_ZZ_MWSKZ",
     	"ERROR_STATUS",
     	"ERROR_CODE" 
            FROM "_SYS_BIC"."IFRS_R1.BELLTV.RAI_BELLTV/CA_TV_INVC_ORDR_SIBLING_CHECK";
	
TV_INVC_RAI_ITEM =
    SELECT  
     	"CC_IS_SIBLING_ERROR",
     	"CC_ERROR_CODE",
     	"AMT",
     	"ACCT_NUM",
     	"BILL_FROM_DT",
     	"BILL_TO_DT",
     	"ITEM_ID",
     	"FEAT_CD",
     	"BTCH_ID",
     	"ORIGDOC_ID",
     	"MTH_T_MTH_SERV_IND",
     	"ITEM_TY_CD",
     	"MIN_SPEND_AMT",
     	"SSP",
     	"TP",
     	"SRCDOC_ID_TERM",
     	"SRCDOC_ID",
     	"EVNT_TY",
     	"CC_MIN_TIER_CHK",
     	"CC_ORIGDOC_ID",
     	"CC_FINAL_INVOICE",
     	"CONTR_END_DT",
     	"CC_SRCDOC_ID_CHK",
     	"CC_TP",
     	"CC_TEMP_SRCDOC_ID",
     	"REVNU_CD",
     	"CONTR_ID",
     	"ITEM_STRT_DT",
     	"CC_REF_ID",
     	"CC_RAI_ITEM_ID",
     	"CC_SRCDOC_ID",
     	"CC_LOB",
     	"SRCDOC_COMP",
     	"SRCDOC_LOGSYS",
     	"SRCDOC_TYPE",
     	"ORIGDOC_COMP",
     	"ORIGDOC_LOGSYS",
     	"ORIGDOC_TYPE",
     	"WAERS",
     	"KUNNR_SID",
     	"CC_QUANTITY",
     	"CC_QUANTITY_UNIT",
     	"CC_QUANTITY_REL",
     	"CC_EXCHANGE_RATE",
     	"CC_CATEGORY",
     	"CC_MAIN_COND_TYPE",
     	"CC_ORIG_DOC_ID",
     	"CHRG_SEQ_NUM",
     	"CC_X_NEGATIVE_ITEM",
     	"MWSKZ",
     	"CC_ZZ_MWSKZ",
     	"KOSTL",
     	"TXJCD",
     	"CC_ZZ_TXJCD",
     	"CC_ZZ_SGTXT",
     	"CC_ZZ_KOSTL",
     	"CC_ZZ_ICHKONT",
     	"BUKRS",
     	"GL_ACCT_NO",
     	"CC_PL_ACCOUNT",
     	"CC_ZZ_VBUND",
     	"CC_ZZ_CATRANSFER",
     	"CC_ZZ_PRE_POST",
     	"CC_ZZ_BRANDACT",
     	"CC_ZZ_BILLER",
     	"CC_ZZ_ADJ_RSN_CD",
     	"CC_ZZ_MOD_TYPE",
     	"CC_ZZ_BLDAT",
     	"CC_ZZ_BUDAT",
     	"CC_ZZ_BKTXT",
     	"CC_ZZ_XBLNR",
     	"CC_ZZ_ALLOCATE",
     	"CC_ZZ_UPFFLG",
     	"CC_ZZ_MINPRICE",
     	"CC_ZZ_PAOBJNR",
     	"CC_ZZ_BU_VIEW",
     	"CC_ZZ_ACTIVITY_CODE",
     	"CC_ZZ_ACT_RSN_CD",
     	"CC_ZZ_SAKNR",
     	"CC_ZZ_ZUONR",
     	"CC_ZZ_LEGACY",
     	"CC_ZZ_BUKRS",
     	"ERROR_CODE",
     	"ERROR_STATUS",
     	"CC_ZZ_AUFNR",
     	"CC_LC_SSP",
     	"CC_LC_TP" 
       FROM "_SYS_BIC"."IFRS_R1.BELLTV.RAI_BELLTV/CA_TV_INVC_SIBLING_CHECK";	

BEGIN
	-------------------------------------------------------------------------------------------------
	-- Cursors Declaration for Invoice Order
	--------------------------------------------------------------------------------------------------
	
	DECLARE CURSOR C_RAI_INVC_ORDR FOR SELECT * FROM :TV_INVC_ORDR_RAI_ITEM;
		  
	DECLARE CURSOR C_RAI_INVC_ORDR_PARENT FOR 
	    SELECT "ACCT_NUM" 
	      FROM :TV_INVC_ORDR_RAI_ITEM 
	     WHERE "CC_SIBLING_ERROR" = '0' 
	       AND "ERROR_STATUS" = '0'
	  GROUP BY "ACCT_NUM";
	
	--------------------------------------------------------------------------------------------------
	-- Cursors Declaration for Invoice
	--------------------------------------------------------------------------------------------------

	DECLARE CURSOR C_RAI_INVC FOR SELECT * FROM :TV_INVC_RAI_ITEM;
		  
	DECLARE CURSOR C_RAI_INVC_PARENT FOR 
	    SELECT "ACCT_NUM" 
	      FROM :TV_INVC_RAI_ITEM 
	     WHERE "CC_IS_SIBLING_ERROR" = '0' 
	       AND "ERROR_STATUS" = '0' 
	  GROUP BY "ACCT_NUM";	
		
	--------------------------------------------------------------------------------------------------
	-- Batch ID creation for RAI processing
	-------------------------------------------------------------------------------------------------- 	
	
	SELECT "RAI_COMMON"."IFRS_R1.COMMON_COMP.RAI_COMMON::RAI_BATCH_ID".NEXTVAL INTO LV_BATCH_ID 
	  FROM DUMMY;	
	
	--------------------------------------------------------------------------------------------------
	-- Local Temporary Tables Declaration
	-------------------------------------------------------------------------------------------------- 			 
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_MAIN_TV (SRCDOC_ID NVARCHAR(35));
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_COND_TV (SRCDOC_ID NVARCHAR(35));
	
	--------------------------------------------------------------------------------------------------
	-- Cursors Loop
	-------------------------------------------------------------------------------------------------- 
	
	FOR CUR_ORDER AS C_RAI_INVC_ORDR DO
	
	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
	
	  --  Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION	
		
	  --    Do Nothing. Exception Handled to ensure SP does not get terminated			 			     
	      END;
	
	    --  Insert record into ORDER main error table
		   INSERT INTO  "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH"(
						"SRCDOC_COMP",			
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"BILREL",
						"START_DATE",
						"END_DATE",
						"XNEGATIVE_ITEM",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"VALUE_RELEVANT",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS") 
				VALUES (CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						LV_CUR_UTC_TIME,
						CUR_ORDER."ACCT_NUM",
						CUR_ORDER."CC_RAI_ITEM_ID",
						CUR_ORDER."REFERENCE_TYPE",
						CUR_ORDER."CC_REF_ID",
						CUR_ORDER."KUNNR_SID",
						CUR_ORDER."BUKRS",
						CUR_ORDER."WAERS",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_QUANTITY",
						CUR_ORDER."CC_QUANTITY_UNIT",
						CUR_ORDER."CC_BILREL",
						CUR_ORDER."BILL_FROM_DT",
						CUR_ORDER."BILL_TO_DT",
						CUR_ORDER."CC_X_NEGATIVE_ITEM",
						CUR_ORDER."RECEIV_ACCOUNT",
						CUR_ORDER."BILL_FROM_DT",
						CUR_ORDER."CC_ZZ_ALLOCATE",
						CUR_ORDER."CC_ZZ_AUFNR",
						LV_BATCH_ID,
						CUR_ORDER."CC_ZZ_BILLER",
						CUR_ORDER."CC_ZZ_BKTXT",
						CUR_ORDER."CC_ZZ_BRANDACT",
						CUR_ORDER."CC_ZZ_BUKRS",
						CUR_ORDER."CC_ZZ_BU_VIEW",
						CUR_ORDER."CC_ZZ_CATRANSFER",
						CUR_ORDER."CC_ZZ_KOSTL",
						CUR_ORDER."CC_ZZ_LEGACY",
						CUR_ORDER."CHARGE_TYPE",
						CUR_ORDER."POB_TYPE",
						CUR_ORDER."CC_ZZ_MINPRICE",
						CUR_ORDER."CC_ZZ_MOD_TYPE",
						CUR_ORDER."CC_ZZ_MWSKZ",
						CUR_ORDER."CC_ZZ_PAOBJNR",
						CUR_ORDER."CC_ZZ_PRE_POST",
						CUR_ORDER."CC_ZZ_SGTXT",
						CUR_ORDER."CC_ZZ_TXJCD",
						CUR_ORDER."CC_ZZ_UPFFLG",
						CUR_ORDER."CC_ZZ_VBUND",
						CUR_ORDER."CC_ZZ_XBLNR",
						CUR_ORDER."CC_ZZ_ZUONR",
						CUR_ORDER."VALUE_RELEVANT",
						::SQL_ERROR_CODE,
						::SQL_ERROR_MESSAGE,
						LV_CUR_UTC);
				 
		--  Insert record into ORDER Condition error table for SSP(Standalone Selling Price)           
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH"(
					    "SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",	
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS")
			    VALUES (CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",			
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						LV_CUR_UTC_TIME,
						CUR_ORDER."CC_LC_SSP",
						CUR_ORDER."CC_PL_ACCOUNT",
						CUR_ORDER."AMT",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_CATEGORY",
						CUR_ORDER."CC_MAIN_CONDITION_TYPE",
						::SQL_ERROR_CODE,
						::SQL_ERROR_MESSAGE,
					    LV_CUR_UTC);		
			 
	    --  Insert record into ORDER Condition error table for TP(Transaction Price)
	        INSERT INTO "IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH"(
						"SRCDOC_COMP",
					    "SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")   
				VALUES (CUR_ORDER."SRCDOC_COMP",
						CUR_ORDER."SRCDOC_LOGSYS",			
						CUR_ORDER."SRCDOC_TYPE",
						CUR_ORDER."CC_SRCDOC_ID",
						LV_CUR_UTC_TIME,
					    CUR_ORDER."CC_LC_TP",
						CUR_ORDER."CC_PL_ACCOUNT",
						CUR_ORDER."CC_TP",
						CUR_ORDER."WAERS",
						CUR_ORDER."CC_CATEGORY",
						CUR_ORDER."CC_MAIN_CONDITION_TYPE",
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
					    LV_CUR_UTC);
			 
		    LV_ERROR_FLAG := 'Y';
	
	    END;
	
	--  Check the Error Status of the Record. 
	--  If Record is with Error or the sibling is with Error, then send to Error Table
		IF CUR_ORDER.CC_SIBLING_ERROR = '1' OR CUR_ORDER.ERROR_STATUS = '1' THEN
		
	    --  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
			CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"(CUR_ORDER."ERROR_CODE", 
																		   ERROR_TAB, 
				                                                           RECORD_COUNT);	
	   
	    -- 	Loop through the Error Records
			FOR i IN 1 .. :RECORD_COUNT DO
				
	        --  Fetch the Error Code
				CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
				
	        --  All erroneous records are inserted into Order Main EH table 
				INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH"(
							"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MINPRICE",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
					VALUES (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							LV_CUR_UTC_TIME,
							CUR_ORDER."ACCT_NUM",
							CUR_ORDER."CC_RAI_ITEM_ID",
							CUR_ORDER."REFERENCE_TYPE",
							CUR_ORDER."CC_REF_ID",
							CUR_ORDER."KUNNR_SID",
							CUR_ORDER."BUKRS",
							CUR_ORDER."WAERS",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_QUANTITY",
							CUR_ORDER."CC_QUANTITY_UNIT",
							CUR_ORDER."CC_BILREL",
							CUR_ORDER."BILL_FROM_DT",
							CUR_ORDER."BILL_TO_DT",
							CUR_ORDER."CC_X_NEGATIVE_ITEM",
							CUR_ORDER."RECEIV_ACCOUNT",
							CUR_ORDER."BILL_FROM_DT",
							CUR_ORDER."CC_ZZ_ALLOCATE",
							CUR_ORDER."CC_ZZ_AUFNR",
							LV_BATCH_ID,
							CUR_ORDER."CC_ZZ_BILLER",
							CUR_ORDER."CC_ZZ_BKTXT",
							CUR_ORDER."CC_ZZ_BRANDACT",
							CUR_ORDER."CC_ZZ_BUKRS",
							CUR_ORDER."CC_ZZ_BU_VIEW",
							CUR_ORDER."CC_ZZ_CATRANSFER",
							CUR_ORDER."CC_ZZ_KOSTL",
							CUR_ORDER."CC_ZZ_LEGACY",
							CUR_ORDER."CHARGE_TYPE",
							CUR_ORDER."POB_TYPE",
							CUR_ORDER."CC_ZZ_MINPRICE",
							CUR_ORDER."CC_ZZ_MOD_TYPE",
							CUR_ORDER."CC_ZZ_MWSKZ",
							CUR_ORDER."CC_ZZ_PAOBJNR",
							CUR_ORDER."CC_ZZ_PRE_POST",
							CUR_ORDER."CC_ZZ_SGTXT",
							CUR_ORDER."CC_ZZ_TXJCD",
							CUR_ORDER."CC_ZZ_UPFFLG",
							CUR_ORDER."CC_ZZ_VBUND",
							CUR_ORDER."CC_ZZ_XBLNR",
							CUR_ORDER."CC_ZZ_ZUONR",
							CUR_ORDER."VALUE_RELEVANT",
							:CURRENT_ERROR,
							LV_CUR_UTC);

	        --  All erroneous records are inserted into Order Condition EH Table for SSP(Standalone Selling Price)
			    INSERT INTO "IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")   
				    VALUES (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",			
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							:LV_CUR_UTC_TIME,
							CUR_ORDER."CC_LC_SSP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMT",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_CONDITION_TYPE",
							:CURRENT_ERROR,
						    LV_CUR_UTC);		
				
	        --  All erroneous records are inserted into Order Condition EH Table for TP(Transaction Price)
		        INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH"(
					      	"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
					VALUES (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",			
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							LV_CUR_UTC_TIME,
							CUR_ORDER."CC_LC_TP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."CC_TP",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_CONDITION_TYPE",
							:CURRENT_ERROR,
						    LV_CUR_UTC);
			
	        --  Set Error Flag				        
		        LV_ERROR_FLAG := 'Y';
					
			END FOR;		
			
	--  Processing for Successful Records
		ELSEIF CUR_ORDER.CC_SIBLING_ERROR = '0' AND CUR_ORDER.ERROR_STATUS = '0' THEN
		
			BEGIN AUTONOMOUS TRANSACTION
	        --  All valid records are inserted into Order Main Temp table 
			  INSERT INTO   "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN_TT"(
						    "SRCDOC_COMP",		
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MINPRICE",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT"
							)
					VALUES (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							LV_CUR_UTC_TIME,
							CUR_ORDER."ACCT_NUM",
							CUR_ORDER."CC_RAI_ITEM_ID",
							CUR_ORDER."REFERENCE_TYPE",
							CUR_ORDER."CC_REF_ID",
							CUR_ORDER."KUNNR_SID",
							CUR_ORDER."BUKRS",
							CUR_ORDER."WAERS",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_QUANTITY",
							CUR_ORDER."CC_QUANTITY_UNIT",
							CUR_ORDER."CC_BILREL",
							CUR_ORDER."BILL_FROM_DT",
							CUR_ORDER."BILL_TO_DT",
							CUR_ORDER."CC_X_NEGATIVE_ITEM",
							CUR_ORDER."RECEIV_ACCOUNT",
							CUR_ORDER."BILL_FROM_DT",
							CUR_ORDER."CC_ZZ_ALLOCATE",
							CUR_ORDER."CC_ZZ_AUFNR",
							LV_BATCH_ID,
							CUR_ORDER."CC_ZZ_BILLER",
							CUR_ORDER."CC_ZZ_BKTXT",
							CUR_ORDER."CC_ZZ_BRANDACT",
							CUR_ORDER."CC_ZZ_BUKRS",
							CUR_ORDER."CC_ZZ_BU_VIEW",
							CUR_ORDER."CC_ZZ_CATRANSFER",
							CUR_ORDER."CC_ZZ_KOSTL",
							CUR_ORDER."CC_ZZ_LEGACY",
							CUR_ORDER."CHARGE_TYPE",
							CUR_ORDER."POB_TYPE",
							CUR_ORDER."CC_ZZ_MINPRICE",
							CUR_ORDER."CC_ZZ_MOD_TYPE",
							CUR_ORDER."CC_ZZ_MWSKZ",
							CUR_ORDER."CC_ZZ_PAOBJNR",
							CUR_ORDER."CC_ZZ_PRE_POST",
							CUR_ORDER."CC_ZZ_SGTXT",
							CUR_ORDER."CC_ZZ_TXJCD",
							CUR_ORDER."CC_ZZ_UPFFLG",
							CUR_ORDER."CC_ZZ_VBUND",
							CUR_ORDER."CC_ZZ_XBLNR",
							CUR_ORDER."CC_ZZ_ZUONR",
							CUR_ORDER."VALUE_RELEVANT"
							);
					 
	        --  All valid records are inserted ORDER Condition table for SSP(Standalone Selling Price)           
				INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_COND_TT"(
						  	"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"BATCH_ID")
				    VALUES (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",			
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							LV_CUR_UTC_TIME,
							CUR_ORDER."CC_LC_SSP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."AMT",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_CONDITION_TYPE",
							LV_BATCH_ID);		
					 
	        --  All valid records are inserted ORDER Condition table for TP(Transaction Price)
		        INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_COND_TT"(
					      	"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"BATCH_ID")
					VALUES (CUR_ORDER."SRCDOC_COMP",
							CUR_ORDER."SRCDOC_LOGSYS",			
							CUR_ORDER."SRCDOC_TYPE",
							CUR_ORDER."CC_SRCDOC_ID",
							LV_CUR_UTC_TIME,
							CUR_ORDER."CC_LC_TP",
							CUR_ORDER."CC_PL_ACCOUNT",
							CUR_ORDER."CC_TP",
							CUR_ORDER."WAERS",
							CUR_ORDER."CC_CATEGORY",
							CUR_ORDER."CC_MAIN_CONDITION_TYPE",
							LV_BATCH_ID);
							
	        END;
	        
		END IF;
		
	END FOR;
	
	FOR CUR_ORDER_PARENT AS C_RAI_INVC_ORDR_PARENT DO
	
	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
	
	  --  Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION 
		
	  --  Do Nothing. Exception Handled to ensure SP does not get terminated
	      
	      END;
	    --  All records of the corresponding parent is inserted into ORDER main error table	      
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH"(
						"SRCDOC_COMP",			
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"BILREL",
						"START_DATE",
						"END_DATE",
						"XNEGATIVE_ITEM",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"VALUE_RELEVANT",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
				 SELECT "SRCDOC_COMP",			
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"WAERS",
						"QUANTITY",
						"QUANTITY_UNIT",
						"BILREL",
						"START_DATE",
						"END_DATE",
						"XNEGATIVE_ITEM",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"VALUE_RELEVANT",
                 		::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC	      	        		
                   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN_TT" 
                  WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
                    AND "ZZ_BATCH_ID" = LV_BATCH_ID;

		--  All records of the corresponding parent is inserted into Order Condition EH Table for 
		--  SSP(Standalone Selling Price) and TP(Transaction Price)
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
  						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS")
				 SELECT COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",			
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",
						LV_CUR_UTC_TIME,
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",			
						COND."BETRW",
						COND."WAERS",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE",
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_COND_TT"
				          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN_TT" 
					      WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
					
			LV_ERROR_FLAG := 'Y';
	    
	    END;

    --  Check if any siblings of the parent is in ORDR MAIN Error table.
    --  If Yes move the entire dataset of the corresponding parent into MAIN error and COND error tables.
		SELECT COUNT(SRCDOC_ID) INTO LV_COUNT_ORDR 
		  FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH" 
	     WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
	       AND "ZZ_BATCH_ID" = LV_BATCH_ID;
		
		IF LV_COUNT_ORDR > 0 THEN
		
		--  All records of the corresponding parent is inserted into Order Main error table 
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH"(
						"SRCDOC_COMP",			
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"BILREL",
						"START_DATE",
						"END_DATE",
						"XNEGATIVE_ITEM",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"VALUE_RELEVANT",
						"ERROR_CODE",
						"ERROR_CREATE_TS")
				 SELECT "SRCDOC_COMP",			
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						LV_CUR_UTC_TIME,
						"HEADER_ID",
						"ITEM_ID",
						"REFERENCE_TYPE",
						"REFERENCE_ID",
						"KUNNR",
						"BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"BILREL",
						"START_DATE",
						"END_DATE",
						"XNEGATIVE_ITEM",
						"RECEIV_ACCOUNT",
						"INCEPTION_DATE",
						"ZZ_ALLOCATE",
						"ZZ_AUFNR",
						"ZZ_BATCH_ID",
						"ZZ_BILLER",
						"ZZ_BKTXT",
						"ZZ_BRANDACT",
						"ZZ_BUKRS",
						"ZZ_BU_VIEW",
						"ZZ_CATRANSFER",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MATNR",
						"ZZ_MATNR_GRP",
						"ZZ_MINPRICE",
						"ZZ_MOD_TYPE",
						"ZZ_MWSKZ",
						"ZZ_PAOBJNR",
						"ZZ_PRE_POST",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_UPFFLG",
						"ZZ_VBUND",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"VALUE_RELEVANT",
						:LC_SQL_ERROR,
						:LV_CUR_UTC
				   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN_TT" 
				  WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
		
		--  All records of the corresponding parent is inserted into Order Condition error Table for 
		--  SSP(Standalone Selling Price) and TP(Transaction price)
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
						"ERROR_CREATE_TS")
				 SELECT COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",			
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",
						LV_CUR_UTC_TIME,
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",			
						COND."BETRW",
						COND."WAERS",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE",
						LC_SQL_ERROR,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_COND_TT" 
				          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN_TT" 
					      WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
			  
		--  Set Error Flag				        
			LV_ERROR_FLAG := 'Y';	  
	
	--	Processing of successful records(none of the siblings of a corresponding parent are in error)
		ELSE
		
			BEGIN AUTONOMOUS TRANSACTION
			
			--  All valid records are inserted into Order Main table 
				INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN"(
							"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MINPRICE",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT")
					SELECT 	"SRCDOC_COMP",			
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							LV_CUR_UTC_TIME,
							"HEADER_ID",
							"ITEM_ID",
							"REFERENCE_TYPE",
							"REFERENCE_ID",
							"KUNNR",
							"BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"BILREL",
							"START_DATE",
							"END_DATE",
							"XNEGATIVE_ITEM",
							"RECEIV_ACCOUNT",
							"INCEPTION_DATE",
							"ZZ_ALLOCATE",
							"ZZ_AUFNR",
							"ZZ_BATCH_ID",
							"ZZ_BILLER",
							"ZZ_BKTXT",
							"ZZ_BRANDACT",
							"ZZ_BUKRS",
							"ZZ_BU_VIEW",
							"ZZ_CATRANSFER",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MATNR",
							"ZZ_MATNR_GRP",
							"ZZ_MINPRICE",
							"ZZ_MOD_TYPE",
							"ZZ_MWSKZ",
							"ZZ_PAOBJNR",
							"ZZ_PRE_POST",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_UPFFLG",
							"ZZ_VBUND",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"VALUE_RELEVANT"
					   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN_TT" 
					  WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
					    AND "ZZ_BATCH_ID" = LV_BATCH_ID;

			--  All valid records are inserted ORDER Condition table for SSP(Standalone Selling Price) and TP(Transaction Price)         
				INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_COND"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE")
				     SELECT COND."SRCDOC_COMP",
							COND."SRCDOC_LOGSYS",
							COND."SRCDOC_TYPE",
							COND."SRCDOC_ID",
							LV_CUR_UTC_TIME,
							COND."CONDITION_TYPE",
							COND."PL_ACCOUNT",			
							COND."BETRW",
							COND."WAERS",
							COND."CATEGORY",
							COND."MAIN_COND_TYPE"
                       FROM	(SELECT * 
                               FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_COND_TT"
                              WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					        (SELECT "SRCDOC_ID" 
					           FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN_TT" 
					          WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
					            AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
					  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
		    END;
                  				
	--      Insert PK of successfully processed Records into Local Temp Tables 
	--      for Updating the deleted flag in corresponding Error Tables records
				   		      
			INSERT INTO	#UPDATE_EH_DELETION_ORDR_MAIN_TV (SRCDOC_ID) 
				 SELECT "SRCDOC_ID" 
				   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN"
				  WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
			   		
			INSERT INTO	#UPDATE_EH_DELETION_ORDR_COND_TV (SRCDOC_ID) 
				 SELECT COND."SRCDOC_ID" 
				   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_COND" COND,
	                	(SELECT "SRCDOC_ID" 
	                	   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_ORDR_MAIN" 
					  	  WHERE "HEADER_ID" = CUR_ORDER_PARENT."ACCT_NUM") MAIN 
				  WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
							          												 		   		        		   	   
		END IF;
	
	END FOR;		    
		 
--  Update Order Main Error Table

    UPDATE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH" A
   	  FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_MAIN_TV B
	    ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 

--  Update Order Cond Error Table

    UPDATE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH" A
      FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_COND_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_COND_TV B
	    ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1);
			
	-------------------------------------------------------------------------------------------			
	--INVOICE CREATION			
	-------------------------------------------------------------------------------------------
		 
	--------------------------------------------------------------------------------------------------
	-- Local Temporary Tables Declaration
	-------------------------------------------------------------------------------------------------- 			 
	   
    CREATE LOCAL TEMPORARY TABLE #UPDATE_TV_INVC(
        ACCT_NUM NVARCHAR(16),
		BILL_FROM_DT       DATE,
		BILL_TO_DT         DATE, 
	    ITEM_ID                NVARCHAR(5),
	    SRCDOC_ID                NVARCHAR(35),
	    ORIGDOCID                NVARCHAR(35),
	    REFERENCE_ID             NVARCHAR(30),
	    RAI_ITEM_ID              NVARCHAR(15),
	    BATCH_ID                 INTEGER);
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_MAIN_TV_INVC_TV (SRCDOC_ID NVARCHAR(35));
	
	CREATE LOCAL TEMPORARY TABLE #UPDATE_EH_DELETION_ORDR_COND_TV_INVC_TV (SRCDOC_ID NVARCHAR(35));
	
	--------------------------------------------------------------------------------------------------
	-- Invoice Cursors Loop
	-------------------------------------------------------------------------------------------------- 
	
	FOR CUR_INVC AS C_RAI_INVC DO
	
    --  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
	
	  --  Define Exit Handler
	      DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION	
	  --  Do Nothing. Exception Handled to ensure SP does not get terminated			 			     
	      END;
	      
		--  Insert record into TV INVC main error table
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH"(
					    "SRCDOC_COMP",
					    "SRCDOC_LOGSYS",
					    "SRCDOC_TYPE",
					    "SRCDOC_ID",
					    "TIMESTAMP_UTC",
					    "HEADER_ID",
					    "ITEM_ID",				
					    "BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"QUANTITY_REL",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"EXCHANGE_RATE",
						"BLDAT",
						"ZZ_BUKRS",
						"ZZ_BATCH_ID",
						"ZZ_BKTXT",
						"ZZ_BLDAT",
						"ZZ_BUDAT",
						"ZZ_ICHKONT",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MWSKZ",
						"ZZ_SGTXT",
						"ZZ_TXJCD",
						"ZZ_XBLNR",
						"ZZ_ZUONR",
						"POSTING_DATE",
						"ERROR_CODE",
						"TECHNICAL_MESSAGE",
						"ERROR_CREATE_TS")						
				VALUES (CUR_INVC."SRCDOC_COMP",
						CUR_INVC."SRCDOC_LOGSYS",
						CUR_INVC."SRCDOC_TYPE",
						CUR_INVC."CC_SRCDOC_ID",					 
						LV_CUR_UTC_TIME,
						CUR_INVC."ACCT_NUM",
						CUR_INVC."CC_RAI_ITEM_ID",					 					 
						CUR_INVC."BUKRS", 
						CUR_INVC."WAERS",
						CUR_INVC."WAERS",
						CUR_INVC."CC_QUANTITY",
						CUR_INVC."CC_QUANTITY_UNIT",
						CUR_INVC."CC_QUANTITY_REL",
						CUR_INVC."ORIGDOC_COMP",
						CUR_INVC."ORIGDOC_LOGSYS",
						CUR_INVC."ORIGDOC_TYPE",					 					 
						CUR_INVC."CC_ORIG_DOC_ID",					 
						CUR_INVC."CC_ZZ_BUDAT",
						CUR_INVC."CC_FINAL_INVOICE",
						CUR_INVC."CC_EXCHANGE_RATE",	
						CUR_INVC."CC_ZZ_BLDAT",
						CUR_INVC."CC_ZZ_BUKRS",
						:LV_BATCH_ID,
						CUR_INVC."CC_ZZ_BKTXT",  
						CUR_INVC."CC_ZZ_BLDAT",
						CUR_INVC."CC_ZZ_BUDAT", 
						CUR_INVC."CC_ZZ_ICHKONT",
						CUR_INVC."CC_ZZ_KOSTL",
						CUR_INVC."CC_ZZ_LEGACY",  
						CUR_INVC."CC_ZZ_MWSKZ", 
						CUR_INVC."CC_ZZ_SGTXT",
						CUR_INVC."CC_ZZ_TXJCD",
						CUR_INVC."CC_ZZ_XBLNR",
						CUR_INVC."CC_ZZ_ZUONR",
						:LV_CUR_DATE,
					    ::SQL_ERROR_CODE,
			            ::SQL_ERROR_MESSAGE,
			            :LV_CUR_UTC);				
			
		--  Insert record into TV INVC Condition error table for SSP(Standalone Selling Price)           
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"HWAER",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
				VALUES (CUR_INVC."SRCDOC_COMP",
						CUR_INVC."SRCDOC_LOGSYS",
						CUR_INVC."SRCDOC_TYPE",
						CUR_INVC."CC_SRCDOC_ID",					 
						LV_CUR_UTC_TIME,
						CUR_INVC."CC_LC_SSP", 
						CUR_INVC."CC_PL_ACCOUNT",
						CUR_INVC."AMT", 
						CUR_INVC."WAERS",
						CUR_INVC."WAERS",
						CUR_INVC."CC_CATEGORY",
						CUR_INVC."CC_MAIN_COND_TYPE", 
						::SQL_ERROR_CODE,
			    	    ::SQL_ERROR_MESSAGE,
			            LV_CUR_UTC);
						 
        -- 	Insert record into ORDER Condition error table for TP(Transaction Price)           
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"HWAER",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
				VALUES (CUR_INVC."SRCDOC_COMP",
						CUR_INVC."SRCDOC_LOGSYS",
						CUR_INVC."SRCDOC_TYPE",
						CUR_INVC."CC_SRCDOC_ID",					 
						LV_CUR_UTC_TIME,
						CUR_INVC."CC_LC_TP", 
						CUR_INVC."CC_PL_ACCOUNT",
						CUR_INVC."AMT", 
						CUR_INVC."WAERS",
						CUR_INVC."WAERS",
						CUR_INVC."CC_CATEGORY",
						CUR_INVC."CC_MAIN_COND_TYPE", 
						::SQL_ERROR_CODE,
			    	    ::SQL_ERROR_MESSAGE,
			            LV_CUR_UTC);
	             
		    LV_ERROR_FLAG := 'Y';

	    END;
	  
    --  Check the Error Status of the Record. If Record is with Error, then send to Error Table
		IF CUR_INVC.CC_IS_SIBLING_ERROR = '1' 
		OR CUR_INVC.ERROR_STATUS = '1' 
		THEN
		
        --  Call the Stored Procedure to split the concatenated Error Messages into Error Rows
			CALL "NDB_COMMON"."IFRS_R1.COMMON_COMP.EH::SP_EH_SPLIT_ERRORS"( CUR_INVC."ERROR_CODE",
																		    ERROR_TAB, 
				                                                            RECORD_COUNT
				                                                          );	
        --  Loop through the Error Records
			FOR i IN 1 .. :RECORD_COUNT DO
				
            --  Fetch the Error Code
				CURRENT_ERROR = :ERROR_TAB."ERROR_CODE"[:i];
					  
           --	All erroneous records are inserted into TV Invc Main EH table 
			    INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH"(
					        "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",				
						    "BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"QUANTITY_REL",
							"ORIGDOC_COMP",
							"ORIGDOC_LOGSYS",
							"ORIGDOC_TYPE",
							"ORIGDOC_ID",
							"DUE_DATE",
							"FINAL_INVOICE",
							"EXCHANGE_RATE",
							"BLDAT",
							"ZZ_BATCH_ID",
							"ZZ_BUKRS",
							"ZZ_BKTXT",
							"ZZ_BLDAT",
							"ZZ_BUDAT",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MWSKZ",
						    "ZZ_SGTXT",
							"ZZ_TXJCD",
					        "ZZ_XBLNR",
							"ZZ_ZUONR",
							"POSTING_DATE",
				            "ERROR_CODE",		    
				            "ERROR_CREATE_TS")
			    	VALUES (CUR_INVC."SRCDOC_COMP",
							CUR_INVC."SRCDOC_LOGSYS",
							CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."CC_SRCDOC_ID",					 
							LV_CUR_UTC_TIME,
							CUR_INVC."ACCT_NUM",
							CUR_INVC."CC_RAI_ITEM_ID",					 					 
							CUR_INVC."BUKRS", 
							CUR_INVC."WAERS",
							CUR_INVC."WAERS",
							CUR_INVC."CC_QUANTITY",
							CUR_INVC."CC_QUANTITY_UNIT",
							CUR_INVC."CC_QUANTITY_REL",
							CUR_INVC."ORIGDOC_COMP",
							CUR_INVC."ORIGDOC_LOGSYS",
							CUR_INVC."ORIGDOC_TYPE",					 					 
							CUR_INVC."CC_ORIG_DOC_ID",					 
							CUR_INVC."CC_ZZ_BUDAT",
							CUR_INVC."CC_FINAL_INVOICE",
							CUR_INVC."CC_EXCHANGE_RATE",	
							CUR_INVC."CC_ZZ_BLDAT",
							CUR_INVC."CC_ZZ_BUKRS",
							LV_BATCH_ID,
							CUR_INVC."CC_ZZ_BKTXT",  
							CUR_INVC."CC_ZZ_BLDAT",
							CUR_INVC."CC_ZZ_BUDAT", 
							CUR_INVC."CC_ZZ_ICHKONT",
							CUR_INVC."CC_ZZ_KOSTL",
							CUR_INVC."CC_ZZ_LEGACY",  
							CUR_INVC."CC_ZZ_MWSKZ", 
							CUR_INVC."CC_ZZ_SGTXT",
							CUR_INVC."CC_ZZ_TXJCD",
							CUR_INVC."CC_ZZ_XBLNR",
							CUR_INVC."CC_ZZ_ZUONR",
							:LV_CUR_DATE,
						    :CURRENT_ERROR,
				 			LV_CUR_UTC);
			 			
            -- 	All erroneous records are inserted into Invoice Condition EH Table for SSP(Standalone Selling Price)
		   		INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH"(
	                    	"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"HWAER",
							"WAERS",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
					VALUES (CUR_INVC."SRCDOC_COMP",
							CUR_INVC."SRCDOC_LOGSYS",
							CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."CC_SRCDOC_ID",					 
							LV_CUR_UTC_TIME,
							CUR_INVC."CC_LC_SSP", 
							CUR_INVC."CC_PL_ACCOUNT",
							CUR_INVC."AMT",
							CUR_INVC."WAERS", 
							CUR_INVC."WAERS",
							CUR_INVC."CC_CATEGORY",
							CUR_INVC."CC_MAIN_COND_TYPE", 
							:CURRENT_ERROR,
				            LV_CUR_UTC);
			
			--  All erroneous records are inserted into Invoice Condition EH Table for TP( Transaction Price)
		   	 	INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",			
							"BETRW",
							"WAERS",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"ERROR_CODE",
						    "ERROR_CREATE_TS")
			    	VALUES (CUR_INVC."SRCDOC_COMP",
							CUR_INVC."SRCDOC_LOGSYS",
							CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."CC_SRCDOC_ID",					 
							LV_CUR_UTC_TIME,
							CUR_INVC."CC_LC_TP", 
							CUR_INVC."CC_PL_ACCOUNT",
							CUR_INVC."AMT", 
							CUR_INVC."WAERS",
							CUR_INVC."WAERS",
							CUR_INVC."CC_CATEGORY",
							CUR_INVC."CC_MAIN_COND_TYPE", 
							:CURRENT_ERROR,
				            LV_CUR_UTC);
			 			 	
			-- 	Set Error Flag				        
				LV_ERROR_FLAG := 'Y';
				
			END FOR;
    --  Processing for Successful Records
	    ELSEIF CUR_INVC.CC_IS_SIBLING_ERROR = '0' 
	        AND CUR_INVC.ERROR_STATUS = '0' 
	       THEN
	       
	   	    BEGIN AUTONOMOUS TRANSACTION
	   	       
            --  All valid records are inserted into Invoice Main Temp table
			  INSERT INTO   "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_TT"(
						    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"QUANTITY_REL",
							"ORIGDOC_COMP",
							"ORIGDOC_LOGSYS",
							"ORIGDOC_TYPE",
							"ORIGDOC_ID",
							"DUE_DATE",
							"FINAL_INVOICE",
							"EXCHANGE_RATE",
							"BLDAT",
							"ZZ_BUKRS",
							"ZZ_BATCH_ID",
							"ZZ_BKTXT",
							"ZZ_BLDAT",
							"ZZ_BUDAT",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MWSKZ",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"POSTING_DATE"
							)							
					VALUES (CUR_INVC."SRCDOC_COMP",
							CUR_INVC."SRCDOC_LOGSYS",
							CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."CC_SRCDOC_ID",					 
							LV_CUR_UTC_TIME,
							CUR_INVC."ACCT_NUM",
							CUR_INVC."CC_RAI_ITEM_ID",					 					 
							CUR_INVC."BUKRS", 
							CUR_INVC."WAERS",
							CUR_INVC."WAERS",
							CUR_INVC."CC_QUANTITY",
							CUR_INVC."CC_QUANTITY_UNIT",
							CUR_INVC."CC_QUANTITY_REL",
							CUR_INVC."ORIGDOC_COMP",
							CUR_INVC."ORIGDOC_LOGSYS",
							CUR_INVC."ORIGDOC_TYPE",					 					 
							CUR_INVC."CC_ORIG_DOC_ID",					 
							CUR_INVC."CC_ZZ_BUDAT",
							CUR_INVC."CC_FINAL_INVOICE",
							CUR_INVC."CC_EXCHANGE_RATE",	
							CUR_INVC."CC_ZZ_BLDAT",
							CUR_INVC."CC_ZZ_BUKRS",
							LV_BATCH_ID,
							CUR_INVC."CC_ZZ_BKTXT",  
							CUR_INVC."CC_ZZ_BLDAT",
							CUR_INVC."CC_ZZ_BUDAT", 
							CUR_INVC."CC_ZZ_ICHKONT",
							CUR_INVC."CC_ZZ_KOSTL",
							CUR_INVC."CC_ZZ_LEGACY",  
							CUR_INVC."CC_ZZ_MWSKZ", 
							CUR_INVC."CC_ZZ_SGTXT",
							CUR_INVC."CC_ZZ_TXJCD",
							CUR_INVC."CC_ZZ_XBLNR",
							CUR_INVC."CC_ZZ_ZUONR",
							:LV_CUR_DATE
							);					
	
          --  All valid records are inserted into Invoice Main Temp table for SSP(Standalone Selling Price) 
			  INSERT INTO   "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_TT"(
							"SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
						 	"BETRW",
							"WAERS",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"BATCH_ID")				
					VALUES (CUR_INVC."SRCDOC_COMP",
						    CUR_INVC."SRCDOC_LOGSYS",
						    CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."CC_SRCDOC_ID",					 
							LV_CUR_UTC_TIME,
							CUR_INVC."CC_LC_SSP", 
							CUR_INVC."CC_PL_ACCOUNT",
							CUR_INVC."AMT", 
							CUR_INVC."WAERS",
							CUR_INVC."WAERS",
							CUR_INVC."CC_CATEGORY",
							CUR_INVC."CC_MAIN_COND_TYPE",
							LV_BATCH_ID);
						 
          --  All valid records are inserted into Invoice Main Temp table for TP(Transaction Price)
	 		  INSERT INTO   "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_TT"(
				 		    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
						 	"BETRW",
							"WAERS",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE",
							"BATCH_ID")
					VALUES (CUR_INVC."SRCDOC_COMP",
							CUR_INVC."SRCDOC_LOGSYS",
							CUR_INVC."SRCDOC_TYPE",
							CUR_INVC."CC_SRCDOC_ID",					 
							LV_CUR_UTC_TIME,
							CUR_INVC."CC_LC_TP", 
							CUR_INVC."CC_PL_ACCOUNT",
							CUR_INVC."AMT", 
							CUR_INVC."WAERS",
							CUR_INVC."WAERS",
							CUR_INVC."CC_CATEGORY",
							CUR_INVC."CC_MAIN_COND_TYPE",
							LV_BATCH_ID);
	        END; 
	               					 			 												          												 		   		        		   	   
	    END IF; 
	    	 
	    
	END FOR;

	FOR CUR_INVC_PARENT AS C_RAI_INVC_PARENT DO
	
	--  Define Exit Handler
		DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		BEGIN AUTONOMOUS TRANSACTION 
	
	  --  Define Exit Handler
		  DECLARE EXIT HANDLER FOR SQLEXCEPTION 
		  BEGIN AUTONOMOUS TRANSACTION 
		
	  --    Do Nothing. Exception Handled to ensure SP does not get terminated
	      
	      END;
		  
		--	All erraneous records of the corresponding parent is inserted into INVC main error table	
            INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH"(
					    "SRCDOC_COMP",
					    "SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",				
					    "BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"QUANTITY_REL",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"EXCHANGE_RATE",
						"BLDAT",
						"ZZ_BUKRS",
						"ZZ_BATCH_ID",
						"ZZ_BKTXT",
						"ZZ_BLDAT",
						"ZZ_BUDAT",
						"ZZ_ICHKONT",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MWSKZ",
					    "ZZ_SGTXT",
						"ZZ_TXJCD",
				        "ZZ_XBLNR",
						"ZZ_ZUONR",
						"POSTING_DATE",
			            "ERROR_CODE",
			            "TECHNICAL_MESSAGE",	    
			            "ERROR_CREATE_TS")
			     SELECT "SRCDOC_COMP",
					    "SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						LV_CUR_UTC_TIME,
						"HEADER_ID",
						"ITEM_ID",				
					    "BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"QUANTITY_REL",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"EXCHANGE_RATE",
						"BLDAT",
						"ZZ_BUKRS",
						LV_BATCH_ID,
						"ZZ_BKTXT",
						"ZZ_BLDAT",
						"ZZ_BUDAT",
						"ZZ_ICHKONT",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MWSKZ",
					    "ZZ_SGTXT",
						"ZZ_TXJCD",
				        "ZZ_XBLNR",
						"ZZ_ZUONR",
						:LV_CUR_DATE,
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC
                   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_TT" 
                  WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
                    AND "ZZ_BATCH_ID" = LV_BATCH_ID;		
                  
		--	All erraneous records of the corresponding parent is inserted into INVC cond error table
		--  SSP(Standalone Selling Price) and TP(Transaction Price)          
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"HWAER",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "TECHNICAL_MESSAGE",
					    "ERROR_CREATE_TS")
				SELECT  COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",				 
						LV_CUR_UTC_TIME,
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",			
						COND."BETRW",
						COND."WAERS",
						COND."HWAER",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE", 
						::SQL_ERROR_CODE,
					    ::SQL_ERROR_MESSAGE,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_TT"
				          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_TT" 
					      WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
					        AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
	             
		    LV_ERROR_FLAG := 'Y';

	    END;
	    
	    LV_COUNT_ORDR := 0;
	    
    --  Check if any siblings of the parent is in ORDR MAIN Error or ORDR INVC error  table.
    --  If Yes move the entire dataset of the corresponding parent into INVC MAIN error 
    --  and INVC COND error tables.
		SELECT COUNT(SRCDOC_ID) INTO LV_COUNT_ORDR 
		  FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_ORDR_MAIN_EH" 
	     WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
	       AND "ZZ_BATCH_ID" = LV_BATCH_ID;	       
	     
	    SELECT COUNT(SRCDOC_ID) INTO LV_COUNT_INVC 
	      FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH" 
	     WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
	       AND "ZZ_BATCH_ID" = LV_BATCH_ID;	       
		
		IF LV_COUNT_ORDR > 0 OR LV_COUNT_INVC > 0  THEN	
		
		--  All records of the corresponding parent is inserted into INVC Main error table 
            INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH"(
					    "SRCDOC_COMP",
					    "SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"HEADER_ID",
						"ITEM_ID",				
					    "BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"QUANTITY_REL",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"EXCHANGE_RATE",
						"BLDAT",
						"ZZ_BUKRS",
						"ZZ_BATCH_ID",
						"ZZ_BKTXT",
						"ZZ_BLDAT",
						"ZZ_BUDAT",
						"ZZ_ICHKONT",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MWSKZ",
					    "ZZ_SGTXT",
						"ZZ_TXJCD",
				        "ZZ_XBLNR",
						"ZZ_ZUONR",
						"POSTING_DATE",
			            "ERROR_CODE",
			            "ERROR_CREATE_TS")
			     SELECT "SRCDOC_COMP",
					    "SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						LV_CUR_UTC_TIME,
						"HEADER_ID",
						"ITEM_ID",				
					    "BUKRS",
						"WAERS",
						"HWAER",
						"QUANTITY",
						"QUANTITY_UNIT",
						"QUANTITY_REL",
						"ORIGDOC_COMP",
						"ORIGDOC_LOGSYS",
						"ORIGDOC_TYPE",
						"ORIGDOC_ID",
						"DUE_DATE",
						"FINAL_INVOICE",
						"EXCHANGE_RATE",
						"BLDAT",
						"ZZ_BUKRS",
						LV_BATCH_ID,
						"ZZ_BKTXT",
						"ZZ_BLDAT",
						"ZZ_BUDAT",
						"ZZ_ICHKONT",
						"ZZ_KOSTL",
						"ZZ_LEGACY",
						"ZZ_MWSKZ",
					    "ZZ_SGTXT",
						"ZZ_TXJCD",
				        "ZZ_XBLNR",
				        "ZZ_ZUONR",
				        :LV_CUR_DATE,
						LC_SQL_ERROR,
						LV_CUR_UTC
                   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_TT" 
                  WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
                    AND "ZZ_BATCH_ID"  = LV_BATCH_ID;		
                  
		--	All erraneous records of the corresponding parent is inserted into INVC cond error table
		--  SSP(Standalone Selling Price) and TP(Transaction Price)          
			INSERT INTO "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH"(
						"SRCDOC_COMP",
						"SRCDOC_LOGSYS",
						"SRCDOC_TYPE",
						"SRCDOC_ID",
						"TIMESTAMP_UTC",
						"CONDITION_TYPE",
						"PL_ACCOUNT",			
						"BETRW",
						"WAERS",
						"HWAER",
						"CATEGORY",
						"MAIN_COND_TYPE",
						"ERROR_CODE",
					    "ERROR_CREATE_TS")
				SELECT  COND."SRCDOC_COMP",
						COND."SRCDOC_LOGSYS",
						COND."SRCDOC_TYPE",
						COND."SRCDOC_ID",				 
						LV_CUR_UTC_TIME,
						COND."CONDITION_TYPE",
						COND."PL_ACCOUNT",			
						COND."BETRW",
						COND."WAERS",
						COND."HWAER",
						COND."CATEGORY",
						COND."MAIN_COND_TYPE", 
						LC_SQL_ERROR,
						LV_CUR_UTC
				   FROM (SELECT * 
				           FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_TT"
				          WHERE "BATCH_ID"  = LV_BATCH_ID) COND,
					    (SELECT "SRCDOC_ID" 
					       FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_TT" 
					      WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
					        AND "ZZ_BATCH_ID"  = LV_BATCH_ID) MAIN 
				  WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";

		--  Set Error Flag				        
			LV_ERROR_FLAG := 'Y';	  
	
	--	Processing of successful records(none of the siblings of a corresponding parent are in error)
		ELSEIF (LV_COUNT_ORDR = 0 AND LV_COUNT_INVC = 0)  THEN
		
			BEGIN AUTONOMOUS TRANSACTION	

            --  All valid records are inserted into Invoice Main table
			  INSERT INTO   "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN"(
						    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"HEADER_ID",
							"ITEM_ID",
							"BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"QUANTITY_REL",
							"ORIGDOC_COMP",
							"ORIGDOC_LOGSYS",
							"ORIGDOC_TYPE",
							"ORIGDOC_ID",
							"DUE_DATE",
							"FINAL_INVOICE",
							"EXCHANGE_RATE",
							"BLDAT",
							"ZZ_BUKRS",
							"ZZ_BATCH_ID",
							"ZZ_BKTXT",
							"ZZ_BLDAT",
							"ZZ_BUDAT",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MWSKZ",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							"POSTING_DATE")						    
                     SELECT "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							LV_CUR_UTC_TIME,
							"HEADER_ID",
							"ITEM_ID",
							"BUKRS",
							"WAERS",
							"HWAER",
							"QUANTITY",
							"QUANTITY_UNIT",
							"QUANTITY_REL",
							"ORIGDOC_COMP",
							"ORIGDOC_LOGSYS",
							"ORIGDOC_TYPE",
							"ORIGDOC_ID",
							"DUE_DATE",
							"FINAL_INVOICE",
							"EXCHANGE_RATE",
							"BLDAT",
							"ZZ_BUKRS",
							"ZZ_BATCH_ID",
							"ZZ_BKTXT",
							"ZZ_BLDAT",
							"ZZ_BUDAT",
							"ZZ_ICHKONT",
							"ZZ_KOSTL",
							"ZZ_LEGACY",
							"ZZ_MWSKZ",
							"ZZ_SGTXT",
							"ZZ_TXJCD",
							"ZZ_XBLNR",
							"ZZ_ZUONR",
							:LV_CUR_DATE
					   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_TT" 
					  WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
					    AND "ZZ_BATCH_ID" = LV_BATCH_ID;

            --  All valid records are inserted into Invoice Cond table 
            --  for SSP(Standalone Selling Price) and TP(Transaction Price)
	 		  INSERT INTO   "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND"(
				 		    "SRCDOC_COMP",
							"SRCDOC_LOGSYS",
							"SRCDOC_TYPE",
							"SRCDOC_ID",
							"TIMESTAMP_UTC",
							"CONDITION_TYPE",
							"PL_ACCOUNT",
						 	"BETRW",
							"WAERS",
							"HWAER",
							"CATEGORY",
							"MAIN_COND_TYPE")					  
					 SELECT COND."SRCDOC_COMP",
							COND."SRCDOC_LOGSYS",
							COND."SRCDOC_TYPE",
							COND."SRCDOC_ID",
							LV_CUR_UTC_TIME,
							COND."CONDITION_TYPE",
							COND."PL_ACCOUNT",
						 	COND."BETRW",
							COND."WAERS",
							COND."HWAER",
							COND."CATEGORY",
							COND."MAIN_COND_TYPE"
					   FROM (SELECT * 
					           FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_TT"
					          WHERE "BATCH_ID" = LV_BATCH_ID) COND,
					        (SELECT "SRCDOC_ID" 
					           FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_TT" 
					          WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
					            AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				      WHERE COND."SRCDOC_ID" = MAIN."SRCDOC_ID";
		    END;				      
								
--          Insert PK of successfully processed Records into Local Temp Tables 
--          for Updating NDB_TS in corresponding Landing Tables records
	
	 		INSERT INTO #UPDATE_TV_INVC(
			   		    ACCT_NUM, 
				   	    BILL_FROM_DT,
				   	    BILL_TO_DT,
				   	    ORIGDOCID,
				   	    ITEM_ID,
				   	    SRCDOC_ID,
				   	    REFERENCE_ID,
				   	    RAI_ITEM_ID,
				   	    BATCH_ID)	   			    
			     SELECT A."ACCT_NUM",
			   		    A."BILL_FROM_DT",
			   		    A."BILL_TO_DT",
			   		    A."CC_ORIG_DOC_ID",
			   		    A."ITEM_ID",
			   		    A."CC_SRCDOC_ID",
			   		    A."CC_REF_ID",
			   		    A."CC_RAI_ITEM_ID",
			   		    B."ZZ_BATCH_ID"	   		        		   		        
		   		  FROM :TV_INVC_RAI_ITEM A, 
   		    	       (SELECT "HEADER_ID","ZZ_BATCH_ID" 
   		    	          FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN"
   		    	         WHERE "HEADER_ID" =  CUR_INVC_PARENT."ACCT_NUM"
   		    	           AND "ZZ_BATCH_ID" = LV_BATCH_ID) B 
		          WHERE B."HEADER_ID" = A."ACCT_NUM";
			   		        
	        INSERT INTO	#UPDATE_EH_DELETION_ORDR_MAIN_TV_INVC_TV (SRCDOC_ID) 
	        	 SELECT "SRCDOC_ID" 
	        	   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN"
				  WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
				    AND "ZZ_BATCH_ID" = LV_BATCH_ID;
			   		
			INSERT INTO	#UPDATE_EH_DELETION_ORDR_COND_TV_INVC_TV (SRCDOC_ID)				
			     SELECT COND."SRCDOC_ID" 
			       FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND" COND,
	                	(SELECT "SRCDOC_ID" 
	                	   FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN" 
					  	  WHERE "HEADER_ID" = CUR_INVC_PARENT."ACCT_NUM"
					  	    AND "ZZ_BATCH_ID" = LV_BATCH_ID) MAIN 
				  WHERE MAIN."SRCDOC_ID"=COND."SRCDOC_ID";
				  		
		END IF;
	
	END FOR;				  
	--------------------------------------------------------------------------------------------------
	-- Update NDB Tables
	-------------------------------------------------------------------------------------------------- 
			
	--  Updating the Source document Id, Reference Id, Header Id, RAI Item ID,Batch id 
	--  and RAI Timestamp in NDB INVOICE table for M2M Contracts
	
	UPDATE "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_BILLING" A
	  FROM "NDB_TV"."IFRS_R1.BELLTV.NDB_BELLTV::TV_BILLING" A
     INNER JOIN #UPDATE_TV_INVC B
	    ON A.ACCT_NUM  = B.ACCT_NUM
       AND A.BILL_FROM_DT  = B.BILL_FROM_DT
	   AND A.BILL_TO_DT    = B.BILL_TO_DT
	   AND A.ITEM_ID       = B.ITEM_ID 
	   SET "SRCDOC_ID"     = B."SRCDOC_ID",
		   "ORIGDOC_ID"    = B."ORIGDOCID",
		   "REFERENCE_ID"  = B."REFERENCE_ID",			
		   "HEADER_ID"     = B."ACCT_NUM",			
		   "RAI_ITEM_ID"   = B."RAI_ITEM_ID",
		   "BTCH_ID"       = B."BATCH_ID",			
		   "RAI_TS"        = LV_CUR_UTC
	 WHERE A."RAI_TS" IS NULL;
									 
	--  Update INVOICE Main Error Table
	
	UPDATE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH" A
	  FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_MAIN_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_MAIN_TV_INVC_TV B
	    ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 

	--  Update Order Cond Error Table
	
	UPDATE "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH" A
	  FROM "RAI_TV"."IFRS_R1.BELLTV.RAI_BELLTV::BELLTV_INVC_COND_EH" A
	 INNER JOIN #UPDATE_EH_DELETION_ORDR_COND_TV_INVC_TV B
		ON A.SRCDOC_ID=B.SRCDOC_ID
	   SET (DELETE_DATE, DELETED) = (CURRENT_DATE, 1); 		   		    										           
	
	-------------------------------------------------------------------------------------------------
	--  Set Overall Status
	-------------------------------------------------------------------------------------------------- 
	
	--  STATUS 0: Send the success message to scheduling tool to confirm this procedure has been
	--  executed successfully
	    IF(LV_ERROR_FLAG = 'Y') THEN		
	
	     OP_STATUS := LC_ERROR_TEXT; 
				
			
	    ELSE
	
	  	 OP_STATUS := LC_SUCCESS_TEXT; 	
					
		END IF;
	END;
END; 